{"version":3,"file":"static/js/694.1654a780.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/Pagination/Pagination.styled.js","images/svg-icons/angle-bouble-left.svg","images/svg-icons/angle-double-right.svg","components/Pagination/PaginationMap.jsx","components/Pagination/Pagination.jsx","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableLeads/TableComponents/clientTime.jsx","components/table/tableLeads/TableComponents/nextCall.jsx","components/table/tableLeads/TableComponents/TableComponets.Styled.js","components/table/tableLeads/TableComponents/Status.jsx","components/table/tableLeads/TableComponents/TimeZone.jsx","components/table/tableLeads/TableComponents/Country.jsx","components/table/tableLeads/TableComponents/Region.jsx","components/table/tableLeads/TableComponents/City.jsx","components/table/tableLeads/TableComponents/ManagerAssignReassign.jsx","components/table/tableLeads/TableComponents/AgentAssignReAssignBlock.jsx","components/table/tableLeads/TableComponents/CustomAssignLeadCheckbox.jsx","components/table/tableLeads/tableLeads.jsx","components/FilterBlock/FilterBlock.styled.js","redux/Filter/filter-selectors.js","components/FilterBlock/FilterBlock.jsx","hooks/useFilter.js","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const PaginationStyled = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: auto;\n\n    .pagination-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n\n    .left-button-block,\n    .right-button-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n    .paginaton-button{\n        border-radius: 50%;\n        padding: 0.25rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        scale: calc(1);\n        transition: scale ${p => p.theme.transition.main_transition};\n\n        & .arrow-icon{\n            width: 1rem;\n            height: 1rem;\n        }\n        & .icon{\n            width: 0.75rem;\n            height: 0.75rem;\n        }\n        & .left-arrow{\n            transform: rotate(90deg);\n        }\n        & .right-arrow{\n            transform: rotate(-90deg);\n        }\n        &:hover{\n            scale: calc(1.2);\n        }\n    }\n\n    .right-button-block{\n        & button {\n            background-color: ${p => p.theme.color.primary_green_lite};\n\n            & .right-arrow{\n                stroke: ${p => p.theme.color.primary_black};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_black};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.primary_grey};\n                }\n                & .right-arrow{\n                    stroke: ${p => p.theme.color.primary_grey};\n                }\n            }\n\n        }\n        \n    }\n\n    .left-button-block{\n        & button {\n            background-color: ${p => p.theme.color.for_modal_color};\n\n            & .left-arrow{\n                stroke: ${p => p.theme.color.primary_white};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_white};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .left-arrow{\n                    stroke: ${p => p.theme.color.background};\n                }\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.background};\n                }\n            }\n        }\n    }\n\n    .button{\n        padding: 0.375rem;\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const PaginationMapStyled = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.375rem;\n\n    .content-list{\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        max-width: 17.875rem;\n        overflow-x: auto;\n        scroll-snap-type: x mandatory;\n        padding: 0 2px;\n\n        &::-webkit-scrollbar {\n            display: none;\n        }\n        &::-webkit-scrollbar-thumb {\n            display: none;\n        }\n    }\n\n    .content-item {\n        scroll-snap-align: center;\n        padding: 0;\n    }\n\n    .button-background{\n        font-size: 0.75rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0.25rem;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 50%;\n        background-color: pink;\n        background-color: ${p => p.theme.color.for_modal_color};\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n        line-height: 0.5;\n\n        &:hover{\n            background-color: ${p => p.theme.color.primary_green_lite};\n            color: ${p => p.theme.color.primary_black};\n        }\n    }\n\n    .button-active{\n        background-color: ${p => p.theme.color.primary_green_lite};\n        color: ${p => p.theme.color.primary_black};\n    }\n`","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleBoubleLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-right\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-right\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-right\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359zM15.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleBoubleLeft);\nexport default __webpack_public_path__ + \"static/media/angle-bouble-left.318d2cbb1e36601ea73d1e1b12583d67.svg\";\nexport { ForwardRef as ReactComponent };","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleDoubleRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-left\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-left\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-left\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359zM15.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleDoubleRight);\nexport default __webpack_public_path__ + \"static/media/angle-double-right.0005b6c7ffad737a3008b46f779d2062.svg\";\nexport { ForwardRef as ReactComponent };","import { PaginationMapStyled } from \"./Pagination.styled\";\nimport { forwardRef } from \"react\";\n\n\nexport const PaginationMap = forwardRef(({\n    firstVisible,\n    clickOnFirstVisible,\n    listRef,\n    elements,\n    toggleButtonBackground,\n    setButtonActive,\n    lastVisible,\n    clickOnLastVisible\n}, ref) => {\n\n\n    return(\n        <PaginationMapStyled>\n            {firstVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnFirstVisible}\n                ><p>...</p>\n                </button>\n            )}\n            <ul className=\"content-list\" ref={listRef}>\n                {elements.map((element, index) => (\n                    <li className=\"content-item\" key={index}>\n                        <button type=\"button\" \n                            className={`button-background ${toggleButtonBackground(index + 1)}`}\n                            onClick={() => setButtonActive(index + 1)}\n                        ><p>{element}</p>\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {lastVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnLastVisible}\n                ><p>...</p>\n                </button>\n            )}\n        </PaginationMapStyled>\n    )\n});","import { PaginationStyled } from \"./Pagination.styled\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {ReactComponent as ArrowDoubleLeft} from \"../../images/svg-icons/angle-bouble-left.svg\";\nimport {ReactComponent as ArrowDoubleRight} from \"../../images/svg-icons/angle-double-right.svg\";\nimport {ReactComponent as SingleArrow} from \"../../images/svg-icons/arrow-down.svg\";\nimport { PaginationMap } from \"./PaginationMap\";\nimport { getAllLeads } from \"../../redux/Lead/lead-operation\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const Pagination = () => {\n    const dispatch = useDispatch();\n    const { isAdmin, isManager, isConversion } = useAuth();\n    const { totalPages, leadOffice, leadsAmountPerPage } = useLead();\n    const { userLeadsComponent } = useUser();\n    const [count, setCount] = useState(1);\n    const [firstVisible, setFirstVisible] = useState(false);\n    const [lastVisible, setLastVisible] = useState(false);\n    const [lastVisibleValue, setLastVisibleValue] = useState(0);\n    const [firstVisibleValue, setFirstVisibleValue] = useState(0);\n    const [decreaseEnable, setDecreaseEnable] = useState(false);\n    const [increaseEnable, setIncreaseEnable] = useState(false);\n    const listRef = useRef(null);  \n    \n    \n    let amount;\n    if (totalPages) {\n        amount = Number(totalPages);\n    } else {\n        amount = 1;\n    }\n    const elements = Array.from({ length: amount }, (_, index) => index + 1);\n\n\n    const page = count.toString();\n    const limit = leadsAmountPerPage.toString();\n    \n\n    useEffect(() => {\n        if ((isAdmin || isManager || isConversion) && !userLeadsComponent) {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n                branch: leadOffice,\n            }));\n        }\n    },[dispatch, isAdmin, isConversion, isManager, leadOffice, limit, page, userLeadsComponent]);\n       \n     \n\n    useEffect(() => {\n        if (listRef.current) {\n          const activeButton = listRef.current.querySelector('.button-active');\n          if (activeButton) {\n            activeButton.scrollIntoView({\n              behavior: 'smooth',\n              block: 'nearest',\n              inline: 'center'\n            });\n          }\n        }\n    }, [count]);\n\n    \n    useEffect(() => {\n        if (elements.length > 9) {\n            setLastVisible(true);\n            setLastVisibleValue(10);\n        }\n        if (elements.length > 1) {\n            setIncreaseEnable(true);\n        }\n        if (elements.length < 9) {           \n            setLastVisible(false);\n        }\n        if (elements.length === 1) {\n            setIncreaseEnable(false);\n            setLastVisible(false);\n        }\n    },[elements.length]);\n    \n\n    const toggleButtonBackground = (index) => {\n        return index === count ? 'button-active' : '';\n    };\n\n\n    const increaseCount = () => {\n        if (count <= (elements.length - 1)) {\n            setCount(prevState => prevState + 1);\n            setDecreaseEnable(true);\n        }\n        if((elements.length - count) <= 5){\n            setLastVisible(false);\n        }\n        if (count + 1 === elements.length) {\n            setIncreaseEnable(false);\n        }\n        if ((elements.length > 9) && ((count >= 5))) { \n            setFirstVisible(true);\n            const calculatedLastValue = count + 6;\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 4;\n            setFirstVisibleValue(calculatedFirstValue > (elements.length - 9) ? (elements.length - 9) : calculatedFirstValue);\n        }\n    };\n \n\n    const decreaseCount = () => {\n        if (count >= 2) {\n            setCount(prevState => prevState - 1);\n            setIncreaseEnable(true);\n        }\n        if (count - 1 <= 1) {\n            setDecreaseEnable(false);\n        }\n        if((elements.length > 9) && ((elements.length - count) >= 4)){\n            setLastVisible(true);\n            const calculatedLastValue = Math.max(10, count + 4);\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 6;\n            setFirstVisibleValue(calculatedFirstValue > 1 ? calculatedFirstValue : 1); \n        }\n        if ((elements.length > 9) && ((count <= 6))) { \n            setFirstVisible(false);\n        }\n    };\n \n\n    const setButtonActive = (index) => {\n        setCount(index);\n    \n        const remainingElements = elements.length - index;\n        const isLargeList = elements.length > 9;\n        setFirstVisible(isLargeList && index > 5);\n        setLastVisible(isLargeList && remainingElements >= 5);\n    \n        if (isLargeList) {\n\n            const calculatedLastValue = Math.max(Math.min(index + 5, elements.length), 10);\n            const maxFirstValue = elements.length - 9;\n            const calculatedFirstValue = Math.max(index - 5, 1);\n            const finalFirstValue = calculatedFirstValue > maxFirstValue ? maxFirstValue : calculatedFirstValue;\n    \n            setLastVisibleValue(calculatedLastValue);\n            setFirstVisibleValue(finalFirstValue);\n\n        } else {\n            setFirstVisible(false);\n            setLastVisible(false);\n        }\n\n        setDecreaseEnable(index > 1);\n        setIncreaseEnable(index < elements.length);\n    };\n\n\n    const toEnd = () => {\n        setCount(elements.length);\n        setIncreaseEnable(false);\n        setDecreaseEnable(true);\n        if(elements.length > 9){\n            setLastVisible(false);\n            setFirstVisible(true);\n            setLastVisibleValue(elements.length);\n            setFirstVisibleValue(elements.length - 9);\n        }\n    };\n\n\n    const toBegin = () => {\n        setCount(1);\n        setIncreaseEnable(true);\n        setDecreaseEnable(false);\n        if(elements.length > 9){\n            setLastVisible(true);\n            setFirstVisible(false);\n            setLastVisibleValue(10);\n            setFirstVisibleValue(0);\n        }\n    };\n\n\n    const clickOnFirstVisible = () => {\n        setCount(firstVisibleValue);\n        setIncreaseEnable(true);\n\n        const calculatedFirstValue = firstVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(Math.max(newFirstVisibleValue, 0));\n        \n        if (firstVisibleValue === 1) {\n            setDecreaseEnable(false);\n        }\n\n        if (count <= 10) {\n            setFirstVisible(false);\n        }\n        \n        if (elements.length >= count) {\n            setLastVisible(true);\n        }\n\n        const calculatedLastValue = firstVisibleValue + 5;\n        const newLastVisibleValue = Math.min(Math.max(calculatedLastValue, 10), elements.length);\n        setLastVisibleValue(newLastVisibleValue);\n    };\n\n\n    const clickOnLastVisible = () => {\n        setCount(lastVisibleValue);\n        setFirstVisible(true);\n        setDecreaseEnable(true);\n        \n        const newLastVisibleValue = Math.min(elements.length, lastVisibleValue + 5);\n        setLastVisibleValue(newLastVisibleValue);\n\n        if (newLastVisibleValue  >= elements.length) {\n            setLastVisible(false);\n        }\n        if (lastVisibleValue === elements.length) {\n            setIncreaseEnable(false);\n        }\n\n        const calculatedFirstValue = lastVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(newFirstVisibleValue);\n    };\n\n   \n    \n    return(\n        <PaginationStyled>\n            <div className=\"pagination-block\">\n                <div className=\"left-button-block\">\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toBegin}\n                        disabled={!decreaseEnable}\n                    >\n                        <ArrowDoubleRight className=\"arrow-icon\" width={16} height={16}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={decreaseCount}\n                        disabled={!decreaseEnable}\n                    >\n                        <SingleArrow className=\"icon left-arrow\" width={12} height={12}/>\n                    </button>\n                </div>\n                <PaginationMap\n                    firstVisible={firstVisible}\n                    clickOnFirstVisible={clickOnFirstVisible}\n                    listRef={listRef}\n                    elements={elements}\n                    toggleButtonBackground={toggleButtonBackground}\n                    setButtonActive={setButtonActive}\n                    lastVisible={lastVisible}\n                    clickOnLastVisible={clickOnLastVisible}\n                />\n                <div className=\"right-button-block\">\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={increaseCount}\n                        disabled={!increaseEnable}\n                    >\n                        <SingleArrow className=\"icon right-arrow\" width={12} height={12}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toEnd}\n                        disabled={!increaseEnable}\n                    >\n                        <ArrowDoubleLeft className=\"arrow-icon\" width={16} height={16}/> \n                    </button>\n                </div>\n            </div>\n        </PaginationStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        justify-content: ${p => p.$isAdmin ? 'none' : 'center'};\n        margin-bottom: 1rem;\n    }\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        margin-right: 32%;\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem\n    }\n\n    .small-table{\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n\n        & tbody{\n            & tr{\n                & td:last-child{\n                    border-right: none;\n                }\n            }\n\n            & tr:last-child{\n                & td{\n                    border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n                }\n            }\n        }\n    }\n`","import styled from \"styled-components\";\n\n\nexport const TableListStyled = styled.div`\n  color: ${p => p.theme.color.primary_white};\n  overflow-y: auto;\n  height: 74dvh;\n  position: relative;\n  border: 1px solid ${p => p.theme.color.primary_green_lite};\n  border-right: none;\n  border-radius: 12px;\n\n  @media screen and (min-width: 834px){\n    height: 71dvh;\n  }\n\n  @media screen and (min-width: 1236px){\n    height: ${props => props.$userLeadsComponent ? '73dvh' : '66.2dvh'};\n  }\n\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n    background-color: ${p => p.theme.color.primary_grey};\n    border-radius: 24px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-color: ${p => p.theme.color.primary_green_lite};\n  }\n\n\n  & table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: auto;\n\n    & thead{\n      position: sticky;\n      top: 0;\n      z-index: 2;\n\n      & th{\n        background-color: ${p => p.theme.color.background3};\n        border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n        padding: 1rem 0.25rem 1rem 0.25rem;\n\n\n        &:last-child{\n          border-right: none;\n        }\n      }\n    }\n  }\n\n  .back-color{\n    background-color: #369469;\n    box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px 10px inset;\n  }\n\n  & tr, td, th{\n    text-align: center;\n  }\n\n  & tbody{\n    & td {\n      border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n      border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n      padding:0.5rem 0.25rem;\n    }\n\n    & tr:last-child{\n      & td{\n        border-bottom: none;\n      }\n    }\n  }\n\n  .TableHeaderName{\n    font-weight: 600;\n    font-size: 0.9rem;\n    overflow-wrap: break-word;\n    text-align: center;\n  }\n\n  .TableHeaderItem {\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n  }\n\n  #cityColumn,\n  #regionColumn,\n  #countryColumn,\n  #managerColumn,\n  #agentColumn {\n    padding: 0.5rem 0rem;\n  }\n\n  .calendar-cont{\n    width: 100%;\n    height: 100%;\n    \n    & input{\n      width: 72px;\n      border: none;\n      background: none;\n      padding: 0;\n      text-align: center;\n      color: ${props => props.theme.color.primary_white};\n      transition: border ${props => props.theme.transition.main_transition};\n\n      &:focus,\n      &:hover {\n        color: ${props => props.theme.color.primary_green_lite};\n\n        &::placeholder{\n        color: ${props => props.theme.color.primary_green_lite};\n      }\n      }\n      \n      &::placeholder{\n        color: ${props => props.theme.color.primary_white};\n      }\n    }\n  }\n\n  .check-btn{\n    font-size: 0.5rem;\n    color: ${(props) => props.theme.color.primary_black};\n    background-color: ${p => p.theme.color.primary_green_lite};\n    border: 1px solid ${p => p.theme.color.primary_green_lite};\n    padding: 0.25rem 0.25rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    transition: color ${p => p.theme.transition.main_transition};\n    flex-wrap: nowrap;\n\n    &:hover{\n      color: ${props => props.theme.color.primary_grey};\n    }\n  }\n`;\n\n\n\n\n\n\n\n\n\n\nexport const CustomCheckboxStyled = styled.div`\n\n  .custom-checkbox{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .checkbox {\n    margin-top: 5px;\n    width: 1rem;\n    height: 1rem;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n  }\n  \n  .custom-checkbox-before, .custom-checkbox-after{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n  }\n  .custom-checkbox-before{\n    opacity: 1;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .custom-checkbox-after{\n    opacity: 0;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .checkbox:focus + .custom-checkbox > .custom-checkbox-before{\n    outline: 3px solid ${p => p.theme.color.primary_green_lite};\n    border-radius: 2px;\n    outline-offset: -3px; \n  }\n\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-after{\n    opacity: 1;\n  }\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-before{\n    opacity: 0;\n  }\n`\n","import { useState, useEffect } from \"react\";\n\n\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const currentUTCTime  = new Date(\n      currentTime.getTime() + currentTime.getTimezoneOffset() * 60000\n    );     \n\n    const clientTime = new Date(\n      currentUTCTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n  \n\n  return (\n    <>\n      {calculateClientTime(lead.timeZone)}\n    </>\n  );\n};\n","import Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/dark.css\";\nimport React, { useState, useEffect ,useMemo, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../../redux/Lead/lead-operation\";\n\n\n\nexport const NextCall = React.memo(({ lead }) => {\n  const [date, setDate] = useState(null);\n  const dateNow = useRef(new Date());\n  const dispatch = useDispatch();\n\n\n  const nextCallDate = useMemo(() => {\n    return lead.nextCall ? new Date(lead.nextCall) : null;\n  }, [lead.nextCall]);\n\n\n  const isOverdue = date && date < dateNow.current;\n  const timeLeft = date ? date - dateNow.current : 0;\n  const isAlmostDue = !isOverdue && timeLeft <= 6 * 60 * 60 * 1000;\n  const isToday = date && dateNow.current.toDateString() === date.toDateString();\n  const minDateOption = date && date > dateNow.current ? \"today\" : null;\n  const minTimeOption = isToday ? dateNow.current.toTimeString().slice(0, 5) : null;\n\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setDate(nextCallDate);\n    } else {\n      setDate(null);\n    }\n  }, [lead.nextCall, nextCallDate]);\n\n\n  const submitNextCallDate = () => {\n    if ((date !== (nextCallDate || null)) && (date !== dateNow.current)) {\n      if (isOverdue) {\n        setDate(null);\n      } else {\n        const updatedDate = date.toISOString().slice(0, 16)\n        dispatch(patchNextCall({\n          id: lead._id, \n          leadNextcall: updatedDate \n        }))\n      }\n    }\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\"\n      style={{\n        backgroundColor: isOverdue\n          ? '#ff000082'\n          : isAlmostDue\n          ? '#223f53'\n          : 'transparent'\n      }}\n    >\n      <div className=\"calendar-cont\">\n        <Flatpickr\n          data-enable-time\n          value={date ? date : ''}\n          onChange={([date]) => setDate(date)}\n          options={{\n            dateFormat: \"d.m.Y  H:i\",\n            minDate: minDateOption,\n            minTime: minTimeOption,\n            weekNumbers: true,\n            \"locale\": {\n              \"firstDayOfWeek\": 1\n            },\n          }}\n          placeholder=\"Select Date/ Time\"\n          onClose={submitNextCallDate}\n        />   \n      </div>\n    </td>\n  );\n});\n","import styled from \"styled-components\"\n\n\nexport const StatusesStyled = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .status-btn{\n        color: ${p => p.theme.color.primary_white};\n        padding: 0;\n        width: 100%;\n        min-height: 1.3rem;\n        background-color: transparent;\n    }\n\n    .arrow-svg {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        stroke: black;\n        stroke: ${p => p.theme.color.primary_green_lite};\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        top: -4px;\n        right: -2px;\n        transform: rotate(-90deg);\n    } \n    \n    .arrow-svg-open {\n        transform: rotate(90deg);\n    } \n\n    .status-list{\n        height: 0rem;\n        position: absolute;\n        overflow-y: auto;\n        z-index: 1;\n        top: -0.5rem;\n        left: ${props => props.$isTimeZone ? '115%' : '110%'};\n        border-radius: 0.5rem;\n        padding: 0.25rem;\n        gap: 0.75rem;\n        background-color: ${p => p.theme.color.background2};\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-evenly;\n        visibility: hidden;\n        opacity: 0;\n        font-size: 0.25rem;\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        transform: scale(0.5);\n        transform-origin: left top;\n        transition: all ${p => p.theme.transition.main_transition};\n\n\n        &::-webkit-scrollbar {\n            width: 0.25rem;\n            background-color: transparent;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background-color: ${p => p.theme.color.primary_grey};\n            border-radius: 5px;\n        }\n    }\n\n    .status-list-visible{\n        height: 11.7rem;\n        width: ${props => props.$isTimeZone ? '4rem' : '7rem'};\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .status-list-visible-adjusted{\n        top: -10.1rem;\n        height: 11.7rem;\n        width: ${props => props.$isTimeZone ? '4rem' : '7rem'};\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .status-item{\n        cursor: pointer;\n\n        & .drop-cont-text{\n            transition: color ${p => p.theme.transition.main_transition};\n            color: ${p => p.theme.color.primary_white};\n\n            &:hover{\n                color: ${p => p.theme.color.primary_green_lite}\n            }\n        }\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const CountryStyled = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .data-btn{\n        color: ${props => {\n            if (props.$isCountry || props.$isRegion || props.$isCity){\n                return props.theme.color.primary_white;\n            } else {\n                return props.theme.color.primary_grey;\n            }\n        }};\n        padding: 0rem 0.25rem;\n        width: 100%;\n        min-height: 1.3rem;\n        background-color: transparent;\n    }\n\n    .arrow-icon {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        stroke: black;\n        stroke: ${p => p.theme.color.primary_green_lite};\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        bottom: -5px;\n        left: 4px;\n        transform: rotate(0deg);\n    } \n    \n    .arrow-icon-open {\n        transform: rotate(180deg);\n    }\n\n    .input-form{\n        visibility: hidden;\n        opacity: 0;\n        position: absolute;\n        z-index: 1;\n        left: 0;\n        top: 145%;\n        transform: scale(0);\n        background-color: ${p => p.theme.color.background2};\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        border-radius: 0.75rem;\n        padding: 0.8rem 0.5rem;\n        transform-origin: left top;\n        transition: all ${p => p.theme.transition.main_transition};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n        \n        \n        & input{\n            text-align: center;\n            padding: 0.25rem;\n            border-radius: 0.75rem;\n            border: 1px solid ${p => p.theme.color.primary_green_lite};\n            background: transparent;\n            font-size: 0.8rem;\n            font-weight: 400;\n            color: ${p => p.theme.color.primary_white};\n            outline: none;\n\n            &::placeholder{\n                color: ${p => p.theme.color.primary_grey};\n                letter-spacing: 0.04em;\n            }\n\n            &:focus{\n                border: 1px solid ${p => p.theme.color.primary_white};\n            }\n        }\n\n        & .submit-button{\n            color: ${(props) => props.theme.color.primary_black};\n            background-color: ${(p) => p.theme.color.primary_green_lite};\n            font-size: 0.8rem;\n            font-weight: 500;\n            width: 50%;\n            border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n            border-radius: 0.5rem;\n            padding: 0.25rem;\n            cursor: pointer;\n            transition: color ${p => p.theme.transition.main_transition};\n\n            &:hover {\n                color: ${(props) => props.theme.color.primary_grey};\n            }\n\n            &:disabled{\n                display: none;\n            }\n        }\n    }\n\n    .input-form-visible{\n        visibility: visible;\n        opacity: 1;\n        transform: scale(1);\n        transform-origin: left top;\n    }\n\n    .input-form-visible-adjusted{\n        top: -325%;\n        visibility: visible;\n        opacity: 1;\n        transform: scale(1);\n        transform-origin: left top;\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const AssignReassignBlockStyled = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .manager-btn{\n        color: ${p => p.theme.color.primary_white};\n        padding: 0;\n        width: 100%;\n        min-height: 1.3rem;\n        background-color: transparent;\n        pointer-events: ${props => props.$isSelfCreated && 'none'};\n    }\n\n    .arrow-svg {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        stroke: black;\n        stroke: ${p => p.theme.color.primary_green_lite};\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        top: -4px;\n        right: 2px;\n        transform: rotate(-90deg);\n    } \n    \n    .arrow-svg-open {\n        transform: rotate(90deg);\n    } \n\n    .users-list{\n        height: 0rem;\n        position: absolute;\n        overflow-y: auto;\n        z-index: 1;\n        top: -0.5rem;\n        left: ${props => props.$isConversionManager ? '102%' : '106%'};\n        border-radius: 0.5rem;\n        padding: 0.25rem;\n        gap: 0.75rem;\n        background-color: ${p => p.theme.color.background2};\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        visibility: hidden;\n        opacity: 0;\n        font-size: 0.25rem;\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        transform: scale(0.5);\n        transform-origin: left top;\n        transition: all ${p => p.theme.transition.main_transition};\n\n\n        &::-webkit-scrollbar {\n            width: 0.25rem;\n            background-color: transparent;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background-color: ${p => p.theme.color.primary_grey};\n            border-radius: 5px;\n        }\n    }\n\n    .users-list-visible{\n        height: 11.7rem;\n        width: 8.7rem;\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .users-list-visible-adjusted{\n        top: -9.9rem;\n        height: 11.7rem;\n        width: 8.7rem;\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .user-item{\n        cursor: pointer;\n\n        & .drop-cont-text{\n            transition: color ${p => p.theme.transition.main_transition};\n            color: ${p => p.theme.color.primary_white};\n            text-align: left;\n\n            &:hover{\n                color: ${p => p.theme.color.primary_green_lite}\n            }\n        }\n    }\n\n    .initial-item{\n        pointer-events: none;\n        font-weight: 500;\n        font-size: 1rem;\n        color: ${p => p.theme.color.primary_green_lite};\n    }\n`","import { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { StatusesStyled } from \"./TableComponets.Styled\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchStatus } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\nexport const Status = React.memo(({\n    index, \n    leads, \n    lead, \n    status, \n    isAdmin, \n    isManager, \n    isConversion, \n}) => {\n    const [isStatus, setStatus] = useState(false);\n    const [openStatus, setOpenStatus] = useState(new Map());\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const statusRefs = useRef(new Map());\n    const dispatch = useDispatch();\n    \n\n    useEffect(() => {\n        if(status && status !== ''){\n            setStatus(true);\n        } else {\n            setStatus(false);\n        }\n    },[status]);\n\n\n    const toggleStatusMenuDrop = (leadId) => {\n        setOpenStatus(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n    \n    \n    const toggleStatusDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openStatus.get(leadId) ? 'status-list-visible-adjusted' : '';\n            }\n        } else {\n            return openStatus.get(leadId) ? 'status-list-visible' : '';\n        }\n    };\n\n    \n    const toggleStatusDropArrow = (leadId) => {\n        return openStatus.get(leadId) ? 'arrow-svg-open' : '';\n    };\n    \n    \n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenStatus(new Map());\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openStatus);\n        let shouldUpdate = false;\n\n        statusRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openStatus.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenStatus(newOpenMenus);\n        }\n    }, [openStatus]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const submitStatus = (newStatus) => {\n        if (isAdmin || isManager || isConversion) {\n            const dataStatus = {\n                id: lead._id,\n                leadStatus: newStatus\n            };\n            setUpdatingLeadId(lead._id);\n            dispatch(patchStatus(dataStatus)).finally(() => {\n                setUpdatingLeadId(null);\n            });\n            setOpenStatus(new Map());\n        }\n    };\n\n\n    return (\n        <StatusesStyled ref={el => {\n            if (el) {\n                statusRefs.current.set(lead._id, el);\n            }\n        }}>\n            {updatingLeadId === lead._id ? (\n                <UpdateLoading /> \n            ) : (\n                <>\n                    <button className=\"status-btn\" type='button'\n                        onClick={() => toggleStatusMenuDrop(lead._id)}\n                    >\n                        {isStatus ? lead.status : 'N/A'}\n                    </button>\n                    <ArrowDown className={`arrow-svg ${toggleStatusDropArrow(lead._id)}`}/>\n                    <ul className={`status-list ${toggleStatusDropCont(lead._id, leads)}`}>\n                        {status.map((status, index) => (\n                            <li className=\"status-item\" key={index}>\n                                <p className=\"drop-cont-text\"\n                                    onClick={() => submitStatus(status)}\n                                >{status}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </>\n                )\n            }\n        </StatusesStyled>\n    );\n});","import { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { StatusesStyled } from \"./TableComponets.Styled\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchTimeZone } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const TimeZone = React.memo(({\n    index, \n    leads, \n    lead, \n    timeZone, \n    isAdmin, \n    isManager, \n    isConversion\n}) => {\n    const [isTimeZone, setTimeZone] = useState(false);\n    const [openTimeZone, setOpenTimeZone] = useState(new Map());\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const timeZoneRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(timeZone && timeZone !== ''){\n            setTimeZone(true);\n        } else {\n            setTimeZone(false);\n        }\n    },[timeZone]);\n\n\n    const toggleTimeZoneMenuDrop = (leadId) => {\n        setOpenTimeZone(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n    \n\n    const toggleTimeZoneDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openTimeZone.get(leadId) ? 'status-list-visible-adjusted' : '';\n            }\n        } else {\n            return openTimeZone.get(leadId) ? 'status-list-visible' : '';\n        }\n    };\n\n    \n    const toggleTimeZoneDropArrow = (leadId) => {\n        return openTimeZone.get(leadId) ? 'arrow-svg-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenTimeZone(new Map());\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openTimeZone);\n        let shouldUpdate = false;\n\n        timeZoneRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openTimeZone.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenTimeZone(newOpenMenus);\n        }\n    }, [openTimeZone]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const submitTimeZone = (timeZone) => {\n        if (isAdmin || isManager || isConversion) {\n            const dataTimeZone = {\n                id: lead._id,\n                leadTimeZone: timeZone\n            }\n            setUpdatingLeadId(lead._id);\n            dispatch(patchTimeZone(dataTimeZone)).finally(() => {\n                setUpdatingLeadId(null);\n            });\n            setOpenTimeZone(new Map());\n        }\n    };\n\n\n    return(\n        <StatusesStyled ref={el => {\n            if (el) {\n                timeZoneRefs.current.set(lead._id, el);\n            }}}\n            $isTimeZone={isTimeZone}\n        >   \n            {updatingLeadId === lead._id ? (\n                <UpdateLoading/>\n            ) : (\n                <>\n                    <button className=\"status-btn\" type='button'\n                        onClick={() => toggleTimeZoneMenuDrop(lead._id)}\n                    >\n                        {isTimeZone ? lead.timeZone : 'N/A'}\n                    </button>\n                    <ArrowDown className={`arrow-svg ${toggleTimeZoneDropArrow(lead._id)}`}/>\n                    <ul className={`status-list ${toggleTimeZoneDropCont(lead._id, leads)}`}>\n                        {timeZone.map((zone, index) => (\n                            <li className=\"status-item\" key={index}>\n                                <p className=\"drop-cont-text\"\n                                    onClick={() => submitTimeZone(zone)}\n                                >{zone}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </StatusesStyled>\n    );\n});","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchCountryLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const Country = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isCountry, setCountry] = useState(false);\n    const [openCountry, setOpenCountry] = useState(new Map());\n    const [countryValue, setCountryValue] = useState('');\n    const [isCountryEnable, setCountryEnable] = useState(false);\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const countryRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.country && lead.country !== ''){\n            setCountry(true);\n        } else {\n            setCountry(false);\n        }\n    },[lead.country]);\n\n\n    const toggleCountryMenuDrop = (leadId) => {\n        setOpenCountry(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setCountryValue('');\n        setCountryEnable(false);\n    };\n\n\n    const toggleCountryDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openCountry.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openCountry.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleCountryDropArrow = (leadId) => {\n        return openCountry.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenCountry(new Map());\n            setCountryValue('');\n            setCountryEnable(false);\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openCountry);\n        let shouldUpdate = false;\n\n        countryRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openCountry.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenCountry(newOpenMenus);\n        }\n    }, [openCountry]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onCountryValueChange = (e) => {\n        setCountryValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setCountryEnable(true);\n        } else {\n            setCountryEnable(false);\n        }\n    };\n\n\n    const saveCountryValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedCountryValue = countryValue\n            .split(' ')\n            .map(word => {\n                if (word === word.toUpperCase()) {\n                    return word;\n                }\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n            })\n            .join(' ');\n\n            const dataCountryLead = {\n                id: lead._id,\n                leadCountry: formattedCountryValue\n            }\n            setUpdatingLeadId(lead._id);\n            dispatch(patchCountryLead(dataCountryLead)).finally(() => {\n                setUpdatingLeadId(null);\n            });\n            setCountryEnable(false);\n            setCountryValue('');\n            setOpenCountry(new Map());\n        }\n    };\n\n\n    return (\n      <CountryStyled ref={el => {\n        if (el) {\n            countryRefs.current.set(lead._id, el);\n        }}}\n        $isCountry={isCountry}\n      > \n        {updatingLeadId === lead._id ? (\n            <UpdateLoading/>\n        ) : (\n            <>\n                <button className=\"data-btn\" type='button'\n                    onClick={() => toggleCountryMenuDrop(lead._id)}\n                >\n                    {isCountry ? lead.country : 'Enter Country'}\n                </button>\n                <ArrowDown className={`arrow-icon ${toggleCountryDropArrow(lead._id, leads)}`}/>\n                <form className={`input-form ${toggleCountryDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n                    <label htmlFor=\"country\">\n                        <input type=\"text\"\n                            value={countryValue}\n                            onChange={onCountryValueChange}\n                            id='country'\n                            name=\"country\"\n                            placeholder=\"Enter Country\"\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" \n                        className=\"submit-button\"\n                        disabled={!isCountryEnable}\n                        onClick={saveCountryValue}\n                        >Save\n                    </button>\n                </form>\n            </>\n        )}\n      </CountryStyled>\n    );\n};","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchRegionLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const Region = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isRegion, setRegion] = useState(false);\n    const [openRegion, setOpenRegion] = useState(new Map());\n    const [regionValue, setRegionValue] = useState('');\n    const [isRegionEnable, setRegionEnable] = useState(false);\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const regionRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.region && lead.region !== ''){\n            setRegion(true);\n        } else {\n            setRegion(false);\n        }\n    },[lead.region]);\n\n\n    const toggleRegionMenuDrop = (leadId) => {\n        setOpenRegion(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setRegionValue('');\n        setRegionEnable(false);\n    };\n\n\n    const toggleRegionDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openRegion.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openRegion.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleRegionDropArrow = (leadId) => {\n        return openRegion.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenRegion(new Map());\n            setRegionValue('');\n            setRegionEnable(false);\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openRegion);\n        let shouldUpdate = false;\n\n        regionRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openRegion.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenRegion(newOpenMenus);\n        }\n    }, [openRegion]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onRegionValueChange = (e) => {\n        setRegionValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setRegionEnable(true);\n        } else {\n            setRegionEnable(false);\n        }\n    };\n\n\n    const saveRegionValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedRegionValue = regionValue\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' ');\n\n            const dataRegionLead = {\n                id: lead._id,\n                leadRegion: formattedRegionValue\n            };\n            setUpdatingLeadId(lead._id);\n            dispatch(patchRegionLead(dataRegionLead)).finally(() => {\n                setUpdatingLeadId(null);\n            });\n            setRegionEnable(false);\n            setRegionValue('');\n            setOpenRegion(new Map());\n        }\n    };\n\n\n    return(\n        <CountryStyled ref={el => {\n            if (el) {\n                regionRefs.current.set(lead._id, el);\n            }}}\n            $isRegion={isRegion}\n        >\n            {updatingLeadId === lead._id ? (\n                <UpdateLoading/>\n            ) : (\n                <>\n                    <button className=\"data-btn\" type='button'\n                        onClick={() => toggleRegionMenuDrop(lead._id)}\n                    >\n                        {isRegion ? lead.region : 'Enter Region'}\n                    </button>\n                    <ArrowDown className={`arrow-icon ${toggleRegionDropArrow(lead._id, leads)}`}/>\n                    <form className={`input-form ${toggleRegionDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n                        <label htmlFor=\"region\">\n                            <input type=\"text\"\n                                value={regionValue}\n                                onChange={onRegionValueChange}\n                                id='region'\n                                name=\"region\"\n                                placeholder=\"Enter Region\"\n                                required\n                            />\n                        </label>\n                        <button type=\"submit\" \n                            className=\"submit-button\"\n                            disabled={!isRegionEnable}\n                            onClick={saveRegionValue}\n                            >Save\n                        </button>\n                    </form>\n                </>\n            )}\n        </CountryStyled>\n    );\n};","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchCityLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const City = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isCity, setCity] = useState(false);\n    const [openCity, setOpenCity] = useState(new Map());\n    const [cityValue, setCityValue] = useState('');\n    const [isCityEnable, setCityEnable] = useState(false);\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const cityRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.city && lead.city !== ''){\n            setCity(true);\n        } else {\n          setCity(false);\n        }\n    },[lead.city]);\n\n\n    const toggleCityMenuDrop = (leadId) => {\n        setOpenCity(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setCityValue('');\n        setCityEnable(false);\n    };\n\n\n    const toggleCityDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openCity.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openCity.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleCityDropArrow = (leadId) => {\n        return openCity.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenCity(new Map());\n            setCityValue('');\n            setCityEnable(false);\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openCity);\n        let shouldUpdate = false;\n\n        cityRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openCity.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenCity(newOpenMenus);\n        }\n    }, [openCity]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onCityValueChange = (e) => {\n        setCityValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setCityEnable(true);\n        } else {\n            setCityEnable(false);\n        }\n    };\n\n\n    const saveCityValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedCityValue = cityValue\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' ');\n\n            const dataCityLead = {\n                id: lead._id,\n                leadCity: formattedCityValue\n            }\n            setUpdatingLeadId(lead._id);\n            dispatch(patchCityLead(dataCityLead)).finally(() => {\n                setUpdatingLeadId(null);\n            });\n            setCityEnable(false);\n            setCityValue('');\n            setOpenCity(new Map());\n        }\n    };\n\n\n    return(\n        <CountryStyled ref={el => {\n            if (el) {\n                cityRefs.current.set(lead._id, el);\n            }}}\n            $isCity={isCity}\n        >\n            {updatingLeadId === lead._id ? (\n                <UpdateLoading/>\n            ) : (\n                <>\n                    <button className=\"data-btn\" type='button'\n                        onClick={() => toggleCityMenuDrop(lead._id)}\n                    >\n                        {isCity ? lead.city : 'Enter City'}\n                    </button>\n                    <ArrowDown className={`arrow-icon ${toggleCityDropArrow(lead._id, leads)}`}/>\n                    <form className={`input-form ${toggleCityDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n                        <label htmlFor=\"city\">\n                            <input type=\"text\"\n                                value={cityValue}\n                                onChange={onCityValueChange}\n                                id='city'\n                                name=\"city\"\n                                placeholder=\"Enter City\"\n                                required\n                            />\n                        </label>\n                        <button type=\"submit\" \n                            className=\"submit-button\"\n                            disabled={!isCityEnable}\n                            onClick={saveCityValue}\n                            >Save\n                        </button>\n                    </form>\n                </>\n            )}\n        </CountryStyled>\n    );\n};","import { AssignReassignBlockStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { leadAssign, leadReAssign } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const ManagerAssignReAssignBlock = ({\n    availableUsersForAssign,\n    leads,\n    lead,\n    index,\n    isManager\n}) => {\n    const [conManager, setConManager] = useState(false);\n    const [isSelfCreated, setSelfCreated] = useState(false);\n    const [openManager, setOpenManager] = useState(new Map());\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const managerRefs = useRef(new Map());\n    const dispatch = useDispatch();\n        \n\n    useEffect(() => {\n        const conManager = lead.conManagerId;\n        const selfCreated = lead.selfCreated;       \n        if(conManager && (conManager.name || conManager.email)){\n            setConManager(true);\n        } else {\n            setConManager(false);\n        }\n        if (selfCreated) {\n            setSelfCreated(true);\n        } else {\n            setSelfCreated(false)\n        }\n    },[lead.conManagerId, lead.selfCreated]);\n\n\n    const toggleManagerMenuDrop = (leadId) => {\n        setOpenManager(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n\n\n    const toggleManagerDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openManager.get(leadId) ? 'users-list-visible-adjusted' : '';\n            }\n        } else {\n            return openManager.get(leadId) ? 'users-list-visible' : '';\n        }\n    };\n\n\n    const toggleManagerDropArrow = (leadId) => {\n        return openManager.get(leadId) ? 'arrow-svg-open' : '';\n    };\n    \n    \n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenManager(new Map());\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openManager);\n        let shouldUpdate = false;\n\n        managerRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openManager.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenManager(newOpenMenus);\n        }\n    }, [openManager]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const renderUserList = (excludedId) => {\n        return availableUsersForAssign\n        .filter(user => user._id !== excludedId)\n        .map((user, index) => (\n            <li className=\"user-item\" key={index}>\n                <p className=\"drop-cont-text\"\n                    onClick={() => assignReAssignLead(user)}\n                >To: {user.username}\n                </p>\n            </li>\n        ))\n    };\n\n\n    const assignReAssignLead = (user) => {\n        if(isManager){\n            if (!isSelfCreated && !conManager) {\n                setUpdatingLeadId(lead._id);\n                dispatch(leadAssign({\n                    leadId: lead._id,\n                    data: {\n                        conManagerId: user._id\n                    }\n                })).finally(() => {\n                    setUpdatingLeadId(null);\n                });\n                setOpenManager(new Map());\n            }\n            if (!isSelfCreated && conManager) {\n                setUpdatingLeadId(lead._id);\n                dispatch(leadReAssign({\n                    leadId: lead._id,\n                    data: {\n                        conManagerId: user._id\n                    }\n                })).finally(() => {\n                    setUpdatingLeadId(null);\n                });\n                setOpenManager(new Map());\n            }\n        } \n    };\n\n\n    return(\n        <AssignReassignBlockStyled ref={el => {\n            if (el) {\n                managerRefs.current.set(lead._id, el);\n            }\n            }}\n            $isSelfCreated={isSelfCreated}\n        >\n            {updatingLeadId === lead._id ? (\n                <UpdateLoading/>\n            ) : (\n                <>\n                    <button className=\"manager-btn\" type='button'\n                        onClick={() => toggleManagerMenuDrop(lead._id)}\n                    >\n                        {isSelfCreated ? \"N/A\" \n                            : !lead.conManagerId \n                            ? 'Not Assigned Yet' \n                            : lead.conManagerId.username\n                        }\n                    </button>\n                    {!isSelfCreated && (\n                        <ArrowDown className={`arrow-svg ${toggleManagerDropArrow(lead._id)}`}/>\n                    )}\n                    <ul className={`users-list ${toggleManagerDropCont(lead._id, leads)}`}>\n                        <li className=\"initial-item\">\n                            <p className=\"initial-drop-cont-text\">\n                                {!lead.conManagerId ? \"Assign\" : \"ReAssign\"}\n                            </p>\n                        </li>\n                        {!lead.conManagerId ? (\n                                renderUserList()\n                        ) : (\n                                renderUserList(lead.conManagerId._id)\n                            )\n                        }\n                    </ul>\n                </>\n            )}\n        </AssignReassignBlockStyled>\n    );\n};","import { AssignReassignBlockStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { leadAssign, leadReAssign } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\nimport { UpdateLoading } from \"../../../CustomLoaders/CustomLoaders\";\n\n\n\nexport const AgentAssignReAssignBlock = ({\n    availableUsersForAssign,\n    leads,\n    lead,\n    index,\n    isConversionManager\n}) => {\n    const [conAgent, setConAgent] = useState(false);\n    const [isSelfCreated, setSelfCreated] = useState(false);\n    const [openAgent, setOpenAgent] = useState(new Map());\n    const [updatingLeadId, setUpdatingLeadId] = useState(null);\n    const agentRefs = useRef(new Map());\n    const dispatch = useDispatch();\n        \n\n    useEffect(() => {\n        const conAgent = lead.conAgentId;\n        const selfCreated = lead.selfCreated;       \n        if(conAgent && (conAgent.name || conAgent.email)){\n            setConAgent(true);\n        } else {\n            setConAgent(false);\n        }\n        if (selfCreated) {\n            setSelfCreated(true);\n        } else {\n            setSelfCreated(false)\n        }\n    },[lead.conAgentId, lead.selfCreated]);\n\n\n    const toggleAgentMenuDrop = (leadId) => {\n        setOpenAgent(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n\n\n    const toggleAgentDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openAgent.get(leadId) ? 'users-list-visible-adjusted' : '';\n            }\n        } else {\n            return openAgent.get(leadId) ? 'users-list-visible' : '';\n        }\n    };\n\n\n    const toggleAgentDropArrow = (leadId) => {\n        return openAgent.get(leadId) ? 'arrow-svg-open' : '';\n    };\n    \n    \n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenAgent(new Map());\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openAgent);\n        let shouldUpdate = false;\n\n        agentRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openAgent.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenAgent(newOpenMenus);\n        }\n    }, [openAgent]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const renderUserList = (excludedId) => {\n        return availableUsersForAssign\n        .filter(user => user._id !== excludedId)\n        .map((user, index) => (\n            <li className=\"user-item\" key={index}>\n                <p className=\"drop-cont-text\"\n                    onClick={() => assignReAssignLead(user)}\n                >To: {user.username}\n                </p>\n            </li>\n        ))\n    };\n\n\n    \n    const assignReAssignLead = (user) => {\n        if (isConversionManager){\n            if (!isSelfCreated && !conAgent) {\n                setUpdatingLeadId(lead._id);\n                dispatch(leadAssign({\n                    leadId: lead._id,\n                    data: {\n                        conAgentId: user._id\n                    }\n                })).finally(() => {\n                    setUpdatingLeadId(null);\n                });\n                setOpenAgent(new Map());\n            }\n            if (!isSelfCreated && conAgent) {\n                setUpdatingLeadId(lead._id);\n                dispatch(leadReAssign({\n                    leadId: lead._id,\n                    data: {\n                        conAgentId: user._id\n                    }\n                })).finally(() => {\n                    setUpdatingLeadId(null);\n                });\n                setOpenAgent(new Map());\n            }\n        }\n    };\n\n\n    return(\n        <AssignReassignBlockStyled ref={el => {\n            if (el) {\n                agentRefs.current.set(lead._id, el);\n            }\n            }}\n            $isSelfCreated={isSelfCreated}\n            $isConversionManager={isConversionManager}\n        >\n            {updatingLeadId === lead._id ? (\n                <UpdateLoading/>\n            ) : (\n                <>\n                    <button className=\"manager-btn\" type='button'\n                        onClick={() => toggleAgentMenuDrop(lead._id)}\n                    >\n                        {isSelfCreated ? \"N/A\" \n                            : !lead.conAgentId \n                            ? 'Not Assigned Yet' \n                            : lead.conAgentId.username\n                        }\n                    </button>\n                    {!isSelfCreated && (\n                        <ArrowDown className={`arrow-svg ${toggleAgentDropArrow(lead._id)}`}/>\n                    )}\n                    <ul className={`users-list ${toggleAgentDropCont(lead._id, leads)}`}>\n                        <li className=\"initial-item\">\n                            <p className=\"initial-drop-cont-text\">\n                                {!lead.conAgentId ? \"Assign\" : \"ReAssign\"}\n                            </p>\n                        </li>\n                        {!lead.conAgentId ? (\n                                renderUserList()\n                        ) : (\n                                renderUserList(lead.conAgentId._id)\n                            )\n                        }\n                    </ul>\n                </>\n            )}\n        </AssignReassignBlockStyled>\n    );\n};","import { CustomCheckboxStyled } from \"../tableLeads.styled\";\nimport { ReactComponent as CheckedIcon } from \"../../../../images/svg-icons/check.svg\";\nimport { ReactComponent as CheckBoxIcon } from \"../../../../images/svg-icons/rectangle.svg\";\nimport { toggleOfficeLeadsCheckboxState } from \"../../../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\nimport React from \"react\";\n\n\n\n\nexport const CustomAssignLeadCheckbox = React.memo(({selectedOfficeLeadsCheckedCheckbox, lead}) => {\n    const dispatch = useDispatch();\n\n\n    const handleCheckboxChange = (_id) => {\n        dispatch(toggleOfficeLeadsCheckboxState({_id}));\n    };\n\n\n    return(\n        <CustomCheckboxStyled>\n            <div className=\"custom-checkbox\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"delete_external_lead\"\n                    id={lead._id}\n                    checked={selectedOfficeLeadsCheckedCheckbox.includes(lead._id)}\n                    onChange={() => handleCheckboxChange(lead._id)}\n                />\n                <div className=\"custom-checkbox\">\n                    <CheckBoxIcon className=\"custom-checkbox-before\" width=\"16\" height=\"16\"/>\n                    <CheckedIcon className=\"custom-checkbox-after\" width=\"16\" height=\"16\"/>\n                </div>\n            </div>\n        </CustomCheckboxStyled>\n    );\n});","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ClientTime } from \"./TableComponents/clientTime.jsx\";\nimport { NextCall } from \"./TableComponents/nextCall.jsx\";\nimport { Status } from \"./TableComponents/Status.jsx\";\nimport { TimeZone } from \"./TableComponents/TimeZone.jsx\";\nimport { Country } from \"./TableComponents/Country.jsx\";\nimport { Region } from \"./TableComponents/Region.jsx\";\nimport { City } from \"./TableComponents/City.jsx\";\nimport { ManagerAssignReAssignBlock } from \"./TableComponents/ManagerAssignReassign.jsx\";\nimport { AgentAssignReAssignBlock } from \"./TableComponents/AgentAssignReAssignBlock.jsx\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useUser } from \"../../../hooks/useUser.js\";\nimport { useAuth } from \"../../../hooks/useAuth.js\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice.js\";\nimport { CustomAssignLeadCheckbox } from \"./TableComponents/CustomAssignLeadCheckbox.jsx\";\nimport { getLeadById } from \"../../../redux/Lead/lead-operation.js\";\nimport { setLeadDetailsModalTrue } from \"../../../redux/Lead/lead-slice.js\";\nimport { ShowRules } from \"../../../utils/showRules.js\";\n\n\n\nexport const TableLeads = () => {\n  const { \n    isLeads, \n    selectedOfficeLeadsCheckedCheckbox, \n    leadOffice, \n    status, \n    timeZone,\n  } = useLead();\n  const { formatDateTime } = ShowRules();\n  const {isAdmin, isConversion, isManager, isConversionManager, isLoggedIn} = useAuth();\n  const { userLeads, userLeadsComponent, availableUsersForAssign } = useUser();\n  const [leads, setLeads] = useState();\n  const dispatch = useDispatch();\n\n   \n  useEffect(() => {\n    if (userLeadsComponent && userLeads) {\n      setLeads(userLeads)\n    } else if(isLeads){\n      setLeads(isLeads)\n    }\n  }, [isLeads, userLeads, userLeadsComponent]);\n  \n  \n  const openOfficeLeadDetail = (_id) => {\n    dispatch(openModalLeadDetail());\n    dispatch(setLeadDetailsModalTrue(\"Office\"));\n    if (isLoggedIn && isAdmin) {\n      dispatch(\n        getLeadById({\n          leadId: _id,\n          branch: leadOffice,\n        })\n      );\n    } else if (isLoggedIn && (isConversion || isManager)) {\n      dispatch(getLeadById({ leadId: _id }));\n    }\n  };\n\n\n  // For style 'small-table' - check styles on OfficeLeads.styled.js\n  const chnageTableStyle = () => {\n    if(leads){\n      return leads.length < 16 ? 'small-table' : '';\n    }\n  };\n\n\n  let filteredLeads;\n  if (leads) {\n    filteredLeads = [...leads].sort((a, b) => {\n      if (a.status === \"New\" && b.status !== \"New\") {\n        return -1;\n      } \n      if (a.status !== \"New\" && b.status === \"New\") {\n        return 1;\n      }\n      return new Date(b.updatedAt) - new Date(a.updatedAt);\n    });\n  }\n  \n\n  return (\n    <TableListStyled className={chnageTableStyle()} $userLeadsComponent={userLeadsComponent}>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            {(!userLeadsComponent && (isAdmin || isManager)) && (\n              isManager ? (\n                <th className=\"TableHeaderItem\">Assign / Reassign Manager</th>\n              ) : (\n                <th className=\"TableHeaderItem\">Assigned Manager</th>\n              )\n            )}\n            {(!userLeadsComponent && (isAdmin || isManager || isConversionManager)) && (\n              isConversionManager ? (\n                <th className=\"TableHeaderItem\">Assign / Reassign Agent</th>\n              ) : (\n                <th className=\"TableHeaderItem\">Assigned Agent</th>\n              )\n              )}\n            <th className=\"TableHeaderItem\">Next call</th>\n            <th className=\"TableHeaderItem\">Details</th>\n            {isAdmin && (\n              <th className=\"TableHeaderItem\">Check</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {leads && filteredLeads.map((lead, index) => (\n            <tr className={lead.status === 'New' ? 'back-color' : ''} key={lead._id}>\n              <td className=\"TableHeaderItem\">{lead.clientId}</td>\n              <td className=\"TableHeaderItem\">{lead.name}</td>\n              <td className=\"TableHeaderItem\">{lead.lastName}</td>\n              <td className=\"TableHeaderItem\">{lead.email}</td>\n              <td className=\"TableHeaderItem\">{lead.phone}</td>\n              <td className=\"TableHeaderItem\">\n                <Status\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  status={status}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\">{lead.resource}</td>\n              <td id=\"countryColumn\" className=\"TableHeaderItem\">\n                <Country\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td id=\"regionColumn\" className=\"TableHeaderItem\">\n                <Region\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td id=\"cityColumn\" className=\"TableHeaderItem\">\n                <City\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\">\n                <TimeZone\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  timeZone={timeZone}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\", textWrap: \"unset\"}}>\n                <ClientTime lead={lead} />\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.selfCreated ? \"Yes\" : \"No\"}\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.updatedAt && formatDateTime(lead.updatedAt)}\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.createdAt && formatDateTime(lead.createdAt)}\n              </td>\n              {(!userLeadsComponent && (isAdmin || isManager)) &&\n                <td id=\"mangerColumn\" className=\"TableHeaderItem\"\n                  style={{ background: lead.selfCreated \n                    ? \"transparent\" \n                    : !lead.conManagerId \n                    && \"#ff000082\" \n                  }}\n                >\n                  {!isManager ? (\n                    lead.selfCreated ? (\"N/A\") : (\n                      lead.conManagerId ? (\n                        lead.conManagerId.username\n                      ) : (\n                        'Not Assigned Yet'\n                      )\n                    )\n                  ) : (\n                    <ManagerAssignReAssignBlock\n                      availableUsersForAssign={availableUsersForAssign}\n                      leads={leads}\n                      lead={lead}\n                      index={index}\n                      isManager={isManager}\n                    />\n                  )}\n                </td>\n              }\n              {(!userLeadsComponent && (isAdmin || isManager || isConversionManager)) && (\n                <td id=\"agentColumn\" className=\"TableHeaderItem\"\n                  style={{ background: lead.selfCreated \n                    ? \"transparent\" \n                    : !lead.conAgentId \n                    && \"#ff000082\"\n                  }}\n                >\n                  {!isConversionManager ? (\n                    lead.selfCreated ? ('N/A') : (\n                      lead.conAgentId ? (\n                        lead.conAgentId.username\n                      ) : (\n                        'Not Assigned Yet'\n                      )\n                    )\n                  ) : (\n                    <AgentAssignReAssignBlock\n                      availableUsersForAssign={availableUsersForAssign}\n                      leads={leads}\n                      lead={lead}\n                      index={index}\n                      isConversionManager={isConversionManager}\n                    />\n                  )}\n                </td>\n              )}\n              <NextCall lead={lead} />\n              <td className=\"TableHeaderItem\">\n                <button className=\"check-btn\" type='button'\n                  onClick={() => openOfficeLeadDetail(lead._id, lead.branch)}\n                >Open\n                </button>\n              </td>\n              {isAdmin && (\n                <td className=\"TableHeaderItem\">\n                  <CustomAssignLeadCheckbox\n                    lead={lead}\n                    selectedOfficeLeadsCheckedCheckbox={selectedOfficeLeadsCheckedCheckbox}\n                  />\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>    \n    </TableListStyled>\n  );\n};\n","import styled from \"styled-components\";\n\n\nexport const FilterBlockStyled = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n    /* align-items: center; */\n\n\n    .open-filter-cont {\n        width: 20%;\n        height: 100%;\n        padding: 0.5rem;\n        flex-grow: 1;\n        /* background-color: orange; */\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    .search-text{\n        font-size: 0.7rem;\n        font-weight: 500;\n        text-align: justify;\n    }\n\n    .search-form{\n        width: 100%;\n        position: relative;\n    }\n\n    .search-input{\n        width: 100%;\n        padding: 0.25rem 0.625rem;\n        padding-right: 2rem;\n        border-radius: 0.75rem;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        background: ${p => p.theme.color.primary_black_2};\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        outline: none;\n    }\n\n    .cancel-btn{\n        position: absolute;\n        bottom: 0.5rem;\n        right: 3%;\n        border: none;\n        outline: none;\n        padding: 0rem;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n    }\n        \n    .close-icon{\n        stroke: ${p => p.theme.color.primary_grey};\n        width: 0.9rem;\n        height: 0.9rem;\n        transition: transform ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            transform: rotate(90deg);\n            stroke: ${p => p.theme.color.error_color};\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    .select-filter-cont{\n        width: 80%;\n        /* background-color: pink; */\n        /* height: 86px; */\n        padding: 0.5rem;\n    }\n\n    .filter-list{\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: space-evenly;\n        font-weight: 500;\n        line-height: 1.25rem;\n        flex-wrap: wrap;\n    }\n\n    .filter-item{\n        width: 18%;\n        padding: 0;\n        position: relative;\n    }\n\n    .filter-btn{\n        width: 100%;\n        padding: 0.25rem;\n        padding: 0.25rem 0.5rem;\n        color: ${p => p.theme.color.primary_black};\n        background-color: ${p => p.theme.color.primary_green_lite};\n        font-size: clamp(0.75rem, 0.5vw + 0.4rem, 1.5rem);\n        font-weight: 500;\n        line-height: 1.25rem;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        \n        &:hover {\n            color: ${(props) => props.theme.color.primary_grey};\n        }\n    }\n\n    .cancel-filter-btn{\n        position: absolute;\n        bottom: 0.5rem;\n        right: 4%;\n        border: none;\n        outline: none;\n        padding: 0rem;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n    }\n        \n    .close-filter-icon{\n        stroke: ${p => p.theme.color.primary_black_2};\n        width: 0.9rem;\n        height: 0.9rem;\n        transition: transform ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            transform: rotate(90deg);\n            stroke: ${p => p.theme.color.error_color};\n        }\n    }\n\n\n    .filter-item-list{\n        height: 0rem;\n        position: absolute;\n        overflow-y: auto;\n        z-index: 20;\n        top: 115%;\n        left: 0;\n        width: 100%;\n        border-radius: 0.5rem;\n        padding: 0.25rem;\n        gap: 0.75rem;\n        background-color: ${p => p.theme.color.background2};\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        visibility: hidden;\n        opacity: 0;\n        font-size: 0.9rem;\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        transform-origin: top;\n        transition: all ${p => p.theme.transition.main_transition};\n\n\n        &::-webkit-scrollbar {\n            width: 0.25rem;\n            background-color: transparent;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background-color: ${p => p.theme.color.primary_grey};\n            border-radius: 5px;\n        }\n    }\n\n    .filter-item-list-visible{\n        height: 11.7rem;\n        opacity: 1;\n        visibility: visible;\n        transform-origin: top;\n    }\n\n    .filter-list-item{\n        cursor: pointer;\n        width: 100%;\n        text-align: center;\n        \n\n        & .drop-cont-text{\n            transition: color ${p => p.theme.transition.main_transition};\n            color: ${p => p.theme.color.primary_white};\n\n            &:hover{\n                color: ${p => p.theme.color.primary_green_lite}\n            }\n        }\n    }\n`","export const selectFilterError = state => state.filter.filterError;\n\nexport const selectSourceState = state => state.filter.source.sourceState;\n\nexport const selectSourceLoading = state => state.filter.source.sourceLoading;\n\nexport const selectCountryState = state => state.filter.country.countryState;\n\nexport const selectCountryLoading = state => state.filter.country.countryLoading;\n\nexport const selectRegionState = state => state.filter.region.regionState;\n\nexport const selectRegionLoading = state => state.filter.region.regionLoading;\n\nexport const selectCityState = state => state.filter.city.cityState;\n\nexport const selectCityLoading = state => state.filter.city.cityLoading;\n\nexport const selectLastUpdateDateState = state => state.filter.lastUpdateDate.lastUpdateDateState;\n\nexport const selectLastUpdateDateLoading = state => state.filter.lastUpdateDate.lastUpdateDateLoading;\n\nexport const selectCreatedDateState = state => state.filter.createdDate.createdDateState;\n\nexport const selectCreatedDateLoading = state => state.filter.createdDate.createdDateLoading;\n\nexport const selectNextCallDateState = state => state.filter.nextCallDate.nextCallDateState;\n\nexport const selectNextCallDateLoading = state => state.filter.nextCallDate.nextCallDateLoading;\n\nexport const selectAgentState = state => state.filter.agent.agentState;\n\nexport const selectAgentLoading = state => state.filter.agent.agentLoading;\n\nexport const selectTimeZoneState = state => state.filter.timeZone.timeZoneState;\n\nexport const selectTimeZoneLoading = state => state.filter.timeZone.timeZoneLoading;\n\nexport const selectStatusState = state => state.filter.status.statusState;\n\nexport const selectStatusLoading = state => state.filter.status.statusLoading;\n\nexport const selectFilterList = state => state.filter.filterList;\n\nexport const selectOpenFilter = state => state.filter.openFilter;\n","import { FilterBlockStyled } from \"./FilterBlock.styled\";\nimport {ReactComponent as CloseIcon} from \"../../images/svg-icons/close.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { \n    setSourceState,\n    setCountryState,\n    setRegionState,\n    setCityState,\n    setLastUpdateDateState,\n    setCreatedDateState,\n    setNextCallDateState,\n    setAgentState,\n    setTimeZoneState,\n    setStatusState,\n    setOpenFilterState,\n    resetSourceState,\n    resetCountryState,\n    resetRegionState,\n    resetCityState,\n    resetLastUpdateDateState,\n    resetCreatedDateState,\n    resetNextCallDateState,\n    resetAgentState,\n    resetTimeZoneState,\n    resetStatusState,\n    resetOpenFilterState,\n} from \"../../redux/Filter/filter-slice\";\nimport { useFilter } from \"../../hooks/useFilter\";\n\n\nexport const FilterBlock = () => {\n    const { \n        openFilter, \n        sourceState, \n        countryState, \n        regionState, \n        cityState,\n        lastUpdateDateState,\n        createdDateState,\n        nextCallDateState,\n        agentState,\n        timeZoneState,\n        statusState,\n    } = useFilter();\n    const [searchValue, setSearchValue] = useState('');\n    const [isFormCancelButton, setFormCancelButton] = useState(false);\n    const [openFilterList, setOpenFilterList] = useState(new Map());\n    const filterRefs = useRef(new Map());\n    const dispatch = useDispatch();    \n    useEffect(() => {\n        console.log(\"REDUX:\", openFilter);\n    },[openFilter])\n    useEffect(() => {\n        console.log(\"Redux sourceState:\", sourceState);\n    },[sourceState]);\n    useEffect(() => {\n        console.log(\"Redux countryState:\", countryState);\n    },[countryState]);\n    useEffect(() => {\n        console.log(\"Redux regionState:\", regionState);\n    },[regionState])\n    useEffect(() => {\n        console.log(\"Redux cityState:\", cityState);\n    },[cityState])\n    useEffect(() => {\n        console.log(\"Redux lastUpdateDateState:\", lastUpdateDateState);\n    },[lastUpdateDateState])\n    useEffect(() => {\n        console.log(\"Redux createdDateState:\", createdDateState);\n    },[createdDateState])\n    useEffect(() => {\n    console.log(\"Redux nextCallDateState:\", nextCallDateState);  \n    },[nextCallDateState])\n    useEffect(() => {\n        console.log(\"Redux agentState:\", agentState);\n    },[agentState])\n    useEffect(() => {\n        console.log(\"Redux timeZoneState:\", timeZoneState);\n    },[timeZoneState])\n    useEffect(() => {\n        console.log(\"Redux statusState:\", statusState);\n    },[statusState])\n\n\n    const buttonsName = [\n        {buttonName: 'Select Source', state: sourceState},\n        {buttonName: 'Select Country', state: countryState},\n        {buttonName: 'Select Region', state: regionState},\n        {buttonName: 'Select City', state: cityState},\n        {buttonName: 'Last Update', state: lastUpdateDateState},\n        {buttonName: 'Create Date', state: createdDateState},\n        {buttonName: 'Next Call', state: nextCallDateState},\n        {buttonName: 'Select Agent', state: agentState},\n        {buttonName: 'Select Status', state: statusState},\n        {buttonName: 'Select Time-Zone', state: timeZoneState},\n    ];\n    const filterListItemName = [\n        {name: '1'},\n        {name: '2'},\n        {name: '3'},\n        {name: '4'},\n        {name: '5'},\n        {name: '6'},\n        {name: '7'},\n        {name: '8'},\n        {name: '9'},\n        {name: '10'},\n    ];\n\n\n    const onValueChange = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n\n    const resetFormValue = () => {\n        setSearchValue('');\n        dispatch(resetOpenFilterState());\n    };\n\n\n    useEffect(() => {\n        if (searchValue) {\n            setFormCancelButton(true);\n        } else {\n            setFormCancelButton(false);\n        }\n\n        const handler = setTimeout(() => {\n            dispatch(setOpenFilterState(searchValue))\n        }, 500);\n        \n        return () => {\n            clearTimeout(handler);\n        };\n    }, [dispatch, searchValue]);\n\n\n    const toggleFilterDrop = (buttonName) => {\n        setOpenFilterList(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(buttonName, !newMap.get(buttonName));\n          return newMap;\n        });\n    };\n\n\n    const toggleFiltersDropCont = (buttonName) => {\n        return openFilterList.get(buttonName) ? 'filter-item-list-visible' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenFilterList(new Map());\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openFilterList);\n        let shouldUpdate = false;\n\n        filterRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openFilterList.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenFilterList(newOpenMenus);\n        }\n    }, [openFilterList]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const saveFilterValue = (buttonName, name) => {\n        switch (buttonName){\n            case \"Select Source\":\n                console.log(\"Select Source Button:\",name);\n                dispatch(setSourceState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Country\":\n                console.log(\"Select Country Button:\",name);\n                dispatch(setCountryState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Region\":\n                console.log(\"Select Region Button:\",name);\n                dispatch(setRegionState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select City\":\n                console.log(\"Select City Button:\",name);\n                dispatch(setCityState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Last Update\":\n                console.log(\"Last Update Button:\",name);\n                dispatch(setLastUpdateDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Create Date\":\n                console.log(\"Create Date Button:\",name);\n                dispatch(setCreatedDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Next Call\":\n                console.log(\"Next Call Button:\",name);\n                dispatch(setNextCallDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Agent\":\n                console.log(\"Select Agent Button:\",name);\n                dispatch(setAgentState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Status\":\n                console.log(\"Select Status Button:\",name);\n                dispatch(setStatusState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Time-Zone\":\n                console.log(\"Select Time-Zone Button:\",name);\n                dispatch(setTimeZoneState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            default:\n                return;\n        }\n    };\n\n\n    const resetFilterValue = (buttonName) => {\n        switch (buttonName){\n            case \"Select Source\":\n                dispatch(resetSourceState());\n            break;\n\n            case \"Select Country\":\n                dispatch(resetCountryState());\n            break;\n\n            case \"Select Region\":\n                dispatch(resetRegionState());\n            break;\n\n            case \"Select City\":\n                dispatch(resetCityState());\n            break;\n\n            case \"Last Update\":\n                dispatch(resetLastUpdateDateState());\n            break;\n\n            case \"Create Date\":\n                dispatch(resetCreatedDateState());\n            break;\n\n            case \"Next Call\":\n                dispatch(resetNextCallDateState());\n            break;\n\n            case \"Select Agent\":\n                dispatch(resetAgentState());\n            break;\n\n            case \"Select Status\":\n                dispatch(resetStatusState());\n            break;\n\n            case \"Select Time-Zone\":\n                dispatch(resetTimeZoneState());\n            break;\n\n            default:\n                return;\n        }\n    };\n    \n\n    return(\n        <FilterBlockStyled>\n            <div className=\"open-filter-cont\">\n                <p className=\"search-text\">For SEARCH, enter one of the following values: Client ID, Name, Last Name, Email, or Phone</p>\n                <form className=\"search-form\">\n                    <label className=\"search-label\" htmlFor=\"searchValue\">\n                        <input className=\"search-input\" \n                            type=\"text\"\n                            value={searchValue}\n                            onChange={onValueChange}\n                            id='searchValue'\n                            name=\"searchValue\"\n                            placeholder=\"Search\"\n                            required\n                        />\n                        {isFormCancelButton && (\n                            <button type=\"button\" className=\"cancel-btn\"\n                                onClick={resetFormValue}\n                            >\n                                <CloseIcon className=\"close-icon\" width={8} height={8}/>\n                            </button>\n                        )}\n                    </label>\n                </form>\n            </div>\n            <div className=\"select-filter-cont\">\n                <ul className=\"filter-list\">\n                    {buttonsName.map(({buttonName, state}, index) => (\n                        <li className=\"filter-item\" key={index}  ref={el => {\n                            if (el) {\n                                filterRefs.current.set(buttonName, el);\n                            }\n                            }}\n                        >\n                            <button type='button' className=\"filter-btn\"\n                                onClick={() => toggleFilterDrop(buttonName)}\n                            >\n                                {state ? state : buttonName}\n                            </button>\n                            {state && (\n                                <button type=\"button\" className=\"cancel-filter-btn\"\n                                    onClick={() => resetFilterValue(buttonName)}\n                                >\n                                    <CloseIcon className=\"close-filter-icon\" width={8} height={8}/>\n                                </button>\n                            )}\n                            <ul className={`filter-item-list ${toggleFiltersDropCont(buttonName)}`}>\n                                {filterListItemName.map(({name}, index) => (\n                                    <li className=\"filter-list-item\" key={index}>\n                                        <p className=\"drop-cont-text\"\n                                            onClick={() => saveFilterValue(buttonName, name)}\n                                        >\n                                            {name}\n                                        </p>\n                                    </li>\n                                ))}\n                            </ul>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </FilterBlockStyled>\n    );\n};","import { useSelector } from \"react-redux\";\nimport {\n    selectFilterError,\n    selectSourceState,\n    selectSourceLoading,\n    selectCountryState,\n    selectCountryLoading,\n    selectRegionState,\n    selectRegionLoading,\n    selectCityState,\n    selectCityLoading,\n    selectLastUpdateDateState,\n    selectLastUpdateDateLoading,\n    selectCreatedDateState,\n    selectCreatedDateLoading,\n    selectNextCallDateState,\n    selectNextCallDateLoading,\n    selectAgentState,\n    selectAgentLoading,\n    selectTimeZoneState,\n    selectTimeZoneLoading,\n    selectStatusState,\n    selectStatusLoading,\n    selectFilterList,\n    selectOpenFilter,\n} from \"../redux/Filter/filter-selectors\";\n\n\nexport const useFilter = () => {\n    const isFilterError = useSelector(selectFilterError);\n    const sourceState = useSelector(selectSourceState);\n    const sourceLoading = useSelector(selectSourceLoading);\n    const countryState = useSelector(selectCountryState);\n    const countryLoading = useSelector(selectCountryLoading);\n    const regionState = useSelector(selectRegionState);\n    const regionLoading = useSelector(selectRegionLoading);\n    const cityState = useSelector(selectCityState);\n    const cityLoading = useSelector(selectCityLoading);\n    const lastUpdateDateState = useSelector(selectLastUpdateDateState);\n    const lastUpdateDateLoading = useSelector(selectLastUpdateDateLoading);\n    const createdDateState = useSelector(selectCreatedDateState);\n    const createdDateLoading = useSelector(selectCreatedDateLoading);\n    const nextCallDateState = useSelector(selectNextCallDateState);\n    const nextCallDateLoading = useSelector(selectNextCallDateLoading);\n    const agentState = useSelector(selectAgentState);\n    const agentLoading = useSelector(selectAgentLoading);\n    const timeZoneState = useSelector(selectTimeZoneState);\n    const timeZoneLoading = useSelector(selectTimeZoneLoading);\n    const statusState = useSelector(selectStatusState);\n    const statusLoading = useSelector(selectStatusLoading);\n    const filterList = useSelector(selectFilterList);\n    const openFilter = useSelector(selectOpenFilter);\n\n\n    return {\n        isFilterError,\n        sourceState,\n        sourceLoading,\n        countryState,\n        countryLoading,\n        regionState,\n        regionLoading,\n        cityState,\n        cityLoading,\n        lastUpdateDateState,\n        lastUpdateDateLoading,\n        createdDateState,\n        createdDateLoading,\n        nextCallDateState,\n        nextCallDateLoading,\n        agentState,\n        agentLoading,\n        timeZoneState,\n        timeZoneLoading,\n        statusState,\n        statusLoading,\n        filterList,\n        openFilter,\n    }\n};","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { ShowRules } from \"../../utils/showRules\";\nimport { FilterBlock } from \"../FilterBlock/FilterBlock\";\n\n\n\nexport const OfficeLeads = () => {\n    const { formatOfficeName } = ShowRules();\n    const { isAdmin } = useAuth();\n    const { isLeadLoading, leadOffice } = useLead();\n    const { isLeadDetails } = useModal();\n    const { userLeadsComponent } = useUser()\n    const dispatch = useDispatch();\n    \n\n    const resetStateForLeads = () => {\n        if (leadOffice) {\n            dispatch(resetOfficeLeadState());\n        }\n        if (userLeadsComponent) {\n            dispatch(resetUserLeadsComponent());\n        }\n    };\n\n\n    return(\n        <StyledOfficeLeads $isAdmin={isAdmin}>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    {isAdmin ? (\n                        <>\n                            <NavLink className=\"link\" to='/' onClick={resetStateForLeads}>\n                                <ArrowSVG className=\"svg\"/>\n                                <h1 className=\"titles\">Back</h1>\n                            </NavLink>\n                            <h2 className=\"titles\">{formatOfficeName(leadOffice)} Leads List & Management</h2>\n                        </>\n                    ) : (\n                        <h2 className=\"titles\">All Office Leads List & Management</h2>\n                    )}\n                </div>\n                <FilterBlock/>\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n        margin-bottom: 2rem;\n    }\n\n\n    .small-table{\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n\n        & tbody{\n            & tr{\n                & td:last-child{\n                    border-right: none;\n                }\n            }\n\n            & tr:last-child{\n                & td{\n                    border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n                }\n            }\n        }\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();  \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n\n     \n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\nimport { getStatus, getTimeZone } from \"../redux/Lead/lead-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, isManager, isConversionManager, isConversion } = useAuth();\n\n\n    useEffect(() => {\n        if (!userLeadsComponent && (isAdmin || isManager || isConversion)) {\n            dispatch(getStatus());\n            dispatch(getTimeZone());\n        }\n        if (!userLeadsComponent && !isAdmin && (isManager || isConversionManager)) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, isAdmin, isConversion, isConversionManager, isManager, userLeadsComponent]);\n    \n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","PaginationStyled","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","transition","main_transition","color","primary_green_lite","primary_black","primary_grey","for_modal_color","primary_white","background","PaginationMapStyled","_templateObject2","_use","SvgAngleBoubleLeft","className","xlinkHref","SvgAngleDoubleRight","PaginationMap","forwardRef","firstVisible","clickOnFirstVisible","listRef","elements","toggleButtonBackground","setButtonActive","lastVisible","clickOnLastVisible","_jsxs","children","_jsx","type","onClick","map","element","index","concat","Pagination","dispatch","useDispatch","isAdmin","isManager","isConversion","useAuth","totalPages","leadOffice","leadsAmountPerPage","useLead","userLeadsComponent","useUser","count","setCount","useState","setFirstVisible","setLastVisible","lastVisibleValue","setLastVisibleValue","firstVisibleValue","setFirstVisibleValue","decreaseEnable","setDecreaseEnable","increaseEnable","setIncreaseEnable","useRef","amount","Number","Array","from","_","page","toString","limit","useEffect","getAllLeads","branch","current","activeButton","querySelector","scrollIntoView","behavior","block","inline","toBegin","disabled","ArrowDoubleRight","decreaseCount","prevState","calculatedLastValue","Math","max","calculatedFirstValue","SingleArrow","limitFirstValue","newFirstVisibleValue","min","newLastVisibleValue","remainingElements","isLargeList","maxFirstValue","finalFirstValue","increaseCount","toEnd","ArrowDoubleLeft","StyledOfficeLeads","$isAdmin","TableListStyled","$userLeadsComponent","background3","CustomCheckboxStyled","ClientTime","lead","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","_Fragment","timeZoneOffset","currentUTCTime","getTime","getTimezoneOffset","toLocaleString","year","month","day","hour","minute","second","undefined","calculateClientTime","timeZone","NextCall","React","date","setDate","dateNow","nextCallDate","useMemo","nextCall","isOverdue","timeLeft","isAlmostDue","isToday","toDateString","minDateOption","minTimeOption","toTimeString","slice","style","backgroundColor","Flatpickr","value","onChange","_ref2","options","dateFormat","minDate","minTime","weekNumbers","placeholder","onClose","submitNextCallDate","updatedDate","toISOString","patchNextCall","_id","leadNextcall","StatusesStyled","$isTimeZone","background2","CountryStyled","$isCountry","$isRegion","$isCity","AssignReassignBlockStyled","_templateObject3","$isSelfCreated","$isConversionManager","Status","leads","status","isStatus","setStatus","openStatus","setOpenStatus","Map","updatingLeadId","setUpdatingLeadId","statusRefs","handleKeyPress","useCallback","event","handleBackgroundClick","newOpenMenus","shouldUpdate","forEach","leadId","contains","get","set","document","addEventListener","removeEventListener","el","UpdateLoading","toggleStatusMenuDrop","newMap","ArrowDown","toggleStatusDropCont","totalLeads","newStatus","dataStatus","leadStatus","patchStatus","finally","submitStatus","TimeZone","isTimeZone","setTimeZone","openTimeZone","setOpenTimeZone","timeZoneRefs","toggleTimeZoneMenuDrop","toggleTimeZoneDropCont","zone","dataTimeZone","leadTimeZone","patchTimeZone","submitTimeZone","Country","isCountry","setCountry","openCountry","setOpenCountry","countryValue","setCountryValue","isCountryEnable","setCountryEnable","countryRefs","country","toggleCountryMenuDrop","toggleCountryDropCont","onSubmit","e","preventDefault","htmlFor","toLowerCase","name","required","saveCountryValue","formattedCountryValue","split","word","toUpperCase","charAt","join","dataCountryLead","leadCountry","patchCountryLead","Region","isRegion","setRegion","openRegion","setOpenRegion","regionValue","setRegionValue","isRegionEnable","setRegionEnable","regionRefs","region","toggleRegionMenuDrop","toggleRegionDropCont","saveRegionValue","formattedRegionValue","dataRegionLead","leadRegion","patchRegionLead","City","isCity","setCity","openCity","setOpenCity","cityValue","setCityValue","isCityEnable","setCityEnable","cityRefs","city","toggleCityMenuDrop","toggleCityDropCont","saveCityValue","formattedCityValue","dataCityLead","leadCity","patchCityLead","ManagerAssignReAssignBlock","availableUsersForAssign","conManager","setConManager","isSelfCreated","setSelfCreated","openManager","setOpenManager","managerRefs","conManagerId","selfCreated","email","renderUserList","excludedId","filter","user","assignReAssignLead","username","leadAssign","data","leadReAssign","toggleManagerMenuDrop","toggleManagerDropCont","AgentAssignReAssignBlock","isConversionManager","conAgent","setConAgent","openAgent","setOpenAgent","agentRefs","conAgentId","toggleAgentMenuDrop","toggleAgentDropCont","CustomAssignLeadCheckbox","selectedOfficeLeadsCheckedCheckbox","checked","includes","handleCheckboxChange","toggleOfficeLeadsCheckboxState","CheckBoxIcon","CheckedIcon","TableLeads","isLeads","formatDateTime","ShowRules","isLoggedIn","userLeads","setLeads","filteredLeads","sort","a","b","updatedAt","chnageTableStyle","clientId","lastName","phone","resource","maxWidth","textWrap","createdAt","openOfficeLeadDetail","openModalLeadDetail","setLeadDetailsModalTrue","getLeadById","FilterBlockStyled","primary_black_2","error_color","selectFilterError","state","filterError","selectSourceState","sourceState","selectSourceLoading","sourceLoading","selectCountryState","countryState","selectCountryLoading","countryLoading","selectRegionState","regionState","selectRegionLoading","regionLoading","selectCityState","cityState","selectCityLoading","cityLoading","selectLastUpdateDateState","lastUpdateDate","lastUpdateDateState","selectLastUpdateDateLoading","lastUpdateDateLoading","selectCreatedDateState","createdDate","createdDateState","selectCreatedDateLoading","createdDateLoading","selectNextCallDateState","nextCallDateState","selectNextCallDateLoading","nextCallDateLoading","selectAgentState","agent","agentState","selectAgentLoading","agentLoading","selectTimeZoneState","timeZoneState","selectTimeZoneLoading","timeZoneLoading","selectStatusState","statusState","selectStatusLoading","statusLoading","selectFilterList","filterList","selectOpenFilter","openFilter","FilterBlock","isFilterError","useSelector","searchValue","setSearchValue","isFormCancelButton","setFormCancelButton","openFilterList","setOpenFilterList","filterRefs","console","log","buttonsName","buttonName","filterListItemName","handler","setTimeout","setOpenFilterState","clearTimeout","toggleFiltersDropCont","resetFormValue","resetOpenFilterState","CloseIcon","toggleFilterDrop","resetSourceState","resetCountryState","resetRegionState","resetCityState","resetLastUpdateDateState","resetCreatedDateState","resetNextCallDateState","resetAgentState","resetStatusState","resetTimeZoneState","resetFilterValue","saveFilterValue","setSourceState","setCountryState","setRegionState","setCityState","setLastUpdateDateState","setCreatedDateState","setNextCallDateState","setAgentState","setStatusState","setTimeZoneState","OfficeLeads","formatOfficeName","isLeadLoading","isLeadDetails","useModal","NavLink","to","resetStateForLeads","resetOfficeLeadState","resetUserLeadsComponent","ArrowSVG","RotatingLoader","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","backToUsers","OfficeLeadsPage","getStatus","getTimeZone","getAvailableUsers"],"sourceRoot":""}