{"version":3,"file":"static/js/185.b0e314ce.chunk.js","mappings":"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","sources":["components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableLeads/tableLeads.jsx","components/OfficeLeads/OfficeLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    height: 90vh;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 87.5dvh;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n\n  .Table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: fixed;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n        font-size: 0.5rem;\n    /* display: grid; */\n    gap: 0.25rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n\n`;\n","import { TableListStyled } from \"./tableLeads.styled\";\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport leadsData from \"./leads.json\";\nimport statusData from \"./status.json\";\nimport timeZoneData from \"./timeZone.json\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\n\n\n\nexport const TableLeads = () => {\n  const [leads, setLeads] = useState(leadsData);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null });\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  const handleInputChange = (event, leadIndex, fieldName) => {\n    const updatedLeads = [...leads];\n    const fieldParts = fieldName.split(\".\");\n    if (fieldParts.length === 2) {\n      updatedLeads[leadIndex][fieldParts[0]][fieldParts[1]] =\n        event.target.value;\n    } else {\n      updatedLeads[leadIndex][fieldName] = event.target.value;\n    }\n    setLeads(updatedLeads);\n  };\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n  useEffect(() => {\n    const textareas = document.querySelectorAll(\"textarea\");\n    textareas.forEach((textarea) => {\n      adjustTextareaHeight(textarea);\n    });\n  }, [leads]);\n\n\n  const handleDropdownItemClick = (leadIndex, status) => {\n    const updatedLeads = [...leads];\n    updatedLeads[leadIndex].status = status;\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    return clientTime.toLocaleString();\n  };\n\n\n  const toggleInputVisibility = (row, cell) => {\n    setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell }\n    );\n  };\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n        if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n            (rect.top + window.scrollY + rect.height) / 2\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.36\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible]);\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  }, []);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            <th className=\"TableHeaderItem\">Agent</th>\n            <th className=\"TableHeaderItem\">Next call</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\" id={`lastName-${index}`}>\n                  {lead.lastName}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"lastName\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"lastName\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`email-${index}`}>\n                  {lead.email}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"email\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"email\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`phone-${index}`}>\n                  {lead.phone}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"phone\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"phone\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`status-${index}`}>\n                  {lead.status}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"status\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"status\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`resource-${index}`}>\n                  {lead.resource}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"resource\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"resource\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`country-${index}`}>\n                  {lead.country}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"country\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"country\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`region-${index}`}>\n                  {lead.region}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"region\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"region\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`city-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"city\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"city\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"timeZone\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"timeZone\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {calculateClientTime(lead.timeZone)}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: lead.assigned ? \"none\" : \"#ff000082\" }}\n                >\n                  {lead.conAgentId}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <label>\n                    <input\n                      type=\"datetime-local\"\n                      value={lead.latestComment.nextCall\n                        .toString()\n                        .slice(0, 16)}\n                      onChange={(e) =>\n                        handleInputChange(e, index, \"latestComment.nextCall\")\n                      }\n                      onInput={handleTextareaChange}\n                    />\n                  </label>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={leads[inputVisible.row][inputVisible.cell]}\n              onChange={(e) =>\n                handleInputChange(e, inputVisible.row, inputVisible.cell)\n              }\n              onInput={handleTextareaChange}\n            />\n            <button className=\"ButtonSave\" type=\"submit\">\n              Save\n            </button>\n          </form>\n        )}\n      {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n        <ul className=\"dropdown\" ref={dropdownRef}>\n          {statusData.map((statu, item) => (\n            <li\n              className=\"ListItem\"\n              key={item}\n              value={statu}\n              onClick={() => handleDropdownItemClick(inputVisible.row, statu)}\n            >\n              {statu}\n            </li>\n          ))}\n        </ul>\n      )}\n      {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n        <ul className=\"dropdown\" ref={dropdownRef}>\n          {timeZoneData.map((zona, item) => (\n            <li\n              className=\"ListItem\"\n              key={item}\n              value={zona}\n              onClick={() => handleDropdownItemClick(inputVisible.row, zona)}\n            >\n              {zona}\n            </li>\n          ))}\n        </ul>\n      )}\n    </TableListStyled>\n  );\n}\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeState } from \"../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const dispatch = useDispatch();\n\n\n    const resetStateForOffice = () => {\n        dispatch(resetOfficeState())\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForOffice}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <TableLeads/>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\n\n\nconst OfficeLeadsPage = () => {\n\n\n    return(\n        <>\n            <OfficeLeads/>\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","TableListStyled","primary_white","props","TableLeads","leads","setLeads","useState","leadsData","currentTime","setCurrentTime","Date","isMenuBox","setMenuBox","inputVisible","setInputVisible","row","cell","inputRef","useRef","dropdownRef","useEffect","interval","setInterval","clearInterval","handleInputChange","event","leadIndex","fieldName","updatedLeads","fieldParts","split","length","target","value","adjustTextareaHeight","textarea","style","height","concat","scrollHeight","handleTextareaChange","document","querySelectorAll","forEach","handleDropdownItemClick","status","toggleInputVisibility","toggleUserMenuDropArrow","inputElement","getElementById","inputContainer","current","dropdownContainer","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","display","right","handleKeyPress","useCallback","key","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","_jsxs","children","className","_jsx","map","lead","index","clientId","name","id","lastName","ArrowDown","onClick","email","phone","resource","country","region","city","timeZoneOffset","timeZone","getTime","toLocaleString","selfCreated","latestComment","updatedAt","slice","replace","createdAt","assigned","conAgentId","type","nextCall","toString","onChange","e","onInput","_id","ref","statusData","statu","item","timeZoneData","zona","OfficeLeads","isAdmin","useAuth","dispatch","useDispatch","NavLink","to","resetStateForOffice","resetOfficeState","OfficeLeadsPage","_Fragment"],"sourceRoot":""}