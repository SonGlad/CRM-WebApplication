{"version":3,"file":"static/js/1.6dde6222.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableComponents/dropdownTimeZone.jsx","components/table/tableComponents/dropdownStatus.jsx","components/table/tableComponents/inputWindow.jsx","components/table/tableComponents/nextCall.jsx","components/table/tableComponents/timeZone.jsx","components/table/tableComponents/city.jsx","components/table/tableComponents/region.jsx","components/table/tableComponents/country.jsx","components/table/tableComponents/status.jsx","components/table/tableComponents/clientTime.jsx","components/table/tableLeads/tableLeads.jsx","components/table/tableHook.jsx/tableHook.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n  margin-top: 2rem;\n\n  .Table {\n    table-layout: auto;\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n\n    @media only screen and (min-width: 1800px) {\n      white-space: nowrap;\n    }\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n    font-size: 0.5rem;\n    gap: 0.25rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n\n    .check-btn{\n    font-size: 0.5rem;\n    /* width: 70%; */\n    color: ${(props) => props.theme.color.primary_black};\n    background-color: ${p => p.theme.color.primary_green_lite};\n    border: 1px solid ${p => p.theme.color.primary_green_lite};\n    padding: 0.25rem 0.25rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    transition: color ${p => p.theme.transition.main_transition};\n    flex-wrap: nowrap;\n\n    &:hover{\n      color: ${props => props.theme.color.primary_grey};\n    }\n  }\n\n`;\n","import { useLead } from \"../../../hooks/useLead\";\n\n\nexport const DropdownTimeZone = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n\n    const { timeZone: timeZoneData, isTimeZoneLoading } = useLead()\n    const loading = \"Loading...\";\n\n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isTimeZoneLoading ? timeZoneData.map((zona, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={zona}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, zona, \"timeZone\", inputVisible.leadId)}\n                        >\n                            {zona}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useLead } from \"../../../hooks/useLead\";\n\nexport const DropdownStatus = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n\n    const { status: tstatusData, isStatusLoading, isStatusError } = useLead()\n    const loading = \"Loading...\";\n\n    \n    if (isStatusError) {\n        return <div>Oooops something wrong</div>\n    };\n    \n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isStatusLoading ? tstatusData.map((status, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={status}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, status, \"status\", inputVisible.leadId)}\n                        >\n                            {status}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport { patchCityLead, patchCountryLead, patchRegionLead } from \"../../../redux/Lead/lead-operation\";\nimport { useState } from \"react\";\n\n\nexport const InputWindow = ({ leads, inputVisible, inputRef, setLeads, handleTextareaChange, setInputVisible }) => {\n  const dispatch = useDispatch();\n  const [newText, setNewText] = useState(\"\");\n\n\n  const handleInputChange = (event) => {\n    setNewText(event.target.value);\n  };\n\n\n  const handleSubmit = (e, leadIndex, fieldName, leadId) => {\n    e.preventDefault();\n\n    switch (fieldName) {\n      case \"city\":\n        dispatch(patchCityLead({ id: leadId, leadCity: newText }))\n        .then((response) => {\n          if (response.payload.name) {\n            const updatedLeads = [...leads];\n            updatedLeads[leadIndex] = {\n              ...updatedLeads[leadIndex],\n              city: newText\n            };\n            setLeads(updatedLeads);\n            setNewText(\"\");\n            setInputVisible({ row: null, cell: null, leadId: null });\n          }\n        })\n      break;\n\n      \n      case \"region\":\n        dispatch(patchRegionLead({ id: leadId, leadRegion: newText }))\n        .then((response) => {\n          if (response.payload.name) {\n            const updatedLeads = [...leads];\n            updatedLeads[leadIndex] = {\n              ...updatedLeads[leadIndex],\n              region: newText\n            };\n            setLeads(updatedLeads);\n            setNewText(\"\");\n            setInputVisible({ row: null, cell: null, leadId: null });\n          }\n        })\n      break;\n\n      \n      case \"country\":\n        if (fieldName === \"country\") {\n          dispatch(patchCountryLead({ id: leadId, leadCountry: newText }))\n            .then((response) => {\n              if (response.payload.name) {\n                const updatedLeads = [...leads];\n                updatedLeads[leadIndex] = {\n                  ...updatedLeads[leadIndex],\n                  country: newText\n                };\n                setLeads(updatedLeads);\n                setNewText(\"\");\n                setInputVisible({ row: null, cell: null, leadId: null });\n              }\n            })\n        }\n      break;\n      default:\n    }\n  };\n  \n\n  return (\n    <>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={newText}\n              onChange={handleInputChange}\n              onInput={handleTextareaChange}\n            />\n            <button className=\"ButtonSave\" type=\"submit\"\n              onClick={(e) => handleSubmit(e, inputVisible.row, inputVisible.cell, inputVisible.leadId)}\n            >\n              Save\n            </button>\n          </form>\n        )}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../redux/Lead/lead-operation\";\n\n\n\nexport const NextCall = ({ lead }) => {\n  const [newDate, setNewDate] = useState(\"\");\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setNewDate(lead.nextCall.toString().slice(0, 16));\n\n    }\n  }, [lead.nextCall]);\n  \n\n  const handleInputChange = (event) => {\n    const updatedDate = event.target.value;\n    dispatch(patchNextCall({ id: lead._id, leadNextcall: updatedDate }))\n      .then((response) => {\n        if (response.payload.nextCall) {\n          setNewDate(updatedDate);\n        }\n      })\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\">\n      <label>\n        <input\n          type=\"datetime-local\"\n          value={newDate}\n          onChange={handleInputChange}\n        />\n      </label>\n    </td>\n  );\n};\n\n","\nexport const TimeZone = ({lead, ArrowDown, toggleInputVisibility, index, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n      {lead.timeZone}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"timeZone\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"timeZone\"\n        )}`}\n      />\n    </td>\n  );\n};","\nexport const City = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  return (\n    <td className=\"TableHeaderItem\" id={`city-${index}`}>\n      {lead.city}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"city\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"city\"\n        )}`}\n      />\n    </td>\n  );\n};\n\n","\nexport const Region = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`region-${index}`}>\n      {lead.region}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"region\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"region\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Country = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  \n  return (\n    <td className=\"TableHeaderItem\" id={`country-${index}`}>\n      {lead.country}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"country\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"country\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Status = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow}) => {\n  \n  \n  return (\n    <td className=\"TableHeaderItem\" id={`status-${index}`}>\n      {lead.status}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"status\"\n        )}`}\n      />\n    </td>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n\n  return (\n    <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\" }}>\n      {calculateClientTime(lead.timeZone)}\n    </td>\n  );\n};\n","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\nimport { DropdownTimeZone } from \"../tableComponents/dropdownTimeZone\";\nimport { DropdownStatus } from \"../tableComponents/dropdownStatus\";\nimport { InputWindow } from \"../tableComponents/inputWindow\";\nimport { NextCall } from \"../tableComponents/nextCall\";\nimport { TimeZone } from \"../tableComponents/timeZone\";\nimport { City } from \"../tableComponents/city\";\nimport { Region } from \"../tableComponents/region\";\nimport { Country } from \"../tableComponents/country\";\nimport { Status } from \"../tableComponents/status\";\nimport { useTableHook } from \"../tableHook.jsx/tableHook\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getLeadById,\n  patchStatus,\n  patchTimeZone,\n} from \"../../../redux/Lead/lead-operation.js\";\nimport { ClientTime } from \"../tableComponents/clientTime.jsx\";\nimport { useUser } from \"../../../hooks/useUser.js\";\nimport { CustomCheckbox } from \"../tableExternalLeads/CustomCheckbox.jsx\";\nimport { useAuth } from \"../../../hooks/useAuth.js\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice.js\";\n\nexport const TableLeads = () => {\n  const {\n    isLeads,\n    selectedExternalLeadsCheckedCheckbox,\n  } = useLead();\n  const { userLeads, userLeadsComponent } = useUser();\n  const { userBranch, userRole } = useAuth();\n  const [leads, setLeads] = useState();\n  const dispatch = useDispatch();\n   console.log(userRole)\n\n  useEffect(() => {\n    if (userLeads || isLeads) {\n      setLeads(userLeadsComponent ? userLeads : isLeads);\n    }\n  }, [isLeads, userLeadsComponent, userLeads]);\n\n  const {\n    inputVisible,\n    inputRef,\n    dropdownRef,\n    setInputVisible,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  } = useTableHook();\n\n  const handleDropdownItemClick = (leadIndex, status, name, leadId) => {\n    const updatedLeads = [...leads];\n    if (name === \"timeZone\") {\n      dispatch(patchTimeZone({ id: leadId, leadTimeZone: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        timeZone: status,\n      };\n    } else if (name === \"status\") {\n      dispatch(patchStatus({ id: leadId, leadStatus: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        status: status,\n      };\n    }\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n    const openExternalLeadDetail = (_id) => {  \n    dispatch(openModalLeadDetail());\n    dispatch(getLeadById({leadId: _id}));\n  };\n\n  return (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            {userRole !== \"Conversion Agent\" && <th className=\"TableHeaderItem\">Assign / Reassign Agent</th>}\n            {userRole !== \"Conversion Manager\" &&\n              userRole !== \"Conversion Agent\" && <th className=\"TableHeaderItem\">Assign / Reassign Manager</th>}\n            <th className=\"TableHeaderItem\">Next call</th>\n            <th className=\"TableHeaderItem\">Details</th>\n            {userBranch === \"Main\" && (\n              <th className=\"TableHeaderItem\">Check</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <Status\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\">{lead.resource}</td>\n                <Country\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <Region\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <City\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <TimeZone\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  index={index}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <ClientTime lead={lead} />\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.updatedAt &&\n                    lead.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.createdAt &&\n                    lead.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                {userRole !== \"Conversion Agent\" && <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: !lead.agentId ? \"#ff000082\" : \"\" }}\n                >\n                  {lead.agentId && lead.agentId.username}\n                </td>}\n                     {userRole !== \"Conversion Manager\" && userRole !== \"Conversion Agent\" && <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: !lead.managerId.username ? \"#ff000082\" : \"\" }}\n                >\n                  {lead.managerId.username}\n                </td>}\n                <NextCall lead={lead} />\n                                  <td className=\"TableHeaderItem\">\n                    <button className=\"check-btn\" type='button'\n                      onClick={() => openExternalLeadDetail(lead._id)}\n                    >Open\n                    </button>\n                  </td>\n                {userBranch === \"Main\" && (\n                  <td className=\"TableHeaderItem\">\n                    <CustomCheckbox\n                      lead={lead}\n                      selectedExternalLeadsCheckedCheckbox={\n                        selectedExternalLeadsCheckedCheckbox\n                      }\n                    />\n                  </td>\n                )}\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <InputWindow\n        leads={leads}\n        inputVisible={inputVisible}\n        inputRef={inputRef}\n        setLeads={setLeads}\n        handleTextareaChange={handleTextareaChange}\n        setInputVisible={setInputVisible}\n      />\n      <DropdownStatus\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n      <DropdownTimeZone\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n    </TableListStyled>\n  )\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getStatus, getTimeZone } from \"../../../redux/Lead/lead-operation\";\n\n\nexport const useTableHook = () => {\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null, leadId: null });\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n\n  const toggleInputVisibility = (row, cell, leadId) => {\n    if (cell === \"status\") {\n      dispatch(getStatus())\n    } else if (cell === \"timeZone\") {\n      dispatch(getTimeZone())\n    }\n    setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell, leadId }\n    );\n  };\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n        if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n            (rect.top + window.scrollY + rect.height) / 2\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.36\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible]);\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  },[]);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return {\n    inputVisible,\n    inputRef,\n    isMenuBox,\n    dropdownRef,\n    setInputVisible,\n    setMenuBox,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  };\n};\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\n\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const { isLeadLoading, leadOffice } = useLead();\n    const { isLeadDetails } = useModal();\n    const { availableUsersForAssign, userLeadsComponent } = useUser()\n    const dispatch = useDispatch();\n    console.log(\"Users for Assign:\", availableUsersForAssign);\n    \n\n    const resetStateForLeads = () => {\n        if (leadOffice) {\n            dispatch(resetOfficeLeadState());\n        }\n        if (userLeadsComponent) {\n            dispatch(resetUserLeadsComponent());\n        }\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForLeads}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();  \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n    \n    \n    \n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, forNoneAdminLogin} = useAuth();\n\n\n    useEffect(() => {\n        if (!forNoneAdminLogin && !userLeadsComponent && !isAdmin) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, forNoneAdminLogin, isAdmin, userLeadsComponent]);\n    \n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","TableListStyled","primary_white","primary_black","transition","main_transition","primary_grey","DropdownTimeZone","inputVisible","dropdownRef","handleDropdownItemClick","timeZone","timeZoneData","isTimeZoneLoading","useLead","_jsx","_Fragment","children","row","cell","className","split","map","load","item","zona","value","onClick","leadId","DropdownStatus","status","tstatusData","isStatusLoading","isStatusError","InputWindow","leads","inputRef","setLeads","handleTextareaChange","setInputVisible","dispatch","useDispatch","newText","setNewText","useState","_jsxs","onChange","event","onInput","type","e","handleSubmit","leadIndex","fieldName","preventDefault","patchCityLead","leadCity","then","response","payload","name","updatedLeads","city","patchRegionLead","leadRegion","region","patchCountryLead","leadCountry","country","NextCall","lead","newDate","setNewDate","useEffect","nextCall","toString","slice","updatedDate","patchNextCall","_id","leadNextcall","TimeZone","ArrowDown","toggleInputVisibility","index","toggleUserMenuDropArrow","concat","City","Region","Country","Status","ClientTime","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","style","maxWidth","timeZoneOffset","getTime","toLocaleString","year","month","day","hour","minute","second","undefined","TableLeads","isLeads","selectedExternalLeadsCheckedCheckbox","userLeads","userLeadsComponent","useUser","userBranch","userRole","useAuth","console","log","useTableHook","isMenuBox","setMenuBox","useRef","inputElement","document","getElementById","inputContainer","current","dropdownContainer","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","display","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","textarea","scrollHeight","getStatus","getTimeZone","patchTimeZone","leadTimeZone","patchStatus","leadStatus","clientId","lastName","email","phone","resource","selfCreated","updatedAt","replace","createdAt","agentId","username","managerId","openExternalLeadDetail","openModalLeadDetail","getLeadById","CustomCheckbox","OfficeLeads","isAdmin","isLeadLoading","leadOffice","isLeadDetails","useModal","availableUsersForAssign","NavLink","to","resetStateForLeads","resetOfficeLeadState","resetUserLeadsComponent","RotatingLoader","Pagination","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","ArrowSVG","backToUsers","OfficeLeadsPage","forNoneAdminLogin","getAvailableUsers"],"sourceRoot":""}