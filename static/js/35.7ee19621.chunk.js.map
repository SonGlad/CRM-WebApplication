{"version":3,"file":"static/js/35.7ee19621.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableLeads/tableLeads.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n\n  .Table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: fixed;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n        font-size: 0.5rem;\n    /* display: grid; */\n    gap: 0.25rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n\n`;\n","import { TableListStyled } from \"./tableLeads.styled\";\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport leadsData from \"./leads.json\";\nimport statusData from \"./status.json\";\nimport timeZoneData from \"./timeZone.json\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\n\n\n\nexport const TableLeads = () => {\n  const [leads, setLeads] = useState(leadsData);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null });\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  const handleInputChange = (event, leadIndex, fieldName) => {\n    const updatedLeads = [...leads];\n    const fieldParts = fieldName.split(\".\");\n    if (fieldParts.length === 2) {\n      updatedLeads[leadIndex][fieldParts[0]][fieldParts[1]] =\n        event.target.value;\n    } else {\n      updatedLeads[leadIndex][fieldName] = event.target.value;\n    }\n    setLeads(updatedLeads);\n  };\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n  useEffect(() => {\n    const textareas = document.querySelectorAll(\"textarea\");\n    textareas.forEach((textarea) => {\n      adjustTextareaHeight(textarea);\n    });\n  }, [leads]);\n\n\n  const handleDropdownItemClick = (leadIndex, status) => {\n    const updatedLeads = [...leads];\n    updatedLeads[leadIndex].status = status;\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    return clientTime.toLocaleString();\n  };\n\n\n  const toggleInputVisibility = (row, cell) => {\n    setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell }\n    );\n  };\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n        if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n            (rect.top + window.scrollY + rect.height) / 2\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.36\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible]);\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  }, []);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            <th className=\"TableHeaderItem\">Agent</th>\n            <th className=\"TableHeaderItem\">Next call</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\" id={`lastName-${index}`}>\n                  {lead.lastName}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"lastName\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"lastName\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`email-${index}`}>\n                  {lead.email}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"email\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"email\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`phone-${index}`}>\n                  {lead.phone}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"phone\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"phone\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`status-${index}`}>\n                  {lead.status}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"status\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"status\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`resource-${index}`}>\n                  {lead.resource}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"resource\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"resource\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`country-${index}`}>\n                  {lead.country}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"country\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"country\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`region-${index}`}>\n                  {lead.region}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"region\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"region\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`city-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"city\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"city\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"timeZone\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"timeZone\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {calculateClientTime(lead.timeZone)}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: lead.assigned ? \"none\" : \"#ff000082\" }}\n                >\n                  {lead.conAgentId}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <label>\n                    <input\n                      type=\"datetime-local\"\n                      value={lead.latestComment.nextCall\n                        .toString()\n                        .slice(0, 16)}\n                      onChange={(e) =>\n                        handleInputChange(e, index, \"latestComment.nextCall\")\n                      }\n                      onInput={handleTextareaChange}\n                    />\n                  </label>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={leads[inputVisible.row][inputVisible.cell]}\n              onChange={(e) =>\n                handleInputChange(e, inputVisible.row, inputVisible.cell)\n              }\n              onInput={handleTextareaChange}\n            />\n            <button className=\"ButtonSave\" type=\"submit\">\n              Save\n            </button>\n          </form>\n        )}\n      {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n        <ul className=\"dropdown\" ref={dropdownRef}>\n          {statusData.map((statu, item) => (\n            <li\n              className=\"ListItem\"\n              key={item}\n              value={statu}\n              onClick={() => handleDropdownItemClick(inputVisible.row, statu)}\n            >\n              {statu}\n            </li>\n          ))}\n        </ul>\n      )}\n      {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n        <ul className=\"dropdown\" ref={dropdownRef}>\n          {timeZoneData.map((zona, item) => (\n            <li\n              className=\"ListItem\"\n              key={item}\n              value={zona}\n              onClick={() => handleDropdownItemClick(inputVisible.row, zona)}\n            >\n              {zona}\n            </li>\n          ))}\n        </ul>\n      )}\n    </TableListStyled>\n  );\n}\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeState } from \"../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const {availableUsersForAssign} = useUser()\n    const dispatch = useDispatch();\n    console.log(\"Users for Assign:\", availableUsersForAssign);\n\n\n    const resetStateForOffice = () => {\n        dispatch(resetOfficeState())\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForOffice}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <TableLeads/>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center ;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\n\n\n\nexport const UserLeads = () => {\n    const { userLeads, userName, userLeadsComponentData } = useUser();\n    const dispatch = useDispatch();\n    console.log(userLeads);\n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n\n\n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' on onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                <h2>UserLeads</h2>\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\n\n\nconst OfficeLeadsPage = () => {\n    const {userLeadsComponent} = useUser();\n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","TableListStyled","primary_white","TableLeads","leads","setLeads","useState","leadsData","currentTime","setCurrentTime","Date","isMenuBox","setMenuBox","inputVisible","setInputVisible","row","cell","inputRef","useRef","dropdownRef","useEffect","interval","setInterval","clearInterval","handleInputChange","event","leadIndex","fieldName","updatedLeads","fieldParts","split","value","adjustTextareaHeight","textarea","style","concat","scrollHeight","handleTextareaChange","document","querySelectorAll","forEach","handleDropdownItemClick","status","toggleInputVisibility","toggleUserMenuDropArrow","inputElement","getElementById","inputContainer","current","dropdownContainer","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","display","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","_jsxs","children","className","_jsx","map","lead","index","clientId","name","lastName","ArrowDown","onClick","email","phone","resource","country","region","city","timeZoneOffset","timeZone","getTime","toLocaleString","selfCreated","latestComment","updatedAt","slice","replace","createdAt","assigned","conAgentId","type","nextCall","toString","onChange","e","onInput","_id","statusData","statu","item","timeZoneData","zona","OfficeLeads","isAdmin","useAuth","availableUsersForAssign","useUser","dispatch","useDispatch","console","log","NavLink","to","resetStateForOffice","resetOfficeState","UserLeadsStyled","transition","main_transition","UserLeads","userLeads","userName","userLeadsComponentData","openUserModal","openModalUserDetail","ArrowSVG","on","backToUsers","resetUserLeadsComponent","OfficeLeadsPage","userLeadsComponent","_Fragment"],"sourceRoot":""}