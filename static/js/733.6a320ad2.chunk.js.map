{"version":3,"file":"static/js/733.6a320ad2.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/Pagination/Pagination.styled.js","images/svg-icons/angle-bouble-left.svg","images/svg-icons/angle-double-right.svg","components/Pagination/PaginationMap.jsx","components/Pagination/Pagination.jsx","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableLeads/TableComponents/clientTime.jsx","components/table/tableLeads/TableComponents/nextCall.jsx","components/table/tableLeads/TableComponents/TableComponets.Styled.js","components/table/tableLeads/TableComponents/Status.jsx","components/table/tableLeads/TableComponents/TimeZone.jsx","components/table/tableLeads/TableComponents/Country.jsx","components/table/tableLeads/TableComponents/Region.jsx","components/table/tableLeads/TableComponents/City.jsx","components/table/tableLeads/TableComponents/CustomAssignLeadCheckbox.jsx","components/table/tableLeads/tableLeads.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const PaginationStyled = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: auto;\n\n    .pagination-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n\n    .left-button-block,\n    .right-button-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n    .paginaton-button{\n        border-radius: 50%;\n        padding: 0.25rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        scale: calc(1);\n        transition: scale ${p => p.theme.transition.main_transition};\n\n        & .arrow-icon{\n            width: 1rem;\n            height: 1rem;\n        }\n        & .icon{\n            width: 0.75rem;\n            height: 0.75rem;\n        }\n        & .left-arrow{\n            transform: rotate(90deg);\n        }\n        & .right-arrow{\n            transform: rotate(-90deg);\n        }\n        &:hover{\n            scale: calc(1.2);\n        }\n    }\n\n    .right-button-block{\n        & button {\n            background-color: ${p => p.theme.color.primary_green_lite};\n\n            & .right-arrow{\n                stroke: ${p => p.theme.color.primary_black};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_black};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.primary_grey};\n                }\n                & .right-arrow{\n                    stroke: ${p => p.theme.color.primary_grey};\n                }\n            }\n\n        }\n        \n    }\n\n    .left-button-block{\n        & button {\n            background-color: ${p => p.theme.color.for_modal_color};\n\n            & .left-arrow{\n                stroke: ${p => p.theme.color.primary_white};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_white};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .left-arrow{\n                    stroke: ${p => p.theme.color.background};\n                }\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.background};\n                }\n            }\n        }\n    }\n\n    .button{\n        padding: 0.375rem;\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const PaginationMapStyled = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.375rem;\n\n    .content-list{\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        max-width: 17.875rem;\n        overflow-x: auto;\n        scroll-snap-type: x mandatory;\n        padding: 0 2px;\n\n        &::-webkit-scrollbar {\n            display: none;\n        }\n        &::-webkit-scrollbar-thumb {\n            display: none;\n        }\n    }\n\n    .content-item {\n        scroll-snap-align: center;\n        padding: 0;\n    }\n\n    .button-background{\n        font-size: 0.75rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0.25rem;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 50%;\n        background-color: pink;\n        background-color: ${p => p.theme.color.for_modal_color};\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            background-color: ${p => p.theme.color.primary_green_lite};\n            color: ${p => p.theme.color.primary_black};\n        }\n    }\n\n    .button-active{\n        background-color: ${p => p.theme.color.primary_green_lite};\n        color: ${p => p.theme.color.primary_black};\n    }\n`","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleBoubleLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-right\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-right\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-right\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359zM15.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleBoubleLeft);\nexport default __webpack_public_path__ + \"static/media/angle-bouble-left.318d2cbb1e36601ea73d1e1b12583d67.svg\";\nexport { ForwardRef as ReactComponent };","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleDoubleRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-left\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-left\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-left\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359zM15.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleDoubleRight);\nexport default __webpack_public_path__ + \"static/media/angle-double-right.0005b6c7ffad737a3008b46f779d2062.svg\";\nexport { ForwardRef as ReactComponent };","import { PaginationMapStyled } from \"./Pagination.styled\";\nimport { forwardRef } from \"react\";\n\n\nexport const PaginationMap = forwardRef(({\n    firstVisible,\n    clickOnFirstVisible,\n    listRef,\n    elements,\n    toggleButtonBackground,\n    setButtonActive,\n    lastVisible,\n    clickOnLastVisible\n}, ref) => {\n\n\n    return(\n        <PaginationMapStyled>\n            {firstVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnFirstVisible}\n                ><p>...</p>\n                </button>\n            )}\n            <ul className=\"content-list\" ref={listRef}>\n                {elements.map((element, index) => (\n                    <li className=\"content-item\" key={index}>\n                        <button type=\"button\" \n                            className={`button-background ${toggleButtonBackground(index + 1)}`}\n                            onClick={() => setButtonActive(index + 1)}\n                        ><p>{element}</p>\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {lastVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnLastVisible}\n                ><p>...</p>\n                </button>\n            )}\n        </PaginationMapStyled>\n    )\n});","import { PaginationStyled } from \"./Pagination.styled\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {ReactComponent as ArrowDoubleLeft} from \"../../images/svg-icons/angle-bouble-left.svg\";\nimport {ReactComponent as ArrowDoubleRight} from \"../../images/svg-icons/angle-double-right.svg\";\nimport {ReactComponent as SingleArrow} from \"../../images/svg-icons/arrow-down.svg\";\nimport { PaginationMap } from \"./PaginationMap\";\nimport { getAllLeads } from \"../../redux/Lead/lead-operation\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const Pagination = () => {\n    const dispatch = useDispatch();\n    const { isAdmin, isManager, isConversion } = useAuth();\n    const { totalPages, leadOffice, leadsAmountPerPage } = useLead();\n    const { userLeadsComponent } = useUser();\n    const [count, setCount] = useState(1);\n    const [firstVisible, setFirstVisible] = useState(false);\n    const [lastVisible, setLastVisible] = useState(false);\n    const [lastVisibleValue, setLastVisibleValue] = useState(0);\n    const [firstVisibleValue, setFirstVisibleValue] = useState(0);\n    const [decreaseEnable, setDecreaseEnable] = useState(false);\n    const [increaseEnable, setIncreaseEnable] = useState(false);\n    const listRef = useRef(null);  \n    \n    \n    let amount;\n    if (totalPages) {\n        amount = Number(totalPages);\n    } else {\n        amount = 1;\n    }\n    const elements = Array.from({ length: amount }, (_, index) => index + 1);\n\n\n    const page = count.toString();\n    const limit = leadsAmountPerPage.toString();\n    \n\n    useEffect(() => {\n        if ((isAdmin || isManager || isConversion) && !userLeadsComponent) {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n                branch: leadOffice,\n            }));\n        }\n    },[dispatch, isAdmin, isConversion, isManager, leadOffice, limit, page, userLeadsComponent]);\n       \n     \n\n    useEffect(() => {\n        if (listRef.current) {\n          const activeButton = listRef.current.querySelector('.button-active');\n          if (activeButton) {\n            activeButton.scrollIntoView({\n              behavior: 'smooth',\n              block: 'nearest',\n              inline: 'center'\n            });\n          }\n        }\n    }, [count]);\n\n    \n    useEffect(() => {\n        if (elements.length > 9) {\n            setLastVisible(true);\n            setLastVisibleValue(10);\n        }\n        if (elements.length > 1) {\n            setIncreaseEnable(true);\n        }\n        if (elements.length < 9) {           \n            setLastVisible(false);\n        }\n        if (elements.length === 1) {\n            setIncreaseEnable(false);\n            setLastVisible(false);\n        }\n    },[elements.length]);\n    \n\n    const toggleButtonBackground = (index) => {\n        return index === count ? 'button-active' : '';\n    };\n\n\n    const increaseCount = () => {\n        if (count <= (elements.length - 1)) {\n            setCount(prevState => prevState + 1);\n            setDecreaseEnable(true);\n        }\n        if((elements.length - count) <= 5){\n            setLastVisible(false);\n        }\n        if (count + 1 === elements.length) {\n            setIncreaseEnable(false);\n        }\n        if ((elements.length > 9) && ((count >= 5))) { \n            setFirstVisible(true);\n            const calculatedLastValue = count + 6;\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 4;\n            setFirstVisibleValue(calculatedFirstValue > (elements.length - 9) ? (elements.length - 9) : calculatedFirstValue);\n        }\n    };\n \n\n    const decreaseCount = () => {\n        if (count >= 2) {\n            setCount(prevState => prevState - 1);\n            setIncreaseEnable(true);\n        }\n        if (count - 1 <= 1) {\n            setDecreaseEnable(false);\n        }\n        if((elements.length > 9) && ((elements.length - count) >= 4)){\n            setLastVisible(true);\n            const calculatedLastValue = Math.max(10, count + 4);\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 6;\n            setFirstVisibleValue(calculatedFirstValue > 1 ? calculatedFirstValue : 1); \n        }\n        if ((elements.length > 9) && ((count <= 6))) { \n            setFirstVisible(false);\n        }\n    };\n \n\n    const setButtonActive = (index) => {\n        setCount(index);\n    \n        const remainingElements = elements.length - index;\n        const isLargeList = elements.length > 9;\n        setFirstVisible(isLargeList && index > 5);\n        setLastVisible(isLargeList && remainingElements >= 5);\n    \n        if (isLargeList) {\n\n            const calculatedLastValue = Math.max(Math.min(index + 5, elements.length), 10);\n            const maxFirstValue = elements.length - 9;\n            const calculatedFirstValue = Math.max(index - 5, 1);\n            const finalFirstValue = calculatedFirstValue > maxFirstValue ? maxFirstValue : calculatedFirstValue;\n    \n            setLastVisibleValue(calculatedLastValue);\n            setFirstVisibleValue(finalFirstValue);\n\n        } else {\n            setFirstVisible(false);\n            setLastVisible(false);\n        }\n\n        setDecreaseEnable(index > 1);\n        setIncreaseEnable(index < elements.length);\n    };\n\n\n    const toEnd = () => {\n        setCount(elements.length);\n        setIncreaseEnable(false);\n        setDecreaseEnable(true);\n        if(elements.length > 9){\n            setLastVisible(false);\n            setFirstVisible(true);\n            setLastVisibleValue(elements.length);\n            setFirstVisibleValue(elements.length - 9);\n        }\n    };\n\n\n    const toBegin = () => {\n        setCount(1);\n        setIncreaseEnable(true);\n        setDecreaseEnable(false);\n        if(elements.length > 9){\n            setLastVisible(true);\n            setFirstVisible(false);\n            setLastVisibleValue(10);\n            setFirstVisibleValue(0);\n        }\n    };\n\n\n    const clickOnFirstVisible = () => {\n        setCount(firstVisibleValue);\n        setIncreaseEnable(true);\n\n        const calculatedFirstValue = firstVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(Math.max(newFirstVisibleValue, 0));\n        \n        if (firstVisibleValue === 1) {\n            setDecreaseEnable(false);\n        }\n\n        if (count <= 10) {\n            setFirstVisible(false);\n        }\n        \n        if (elements.length >= count) {\n            setLastVisible(true);\n        }\n\n        const calculatedLastValue = firstVisibleValue + 5;\n        const newLastVisibleValue = Math.min(Math.max(calculatedLastValue, 10), elements.length);\n        setLastVisibleValue(newLastVisibleValue);\n    };\n\n\n    const clickOnLastVisible = () => {\n        setCount(lastVisibleValue);\n        setFirstVisible(true);\n        setDecreaseEnable(true);\n        \n        const newLastVisibleValue = Math.min(elements.length, lastVisibleValue + 5);\n        setLastVisibleValue(newLastVisibleValue);\n\n        if (newLastVisibleValue  >= elements.length) {\n            setLastVisible(false);\n        }\n        if (lastVisibleValue === elements.length) {\n            setIncreaseEnable(false);\n        }\n\n        const calculatedFirstValue = lastVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(newFirstVisibleValue);\n    };\n\n   \n    \n    return(\n        <PaginationStyled>\n            <div className=\"pagination-block\">\n                <div className=\"left-button-block\">\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toBegin}\n                        disabled={!decreaseEnable}\n                    >\n                        <ArrowDoubleRight className=\"arrow-icon\" width={16} height={16}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={decreaseCount}\n                        disabled={!decreaseEnable}\n                    >\n                        <SingleArrow className=\"icon left-arrow\" width={12} height={12}/>\n                    </button>\n                </div>\n                <PaginationMap\n                    firstVisible={firstVisible}\n                    clickOnFirstVisible={clickOnFirstVisible}\n                    listRef={listRef}\n                    elements={elements}\n                    toggleButtonBackground={toggleButtonBackground}\n                    setButtonActive={setButtonActive}\n                    lastVisible={lastVisible}\n                    clickOnLastVisible={clickOnLastVisible}\n                />\n                <div className=\"right-button-block\">\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={increaseCount}\n                        disabled={!increaseEnable}\n                    >\n                        <SingleArrow className=\"icon right-arrow\" width={12} height={12}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toEnd}\n                        disabled={!increaseEnable}\n                    >\n                        <ArrowDoubleLeft className=\"arrow-icon\" width={16} height={16}/> \n                    </button>\n                </div>\n            </div>\n        </PaginationStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        justify-content: ${p => p.$isAdmin ? 'none' : 'center'};\n        margin-bottom: 1rem;\n    }\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        margin-right: 32%;\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem\n    }\n\n\n    .filter-block{\n        margin-bottom: 2rem;\n    }\n\n    \n    .filter-list{\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: center;\n        font-weight: 500;\n        line-height: 1.25rem;\n    }\n\n    .small-table{\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n\n        & tbody{\n            & tr{\n                & td:last-child{\n                    border-right: none;\n                }\n            }\n\n            & tr:last-child{\n                & td{\n                    border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n                }\n            }\n        }\n    }\n`","import styled from \"styled-components\";\n\n\nexport const TableListStyled = styled.div`\n  color: ${p => p.theme.color.primary_white};\n  overflow-y: auto;\n  height: 74dvh;\n  position: relative;\n  border: 1px solid ${p => p.theme.color.primary_green_lite};\n  border-right: none;\n  border-radius: 12px;\n\n  @media screen and (min-width: 834px){\n    height: 71dvh;\n  }\n\n  @media screen and (min-width: 1236px){\n    height: ${props => props.$userLeadsComponent ? '73dvh' : '69.1dvh'};\n  }\n\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n    background-color: ${p => p.theme.color.primary_grey};\n    border-radius: 24px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-color: ${p => p.theme.color.primary_green_lite};\n  }\n\n\n  & table {\n    width: 100%;\n    border-collapse: collapse;\n    table-layout: auto;\n\n    & thead{\n      position: sticky;\n      top: 0;\n      z-index: 2;\n\n      & th{\n        background-color: ${p => p.theme.color.background3};\n        border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n        padding: 1rem 0.25rem 1rem 0.25rem;\n\n\n        &:last-child{\n          border-right: none;\n        }\n      }\n    }\n  }\n\n  .back-color{\n    background-color: #369469;\n    box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px 10px inset;\n  }\n\n  & tr, td, th{\n    text-align: center;\n  }\n\n  & tbody{\n    & td {\n      border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n      border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n      padding:0.5rem 0.25rem;\n    }\n\n    & tr:last-child{\n      & td{\n        border-bottom: none;\n      }\n    }\n  }\n\n  .TableHeaderName{\n    font-weight: 600;\n    font-size: 0.9rem;\n    overflow-wrap: break-word;\n    text-align: center;\n  }\n\n  .TableHeaderItem {\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n  }\n\n  #cityColumn,\n  #regionColumn,\n  #countryColumn {\n    padding: 0.5rem 0rem;\n  }\n\n\n  /* td[id^=\"status-\"],\n  td[id^=\"timeZone-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  } */\n\n  .calendar-cont{\n    width: 100%;\n    height: 100%;\n    \n    & input{\n      width: 72px;\n      border: none;\n      background: none;\n      padding: 0;\n      text-align: center;\n      color: ${props => props.theme.color.primary_white};\n      transition: border ${props => props.theme.transition.main_transition};\n\n      &:focus,\n      &:hover {\n        color: ${props => props.theme.color.primary_green_lite};\n\n        &::placeholder{\n        color: ${props => props.theme.color.primary_green_lite};\n      }\n      }\n      \n      &::placeholder{\n        color: ${props => props.theme.color.primary_white};\n      }\n    }\n  }\n\n  .check-btn{\n    font-size: 0.5rem;\n    color: ${(props) => props.theme.color.primary_black};\n    background-color: ${p => p.theme.color.primary_green_lite};\n    border: 1px solid ${p => p.theme.color.primary_green_lite};\n    padding: 0.25rem 0.25rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    transition: color ${p => p.theme.transition.main_transition};\n    flex-wrap: nowrap;\n\n    &:hover{\n      color: ${props => props.theme.color.primary_grey};\n    }\n  }\n`;\n\n\n\n\n\n\n\n\n\n\nexport const CustomCheckboxStyled = styled.div`\n\n  .custom-checkbox{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .checkbox {\n    margin-top: 5px;\n    width: 1rem;\n    height: 1rem;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n  }\n  \n  .custom-checkbox-before, .custom-checkbox-after{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n  }\n  .custom-checkbox-before{\n    opacity: 1;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .custom-checkbox-after{\n    opacity: 0;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .checkbox:focus + .custom-checkbox > .custom-checkbox-before{\n    outline: 3px solid ${p => p.theme.color.primary_green_lite};\n    border-radius: 2px;\n    outline-offset: -3px; \n  }\n\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-after{\n    opacity: 1;\n  }\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-before{\n    opacity: 0;\n  }\n`\n","import { useState, useEffect } from \"react\";\n\n\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const currentUTCTime  = new Date(\n      currentTime.getTime() + currentTime.getTimezoneOffset() * 60000\n    );     \n\n    const clientTime = new Date(\n      currentUTCTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n  \n\n  return (\n    <>\n      {calculateClientTime(lead.timeZone)}\n    </>\n  );\n};\n","import Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/dark.css\";\nimport { useState, useEffect ,useMemo, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../../redux/Lead/lead-operation\";\n\n\n\nexport const NextCall = ({ lead }) => {\n  const [date, setDate] = useState(null);\n  const dateNow = useRef(new Date());\n  const dispatch = useDispatch();\n\n\n  const nextCallDate = useMemo(() => {\n    return lead.nextCall ? new Date(lead.nextCall) : null;\n  }, [lead.nextCall]);\n\n\n  const isOverdue = date && date < dateNow.current;\n  const timeLeft = date ? date - dateNow.current : 0;\n  const isAlmostDue = !isOverdue && timeLeft <= 6 * 60 * 60 * 1000;\n  const isToday = date && dateNow.current.toDateString() === date.toDateString();\n  const minDateOption = date && date > dateNow.current ? \"today\" : null;\n  const minTimeOption = isToday ? dateNow.current.toTimeString().slice(0, 5) : null;\n\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setDate(nextCallDate);\n    } else {\n      setDate(null);\n    }\n  }, [lead.nextCall, nextCallDate]);\n\n\n  const submitNextCallDate = () => {\n    if ((date !== (nextCallDate || null)) && (date !== dateNow.current)) {\n      if (isOverdue) {\n        setDate(null);\n      } else {\n        const updatedDate = date.toISOString().slice(0, 16)\n        dispatch(patchNextCall({\n          id: lead._id, \n          leadNextcall: updatedDate \n        }))\n      }\n    }\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\"\n      style={{\n        backgroundColor: isOverdue\n          ? '#ff000082'\n          : isAlmostDue\n          ? '#223f53'\n          : 'transparent'\n      }}\n    >\n      <div className=\"calendar-cont\">\n        <Flatpickr\n          data-enable-time\n          value={date ? date : ''}\n          onChange={([date]) => setDate(date)}\n          options={{\n            dateFormat: \"d.m.Y  H:i\",\n            minDate: minDateOption,\n            minTime: minTimeOption,\n            weekNumbers: true,\n            \"locale\": {\n              \"firstDayOfWeek\": 1\n            },\n          }}\n          placeholder=\"Select Date/ Time\"\n          onClose={submitNextCallDate}\n        />   \n      </div>\n    </td>\n  );\n};\n","import styled from \"styled-components\"\n\n\nexport const StatusesStyled = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .status-btn{\n        color: ${p => p.theme.color.primary_white};\n        padding: 0;\n        width: 100%;\n        min-height: 1.3rem;\n        background-color: transparent;\n    }\n\n    .arrow-svg {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        stroke: black;\n        stroke: ${p => p.theme.color.primary_green_lite};\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        top: -4px;\n        right: -2px;\n        transform: rotate(-90deg);\n    } \n    \n    .arrow-svg-open {\n        transform: rotate(90deg);\n    } \n\n    .status-list{\n        height: 0rem;\n        position: absolute;\n        overflow-y: auto;\n        z-index: 1;\n        top: -0.5rem;\n        left: ${props => props.$isTimeZone ? '115%' : '110%'};\n        border-radius: 0.5rem;\n        padding: 0.25rem;\n        gap: 0.75rem;\n        background-color: ${p => p.theme.color.background2};\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-evenly;\n        visibility: hidden;\n        opacity: 0;\n        font-size: 0.25rem;\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        transform: scale(0.5);\n        transform-origin: left top;\n        transition: all ${p => p.theme.transition.main_transition};\n\n\n        &::-webkit-scrollbar {\n            width: 0.25rem;\n            background-color: transparent;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background-color: ${p => p.theme.color.primary_grey};\n            border-radius: 5px;\n        }\n    }\n\n    .status-list-visible{\n        height: 11.8rem;\n        width: ${props => props.$isTimeZone ? '4rem' : '7rem'};\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .status-list-visible-adjusted{\n        top: -10.1rem;\n        height: 11.8rem;\n        width: ${props => props.$isTimeZone ? '4rem' : '7rem'};\n        opacity: 1;\n        visibility: visible;\n        transform: scale(1);\n        transform-origin: left top;\n        font-size: 0.7rem;\n    }\n\n    .status-item{\n        cursor: pointer;\n\n        & .drop-cont-text{\n            transition: color ${p => p.theme.transition.main_transition};\n            color: ${p => p.theme.color.primary_white};\n\n            &:hover{\n                color: ${p => p.theme.color.primary_green_lite}\n            }\n        }\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const CountryStyled = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .data-btn{\n        color: ${props => {\n            if (props.$isCountry || props.$isRegion || props.$isCity){\n                return props.theme.color.primary_white;\n            } else {\n                return props.theme.color.primary_grey;\n            }\n        }};\n        padding: 0rem 0.25rem;\n        width: 100%;\n        min-height: 1.3rem;\n        background-color: transparent;\n    }\n\n    .arrow-icon {\n        position: absolute;\n        width: 0.5rem;\n        height: 0.5rem;\n        stroke: black;\n        stroke: ${p => p.theme.color.primary_green_lite};\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        bottom: -5px;\n        left: 4px;\n        transform: rotate(0deg);\n    } \n    \n    .arrow-icon-open {\n        transform: rotate(180deg);\n    }\n\n    .input-form{\n        visibility: hidden;\n        opacity: 0;\n        position: absolute;\n        z-index: 1;\n        left: 0;\n        top: 145%;\n        transform: scale(0);\n        background-color: ${p => p.theme.color.background2};\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        border-radius: 0.75rem;\n        padding: 0.8rem 0.5rem;\n        transform-origin: left top;\n        transition: all ${p => p.theme.transition.main_transition};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n        \n        \n        & input{\n            text-align: center;\n            padding: 0.25rem;\n            border-radius: 0.75rem;\n            border: 1px solid ${p => p.theme.color.primary_green_lite};\n            background: transparent;\n            font-size: 0.8rem;\n            font-weight: 400;\n            color: ${p => p.theme.color.primary_white};\n            outline: none;\n\n            &::placeholder{\n                color: ${p => p.theme.color.primary_grey};\n                letter-spacing: 0.04em;\n            }\n\n            &:focus{\n                border: 1px solid ${p => p.theme.color.primary_white};\n            }\n        }\n\n        & .submit-button{\n            color: ${(props) => props.theme.color.primary_black};\n            background-color: ${(p) => p.theme.color.primary_green_lite};\n            font-size: 0.8rem;\n            font-weight: 500;\n            width: 50%;\n            border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n            border-radius: 0.5rem;\n            padding: 0.25rem;\n            cursor: pointer;\n            transition: color ${p => p.theme.transition.main_transition};\n\n            &:hover {\n                color: ${(props) => props.theme.color.primary_grey};\n            }\n\n            &:disabled{\n                display: none;\n            }\n        }\n    }\n\n    .input-form-visible{\n        visibility: visible;\n        opacity: 1;\n        transform: scale(1);\n        transform-origin: left top;\n    }\n\n    .input-form-visible-adjusted{\n        top: -325%;\n        visibility: visible;\n        opacity: 1;\n        transform: scale(1);\n        transform-origin: left top;\n    }\n`","import { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { StatusesStyled } from \"./TableComponets.Styled\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchStatus } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport const Status = ({index, leads, lead, status, isAdmin, isManager, isConversion}) => {\n    const [isStatus, setStatus] = useState(false);\n    const [openStatus, setOpenStatus] = useState(new Map());\n    const statusRefs = useRef(new Map());\n    const dispatch = useDispatch();\n    \n\n    useEffect(() => {\n        if(status && status !== ''){\n            setStatus(true);\n        } else {\n            setStatus(false);\n        }\n    },[status]);\n\n\n    const toggleStatusMenuDrop = (leadId) => {\n        setOpenStatus(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n    \n    \n    const toggleStatusDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openStatus.get(leadId) ? 'status-list-visible-adjusted' : '';\n            }\n        } else {\n            return openStatus.get(leadId) ? 'status-list-visible' : '';\n        }\n    };\n\n    \n    const toggleStatusDropArrow = (leadId) => {\n        return openStatus.get(leadId) ? 'arrow-svg-open' : '';\n    };\n    \n    \n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenStatus(new Map());\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openStatus);\n        let shouldUpdate = false;\n\n        statusRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openStatus.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenStatus(newOpenMenus);\n        }\n    }, [openStatus]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const submitStatus = (status) => {\n        if (isAdmin || isManager || isConversion) {\n            const dataStatus = {\n                id: lead._id,\n                leadStatus: status\n            }\n            dispatch(patchStatus(dataStatus));\n            setOpenStatus(new Map());\n        }\n    };\n\n\n    return (\n        <StatusesStyled ref={el => {\n            if (el) {\n                statusRefs.current.set(lead._id, el);\n            }\n        }}>\n            <button className=\"status-btn\" type='button'\n                onClick={() => toggleStatusMenuDrop(lead._id)}\n            >\n                {isStatus ? lead.status : 'N/A'}\n            </button>\n            <ArrowDown className={`arrow-svg ${toggleStatusDropArrow(lead._id)}`}/>\n            <ul className={`status-list ${toggleStatusDropCont(lead._id, leads)}`}>\n                {status.map((status, index) => (\n                    <li className=\"status-item\" key={index}>\n                        <p className=\"drop-cont-text\"\n                            onClick={() => submitStatus(status)}\n                        >{status}</p>\n                    </li>\n                ))}\n            </ul>\n        </StatusesStyled>\n    );\n};","import { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { StatusesStyled } from \"./TableComponets.Styled\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchTimeZone } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport const TimeZone = ({index, leads, lead, timeZone, isAdmin, isManager, isConversion}) => {\n    const [isTimeZone, setTimeZone] = useState(false);\n    const [openTimeZone, setOpenTimeZone] = useState(new Map());\n    const timeZoneRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(timeZone && timeZone !== ''){\n            setTimeZone(true);\n        } else {\n            setTimeZone(false);\n        }\n    },[timeZone]);\n\n\n    const toggleTimeZoneMenuDrop = (leadId) => {\n        setOpenTimeZone(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n    \n\n    const toggleTimeZoneDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if (index > 14) {\n            if(index > totalLeads - 5){\n                return openTimeZone.get(leadId) ? 'status-list-visible-adjusted' : '';\n            }\n        } else {\n            return openTimeZone.get(leadId) ? 'status-list-visible' : '';\n        }\n    };\n\n    \n    const toggleTimeZoneDropArrow = (leadId) => {\n        return openTimeZone.get(leadId) ? 'arrow-svg-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenTimeZone(new Map());\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openTimeZone);\n        let shouldUpdate = false;\n\n        timeZoneRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openTimeZone.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenTimeZone(newOpenMenus);\n        }\n    }, [openTimeZone]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const submitTimeZone = (timeZone) => {\n        if (isAdmin || isManager || isConversion) {\n            const dataTimeZone = {\n                id: lead._id,\n                leadTimeZone: timeZone\n            }\n            dispatch(patchTimeZone(dataTimeZone));\n            setOpenTimeZone(new Map());\n        }\n    };\n\n\n    return(\n        <StatusesStyled ref={el => {\n            if (el) {\n                timeZoneRefs.current.set(lead._id, el);\n            }}}\n            $isTimeZone={isTimeZone}\n        >\n            <button className=\"status-btn\" type='button'\n                onClick={() => toggleTimeZoneMenuDrop(lead._id)}\n            >\n                {isTimeZone ? lead.timeZone : 'N/A'}\n            </button>\n            <ArrowDown className={`arrow-svg ${toggleTimeZoneDropArrow(lead._id)}`}/>\n            <ul className={`status-list ${toggleTimeZoneDropCont(lead._id, leads)}`}>\n                {timeZone.map((zone, index) => (\n                    <li className=\"status-item\" key={index}>\n                        <p className=\"drop-cont-text\"\n                            onClick={() => submitTimeZone(zone)}\n                        >{zone}</p>\n                    </li>\n                ))}\n            </ul>\n        </StatusesStyled>\n    );\n};","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchCountryLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const Country = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isCountry, setCountry] = useState(false);\n    const [openCountry, setOpenCountry] = useState(new Map());\n    const [countryValue, setCountryValue] = useState('');\n    const [isCountryEnable, setCountryEnable] = useState(false);\n    const countryRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.country && lead.country !== ''){\n            setCountry(true);\n        } else {\n            setCountry(false);\n        }\n    },[lead.country]);\n\n\n    const toggleCountryMenuDrop = (leadId) => {\n        setOpenCountry(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setCountryValue('');\n        setCountryEnable(false);\n    };\n\n\n    const toggleCountryDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openCountry.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openCountry.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleCountryDropArrow = (leadId) => {\n        return openCountry.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenCountry(new Map());\n            setCountryValue('');\n            setCountryEnable(false);\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openCountry);\n        let shouldUpdate = false;\n\n        countryRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openCountry.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenCountry(newOpenMenus);\n        }\n    }, [openCountry]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onCountryValueChange = (e) => {\n        setCountryValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setCountryEnable(true);\n        } else {\n            setCountryEnable(false);\n        }\n    };\n\n\n    const saveCountryValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedCountryValue = countryValue\n            .split(' ')\n            .map(word => {\n                if (word === word.toUpperCase()) {\n                    return word;\n                }\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n            })\n            .join(' ');\n\n            const dataCountryLead = {\n                id: lead._id,\n                leadCountry: formattedCountryValue\n            }\n            dispatch(patchCountryLead(dataCountryLead));\n            setCountryEnable(false);\n            setCountryValue('');\n            setOpenCountry(new Map());\n        }\n    };\n\n\n    return (\n      <CountryStyled ref={el => {\n        if (el) {\n            countryRefs.current.set(lead._id, el);\n        }}}\n        $isCountry={isCountry}\n      >\n        <button className=\"data-btn\" type='button'\n            onClick={() => toggleCountryMenuDrop(lead._id)}\n        >\n            {isCountry ? lead.country : 'Enter Country'}\n        </button>\n        <ArrowDown className={`arrow-icon ${toggleCountryDropArrow(lead._id, leads)}`}/>\n        <form className={`input-form ${toggleCountryDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n            <label htmlFor=\"country\">\n                <input type=\"text\"\n                    value={countryValue}\n                    onChange={onCountryValueChange}\n                    id='country'\n                    name=\"country\"\n                    placeholder=\"Enter Country\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" \n                className=\"submit-button\"\n                disabled={!isCountryEnable}\n                onClick={saveCountryValue}\n                >Save\n            </button>\n        </form>\n      </CountryStyled>\n    );\n};","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchRegionLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const Region = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isRegion, setRegion] = useState(false);\n    const [openRegion, setOpenRegion] = useState(new Map());\n    const [regionValue, setRegionValue] = useState('');\n    const [isRegionEnable, setRegionEnable] = useState(false);\n    const regionRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.region && lead.region !== ''){\n            setRegion(true);\n        } else {\n            setRegion(false);\n        }\n    },[lead.region]);\n\n\n    const toggleRegionMenuDrop = (leadId) => {\n        setOpenRegion(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setRegionValue('');\n        setRegionEnable(false);\n    };\n\n\n    const toggleRegionDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openRegion.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openRegion.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleRegionDropArrow = (leadId) => {\n        return openRegion.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenRegion(new Map());\n            setRegionValue('');\n            setRegionEnable(false);\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openRegion);\n        let shouldUpdate = false;\n\n        regionRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openRegion.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenRegion(newOpenMenus);\n        }\n    }, [openRegion]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onRegionValueChange = (e) => {\n        setRegionValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setRegionEnable(true);\n        } else {\n            setRegionEnable(false);\n        }\n    };\n\n\n    const saveRegionValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedRegionValue = regionValue\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' ');\n\n            const dataRegionLead = {\n                id: lead._id,\n                leadRegion: formattedRegionValue\n            };\n            dispatch(patchRegionLead(dataRegionLead));\n            setRegionEnable(false);\n            setRegionValue('');\n            setOpenRegion(new Map());\n        }\n    };\n\n\n    return(\n        <CountryStyled ref={el => {\n            if (el) {\n                regionRefs.current.set(lead._id, el);\n            }}}\n            $isRegion={isRegion}\n        >\n        <button className=\"data-btn\" type='button'\n            onClick={() => toggleRegionMenuDrop(lead._id)}\n        >\n            {isRegion ? lead.region : 'Enter Region'}\n        </button>\n        <ArrowDown className={`arrow-icon ${toggleRegionDropArrow(lead._id, leads)}`}/>\n        <form className={`input-form ${toggleRegionDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n            <label htmlFor=\"region\">\n                <input type=\"text\"\n                    value={regionValue}\n                    onChange={onRegionValueChange}\n                    id='region'\n                    name=\"region\"\n                    placeholder=\"Enter Region\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" \n                className=\"submit-button\"\n                disabled={!isRegionEnable}\n                onClick={saveRegionValue}\n                >Save\n            </button>\n        </form>\n        </CountryStyled>\n    );\n};","import { CountryStyled } from \"./TableComponets.Styled\";\nimport { ReactComponent as ArrowDown } from \"../../../../images/svg-icons/arrow-down.svg\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { patchCityLead } from \"../../../../redux/Lead/lead-operation\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const City = ({index, leads, lead, isAdmin, isManager, isConversion}) => {\n    const [isCity, setCity] = useState(false);\n    const [openCity, setOpenCity] = useState(new Map());\n    const [cityValue, setCityValue] = useState('');\n    const [isCityEnable, setCityEnable] = useState(false);\n    const cityRefs = useRef(new Map());\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if(lead.city && lead.city !== ''){\n            setCity(true);\n        } else {\n          setCity(false);\n        }\n    },[lead.city]);\n\n\n    const toggleCityMenuDrop = (leadId) => {\n        setOpenCity(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n        setCityValue('');\n        setCityEnable(false);\n    };\n\n\n    const toggleCityDropCont = (leadId, leads) => {\n        const totalLeads = leads.length;\n        if ((index > 15) && (index > totalLeads - 3)) {\n            return openCity.get(leadId) ? 'input-form-visible-adjusted' : '';\n        } else {\n            return openCity.get(leadId) ? 'input-form-visible' : '';\n        }\n    };\n\n\n    const toggleCityDropArrow = (leadId) => {\n        return openCity.get(leadId) ? 'arrow-icon-open' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenCity(new Map());\n            setCityValue('');\n            setCityEnable(false);\n        }\n    },[]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openCity);\n        let shouldUpdate = false;\n\n        cityRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openCity.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenCity(newOpenMenus);\n        }\n    }, [openCity]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const onCityValueChange = (e) => {\n        setCityValue(e.target.value);\n        if((e.target.value.toLowerCase() !== lead.country.toLowerCase()) && (e.target.value !== '')){\n            setCityEnable(true);\n        } else {\n            setCityEnable(false);\n        }\n    };\n\n\n    const saveCityValue = () => {\n        if (isAdmin || isManager || isConversion) {\n            const formattedCityValue = cityValue\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' ');\n\n            const dataCityLead = {\n                id: lead._id,\n                leadCity: formattedCityValue\n            }\n            dispatch(patchCityLead(dataCityLead));\n            setCityEnable(false);\n            setCityValue('');\n            setOpenCity(new Map());\n        }\n    };\n\n\n    return(\n        <CountryStyled ref={el => {\n            if (el) {\n                cityRefs.current.set(lead._id, el);\n            }}}\n            $isCity={isCity}\n        >\n        <button className=\"data-btn\" type='button'\n            onClick={() => toggleCityMenuDrop(lead._id)}\n        >\n            {isCity ? lead.city : 'Enter City'}\n        </button>\n        <ArrowDown className={`arrow-icon ${toggleCityDropArrow(lead._id, leads)}`}/>\n        <form className={`input-form ${toggleCityDropCont(lead._id, leads)}`} onSubmit={(e) => e.preventDefault()}>\n            <label htmlFor=\"city\">\n                <input type=\"text\"\n                    value={cityValue}\n                    onChange={onCityValueChange}\n                    id='city'\n                    name=\"city\"\n                    placeholder=\"Enter City\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" \n                className=\"submit-button\"\n                disabled={!isCityEnable}\n                onClick={saveCityValue}\n                >Save\n            </button>\n        </form>\n        </CountryStyled>\n    );\n};","import { CustomCheckboxStyled } from \"../tableLeads.styled\";\nimport { ReactComponent as CheckedIcon } from \"../../../../images/svg-icons/check.svg\";\nimport { ReactComponent as CheckBoxIcon } from \"../../../../images/svg-icons/rectangle.svg\";\nimport { toggleOfficeLeadsCheckboxState } from \"../../../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\n\n\n\n\nexport const CustomAssignLeadCheckbox = ({selectedOfficeLeadsCheckedCheckbox, lead}) => {\n    const dispatch = useDispatch();\n\n\n    const handleCheckboxChange = (_id) => {\n        dispatch(toggleOfficeLeadsCheckboxState({_id}));\n    };\n\n\n    return(\n        <CustomCheckboxStyled>\n            <div className=\"custom-checkbox\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"delete_external_lead\"\n                    id={lead._id}\n                    checked={selectedOfficeLeadsCheckedCheckbox.includes(lead._id)}\n                    onChange={() => handleCheckboxChange(lead._id)}\n                />\n                <div className=\"custom-checkbox\">\n                    <CheckBoxIcon className=\"custom-checkbox-before\" width=\"16\" height=\"16\"/>\n                    <CheckedIcon className=\"custom-checkbox-after\" width=\"16\" height=\"16\"/>\n                </div>\n            </div>\n        </CustomCheckboxStyled>\n    );\n};","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ClientTime } from \"./TableComponents/clientTime.jsx\";\nimport { NextCall } from \"./TableComponents/nextCall.jsx\";\nimport { Status } from \"./TableComponents/Status.jsx\";\nimport { TimeZone } from \"./TableComponents/TimeZone.jsx\";\nimport { Country } from \"./TableComponents/Country.jsx\";\nimport { Region } from \"./TableComponents/Region.jsx\";\nimport { City } from \"./TableComponents/City.jsx\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useUser } from \"../../../hooks/useUser.js\";\nimport { useAuth } from \"../../../hooks/useAuth.js\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice.js\";\nimport { CustomAssignLeadCheckbox } from \"./TableComponents/CustomAssignLeadCheckbox.jsx\";\nimport { getLeadById } from \"../../../redux/Lead/lead-operation.js\";\nimport { setLeadDetailsModalTrue } from \"../../../redux/Lead/lead-slice.js\";\nimport { ShowRules } from \"../../../utils/showRules.js\";\n\n\nexport const TableLeads = () => {\n  const { isLeads, selectedOfficeLeadsCheckedCheckbox, leadOffice, status, timeZone } = useLead();\n  const { formatDateTime } = ShowRules();\n  const {isAdmin, isConversion, isManager, isConversionManager, isLoggedIn} = useAuth();\n  const { userLeads, userLeadsComponent } = useUser();\n  const [leads, setLeads] = useState();\n  const dispatch = useDispatch();\n   \n \n  useEffect(() => {\n    if (userLeadsComponent && userLeads) {\n      setLeads(userLeads)\n    } else if(isLeads){\n      setLeads(isLeads)\n    }\n  }, [isLeads, userLeads, userLeadsComponent]);\n  \n  \n  const openOfficeLeadDetail = (_id) => {\n    dispatch(openModalLeadDetail());\n    dispatch(setLeadDetailsModalTrue(\"Office\"));\n    if (isLoggedIn && isAdmin) {\n      dispatch(\n        getLeadById({\n          leadId: _id,\n          branch: leadOffice,\n        })\n      );\n    } else if (isLoggedIn && (isConversion || isManager)) {\n      dispatch(getLeadById({ leadId: _id }));\n    }\n  };\n\n\n  // For style 'small-table' - check styles on OfficeLeads.styled.js\n  const chnageTableStyle = () => {\n    if(leads){\n      return leads.length < 16 ? 'small-table' : '';\n    }\n  };\n  \n\n  return (\n    <TableListStyled className={chnageTableStyle()} $userLeadsComponent={userLeadsComponent}>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            {(isAdmin || isManager) && (\n              isManager ? (\n                <th className=\"TableHeaderItem\">Assign / Reassign Manager</th>\n              ) : (\n                <th className=\"TableHeaderItem\">Assigned Manager</th>\n              )\n            )}\n            {(isAdmin || isManager || isConversionManager) && (\n              isConversionManager ? (\n                <th className=\"TableHeaderItem\">Assign / Reassign Agent</th>\n              ) : (\n                <th className=\"TableHeaderItem\">Assigned Agent</th>\n              )\n              )}\n            <th className=\"TableHeaderItem\">Next call</th>\n            <th className=\"TableHeaderItem\">Details</th>\n            {isAdmin && (\n              <th className=\"TableHeaderItem\">Check</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {leads && leads.map((lead, index) => (\n            <tr className={lead.status === 'New' ? 'back-color' : ''} key={lead._id}>\n              <td className=\"TableHeaderItem\">{lead.clientId}</td>\n              <td className=\"TableHeaderItem\">{lead.name}</td>\n              <td className=\"TableHeaderItem\">{lead.lastName}</td>\n              <td className=\"TableHeaderItem\">{lead.email}</td>\n              <td className=\"TableHeaderItem\">{lead.phone}</td>\n              <td className=\"TableHeaderItem\">\n                <Status\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  status={status}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\">{lead.resource}</td>\n              <td id=\"countryColumn\" className=\"TableHeaderItem\">\n                <Country\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td id=\"regionColumn\" className=\"TableHeaderItem\">\n                <Region\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td id=\"cityColumn\" className=\"TableHeaderItem\">\n                <City\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\">\n                <TimeZone\n                  leads={leads}\n                  lead={lead}\n                  index={index}\n                  timeZone={timeZone}\n                  isAdmin={isAdmin}\n                  isConversion={isConversion}\n                  isManager={isManager}\n                />\n              </td>\n              <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\", textWrap: \"unset\"}}>\n                <ClientTime lead={lead} />\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.selfCreated ? \"Yes\" : \"No\"}\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.updatedAt && formatDateTime(lead.updatedAt)}\n              </td>\n              <td className=\"TableHeaderItem\">\n                {lead.createdAt && formatDateTime(lead.createdAt)}\n              </td>\n              {(isAdmin || isManager) &&\n                <td className=\"TableHeaderItem\"\n                  style={{ background: !lead.conManagerId ? \"#ff000082\" : \"\" }}\n                >\n                  {!isManager ? (\n                    lead.conManagerId ? (\n                      lead.conManagerId.username\n                    ) : (\n                      'Not Assigned'\n                    )\n                  ) : (\n                    <>\n                      <p>REASSINGN MANAGER</p>\n                    </>\n                  )}\n                </td>}\n              {(isAdmin || isManager || isConversionManager) && (\n                <td className=\"TableHeaderItem\"\n                  style={{ background: !lead.conAgentId ? \"#ff000082\" : \"\" }}\n                >\n                  {!isConversionManager ? (\n                    lead.conAgentId ? (\n                      lead.conAgentId.username\n                    ) : (\n                      'Not Assigned'\n                    )\n                  ) : (\n                    <>\n                      <p>REASSINGN AGENT</p>\n                    </>\n                  )}\n                </td>\n              )}\n              <NextCall lead={lead} />\n              <td className=\"TableHeaderItem\">\n                <button className=\"check-btn\" type='button'\n                  onClick={() => openOfficeLeadDetail(lead._id, lead.branch)}\n                >Open\n                </button>\n              </td>\n              {isAdmin && (\n                <td className=\"TableHeaderItem\">\n                  <CustomAssignLeadCheckbox\n                    lead={lead}\n                    selectedOfficeLeadsCheckedCheckbox={selectedOfficeLeadsCheckedCheckbox}\n                  />\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>    \n    </TableListStyled>\n  );\n};\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { ShowRules } from \"../../utils/showRules\";\n\n\n\nexport const OfficeLeads = () => {\n    const { formatOfficeName } = ShowRules();\n    const { isAdmin } = useAuth();\n    const { isLeadLoading, leadOffice } = useLead();\n    const { isLeadDetails } = useModal();\n    const { userLeadsComponent } = useUser()\n    const dispatch = useDispatch();\n    \n\n    const resetStateForLeads = () => {\n        if (leadOffice) {\n            dispatch(resetOfficeLeadState());\n        }\n        if (userLeadsComponent) {\n            dispatch(resetUserLeadsComponent());\n        }\n    };\n\n\n    return(\n        <StyledOfficeLeads $isAdmin={isAdmin}>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    {isAdmin ? (\n                        <>\n                            <NavLink className=\"link\" to='/' onClick={resetStateForLeads}>\n                                <ArrowSVG className=\"svg\"/>\n                                <h1 className=\"titles\">Back</h1>\n                            </NavLink>\n                            <h2 className=\"titles\">{formatOfficeName(leadOffice)} Leads List & Management</h2>\n                        </>\n                    ) : (\n                        <h2 className=\"titles\">All Office Leads List & Management</h2>\n                    )}\n                </div>\n                <div className=\"filter-block\">\n                    <ul className=\"filter-list\">\n                    <li className=\"filter-item\">\n                        <p>FILTER BLOCK</p>\n                    </li>\n                    </ul>\n                </div>\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n        margin-bottom: 2rem;\n    }\n\n\n    .small-table{\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n\n        & tbody{\n            & tr{\n                & td:last-child{\n                    border-right: none;\n                }\n            }\n\n            & tr:last-child{\n                & td{\n                    border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n                }\n            }\n        }\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();  \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n\n     \n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\nimport { getStatus, getTimeZone } from \"../redux/Lead/lead-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, isManager, isConversionManager, isConversion } = useAuth();\n\n\n    useEffect(() => {\n        if (!userLeadsComponent && (isAdmin || isManager || isConversion)) {\n            dispatch(getStatus());\n            dispatch(getTimeZone());\n        }\n        if (!userLeadsComponent && !isAdmin && (isManager || isConversionManager)) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, isAdmin, isConversion, isConversionManager, isManager, userLeadsComponent]);\n    \n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","PaginationStyled","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","transition","main_transition","color","primary_green_lite","primary_black","primary_grey","for_modal_color","primary_white","background","PaginationMapStyled","_templateObject2","_use","SvgAngleBoubleLeft","className","xlinkHref","SvgAngleDoubleRight","PaginationMap","forwardRef","firstVisible","clickOnFirstVisible","listRef","elements","toggleButtonBackground","setButtonActive","lastVisible","clickOnLastVisible","_jsxs","children","_jsx","type","onClick","map","element","index","concat","Pagination","dispatch","useDispatch","isAdmin","isManager","isConversion","useAuth","totalPages","leadOffice","leadsAmountPerPage","useLead","userLeadsComponent","useUser","count","setCount","useState","setFirstVisible","setLastVisible","lastVisibleValue","setLastVisibleValue","firstVisibleValue","setFirstVisibleValue","decreaseEnable","setDecreaseEnable","increaseEnable","setIncreaseEnable","useRef","amount","Number","Array","from","_","page","toString","limit","useEffect","getAllLeads","branch","current","activeButton","querySelector","scrollIntoView","behavior","block","inline","toBegin","disabled","ArrowDoubleRight","decreaseCount","prevState","calculatedLastValue","Math","max","calculatedFirstValue","SingleArrow","limitFirstValue","newFirstVisibleValue","min","newLastVisibleValue","remainingElements","isLargeList","maxFirstValue","finalFirstValue","increaseCount","toEnd","ArrowDoubleLeft","StyledOfficeLeads","$isAdmin","TableListStyled","$userLeadsComponent","background3","CustomCheckboxStyled","ClientTime","lead","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","_Fragment","timeZoneOffset","currentUTCTime","getTime","getTimezoneOffset","toLocaleString","year","month","day","hour","minute","second","undefined","calculateClientTime","timeZone","NextCall","date","setDate","dateNow","nextCallDate","useMemo","nextCall","isOverdue","timeLeft","isAlmostDue","isToday","toDateString","minDateOption","minTimeOption","toTimeString","slice","style","backgroundColor","Flatpickr","value","onChange","_ref2","options","dateFormat","minDate","minTime","weekNumbers","placeholder","onClose","submitNextCallDate","updatedDate","toISOString","patchNextCall","_id","leadNextcall","StatusesStyled","$isTimeZone","background2","CountryStyled","$isCountry","$isRegion","$isCity","Status","leads","status","isStatus","setStatus","openStatus","setOpenStatus","Map","statusRefs","handleKeyPress","useCallback","event","handleBackgroundClick","newOpenMenus","shouldUpdate","forEach","leadId","contains","get","set","document","addEventListener","removeEventListener","el","toggleStatusMenuDrop","newMap","ArrowDown","toggleStatusDropCont","totalLeads","dataStatus","leadStatus","patchStatus","submitStatus","TimeZone","isTimeZone","setTimeZone","openTimeZone","setOpenTimeZone","timeZoneRefs","toggleTimeZoneMenuDrop","toggleTimeZoneDropCont","zone","dataTimeZone","leadTimeZone","patchTimeZone","submitTimeZone","Country","isCountry","setCountry","openCountry","setOpenCountry","countryValue","setCountryValue","isCountryEnable","setCountryEnable","countryRefs","country","toggleCountryMenuDrop","toggleCountryDropCont","onSubmit","e","preventDefault","htmlFor","toLowerCase","name","required","saveCountryValue","formattedCountryValue","split","word","toUpperCase","charAt","join","dataCountryLead","leadCountry","patchCountryLead","Region","isRegion","setRegion","openRegion","setOpenRegion","regionValue","setRegionValue","isRegionEnable","setRegionEnable","regionRefs","region","toggleRegionMenuDrop","toggleRegionDropCont","saveRegionValue","formattedRegionValue","dataRegionLead","leadRegion","patchRegionLead","City","isCity","setCity","openCity","setOpenCity","cityValue","setCityValue","isCityEnable","setCityEnable","cityRefs","city","toggleCityMenuDrop","toggleCityDropCont","saveCityValue","formattedCityValue","dataCityLead","leadCity","patchCityLead","CustomAssignLeadCheckbox","selectedOfficeLeadsCheckedCheckbox","checked","includes","handleCheckboxChange","toggleOfficeLeadsCheckboxState","CheckBoxIcon","CheckedIcon","TableLeads","isLeads","formatDateTime","ShowRules","isConversionManager","isLoggedIn","userLeads","setLeads","chnageTableStyle","clientId","lastName","email","phone","resource","maxWidth","textWrap","selfCreated","updatedAt","createdAt","conManagerId","username","conAgentId","openOfficeLeadDetail","openModalLeadDetail","setLeadDetailsModalTrue","getLeadById","OfficeLeads","formatOfficeName","isLeadLoading","isLeadDetails","useModal","NavLink","to","resetStateForLeads","resetOfficeLeadState","resetUserLeadsComponent","ArrowSVG","RotatingLoader","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","backToUsers","OfficeLeadsPage","getStatus","getTimeZone","getAvailableUsers"],"sourceRoot":""}