{"version":3,"file":"static/js/571.23c59f75.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/HomePage/WelcomePage/Welcome.styled.js","components/HomePage/WelcomePage/Welcome.jsx","components/HomePage/MainPage/Main.styled.js","components/table/tableExternalLeads/AssignDropCont.jsx","components/table/tableExternalLeads/CustomCheckbox.jsx","components/table/tableExternalLeads/tableExternalLeads.jsx","components/HomePage/MainPage/Main.jsx","pages/Home.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport BackGroundWelcome from \"../../images/images/welcome.jpg\"\nimport BackGroundLogin from \"../../images/images/login.jpg\";\nimport BackGroundRegister from \"../../images/images/register.jpg\"\n\n\nexport const SectionStyle = styled.section`\n\n`\n\nexport const WelcomeSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.5), \n        rgba(46, 47, 66, 0.5)), \n        url(${BackGroundWelcome});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const RegisterSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundRegister});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const LoginSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundLogin});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`","import {\n    SectionStyle,\n    WelcomeSectionStyled,\n    RegisterSectionStyled,\n    LoginSectionStyled\n} from './Section.styled';\n\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    );\n};\n\nexport const WelcomeSection = ({children}) => {\n    return (\n        <WelcomeSectionStyled>\n            {children}\n        </WelcomeSectionStyled>\n    );\n};\n\nexport const RegisterSection = ({children}) => {\n    return (\n        <RegisterSectionStyled>\n            {children}\n        </RegisterSectionStyled>\n    );\n};\n\n\nexport const LoginSection = ({children}) => {\n    return (\n        <LoginSectionStyled>\n            {children}\n        </LoginSectionStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledWelcome = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    .welcome-title{\n        margin-bottom: 3.75rem;\n        font-size: 40px;\n        line-height: 1.3;\n        font-weight: 700;\n        color: ${p => p.theme.color.primary_white};\n    \n        @media screen and (min-width: 834px) {\n            font-size: 3.4375rem;\n            line-height: 1.2;\n            letter-spacing: 0.625rem;\n        }\n\n        @media screen and (min-width: 1440px) {\n            font-weight: 700;\n            font-size: 4.375rem;\n        }\n    }\n\n    .welcome-navigation{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n    }\n\n    .welcome-nav-list{\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 3.75rem;\n        flex-direction: column;\n\n        @media screen and (min-width: 834px) {\n            flex-direction: row;\n            gap: 1.875rem;\n        }\n        @media screen and (min-width: 1440px) {\n            gap: 3.75rem;\n        }\n    }\n\n    .welcome-nav-item{\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n\n        @media screen and (min-width: 1440px) {\n            width: 30%;\n        }\n    }\n\n    .welcome-item-text{\n        text-align: center;\n        margin-bottom: 1.875rem;\n\n        @media screen and (min-width: 1440px) {\n            font-size: 1.5625rem;\n            line-height: 1.5;\n        }\n    }\n\n    .welcome-nav-link{\n        display: flex;\n        width: 8.875rem;\n        padding: 0.5rem 0.625rem;\n        border-radius: 0.75rem;\n        background: ${p => p.theme.color.primary_green_lite};\n        font-size: 0.875rem;\n        font-weight: 500;\n        line-height: 1.4;\n        justify-content: center;\n        color: ${p => p.theme.color.primary_black};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        &:hover {\n            color: ${props => props.theme.color.primary_grey};\n        }\n\n        &:focus {\n            color: ${props => props.theme.color.primary_grey};\n        }\n\n        @media screen and (min-width: 834px) {\n            width: 50%;\n            font-size: 1.25rem;\n        }\n\n        @media screen and (min-width: 1440px) {\n            font-size: 1.5625rem;\n            line-height: 1.5;\n        }\n    }\n`","import { StyledWelcome } from \"./Welcome.styled\";\nimport { Container } from \"../../Container/Container\";\nimport { WelcomeSection } from \"../../Section/Section\";\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport const Welcome = () => {\n    \n    return (\n        <WelcomeSection>\n            <Container>\n                <StyledWelcome>\n                    <h1 className=\"welcome-title\">WELCOME</h1>\n                    <nav className=\"welcome-navigation\">\n                        <ul className=\"welcome-nav-list\">\n                            <li className=\"welcome-nav-item\">\n                                <p className=\"welcome-item-text\">If you still don't have an account, please proceed with</p>\n                                <NavLink className=\"welcome-nav-link\" to=\"/signup\">\n                                    Sign Up\n                                </NavLink>\n                            </li>\n                            <li className=\"welcome-nav-item\">\n                                <p className=\"welcome-item-text\">If you already have an account, please proceed with</p>\n                                <NavLink className=\"welcome-nav-link\" to=\"/signin\">\n                                    Sign In\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                </StyledWelcome>\n            </Container>\n        </WelcomeSection>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledMainPage = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n    \n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .page-title{\n        font-weight: 700;\n        text-align: center;\n        margin-bottom: 1rem;\n    }\n\n    .filter-block{\n        margin-bottom: 2rem;\n    }\n\n    \n    .filter-list{\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: center;\n        font-weight: 500;\n        line-height: 1.25rem;\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n\n    .small-table{\n        border-right: 1px solid ${p => p.theme.color.primary_green_lite};\n\n        & tbody{\n            & tr:last-child{\n                & td{\n                    border-bottom: 1px solid ${p => p.theme.color.primary_green_lite};\n                }\n            }\n        }\n    }\n`","import { AssignDropContStyled } from \"./tableExternalLeads.styled\";\nimport { ReactComponent as Arrow } from \"../../../images/svg-icons/arrow-down.svg\";\nimport { useRef, useState, useCallback, useEffect } from \"react\";\nimport { leadAssign, leadReAssign } from \"../../../redux/Lead/lead-operation\";\n\n\n\nexport const AssignedDropCont = ({lead, userSelectOffice, dispatch, isAdmin}) => {\n    const [openMenus, setOpenMenus] = useState(new Map());\n    const leadRefs = useRef(new Map());\n  \n\n    const assignExternalLeadDetail = (lead, office) => {\n        if (isAdmin && lead.newContact) {\n            dispatch(leadAssign({\n                leadId: lead._id,\n                data: {\n                    name: lead.name,\n                    lastName: lead.lastName,\n                    email: lead.email,\n                    phone: lead.phone,\n                    resource: lead.resource,\n                    branch: office\n                }\n            }))\n            toggleUserMenuDrop(lead._id);\n        }\n        if (isAdmin && !lead.newContact) {\n            dispatch(leadReAssign({\n                leadId: lead._id,\n                data: {\n                    branch: office\n                }\n            }));\n            toggleUserMenuDrop(lead._id);\n        }\n    };\n\n\n    const assignButtonValue = (lead) => {\n        if (lead.newContact) {\n          return'Assign'\n        } \n        return \"ReAssign\"\n    };\n\n\n    const formatOfficeName = (office) => {\n        return office.replace(/([a-zA-Z]+)(\\d+)/, '$1 $2');\n    };\n\n\n    const toggleUserMenuDrop = (leadId) => {\n        setOpenMenus(prevState => {\n          const newMap = new Map(prevState);\n          newMap.set(leadId, !newMap.get(leadId));\n          return newMap;\n        });\n    };\n    \n    \n    const toggleLeadDropCont = (leadId) => {\n        return openMenus.get(leadId) ? 'office-list-visible' : '';\n    };\n    \n    \n    const toggleLeadDropArrow = (leadId) => {\n        return openMenus.get(leadId) ? 'icon-active' : '';\n    };\n    \n    \n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            setOpenMenus(new Map());\n        }\n    },[]);\n    \n    \n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openMenus);\n        let shouldUpdate = false;\n\n        leadRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openMenus.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenMenus(newOpenMenus);\n        }\n    }, [openMenus]);\n    \n    \n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n\n    return(\n        <AssignDropContStyled ref={el => {\n            if (el) {\n                leadRefs.current.set(lead._id, el);\n            }\n        }}>\n            <button className=\"assign-btn\" type='button'\n                onClick={() => toggleUserMenuDrop(lead._id)}\n            >\n                {assignButtonValue(lead)}\n                <Arrow className={`icon ${toggleLeadDropArrow(lead._id)}`}/>\n            </button>\n            <ul className={`office-list ${toggleLeadDropCont(lead._id)}`}>\n                {lead.assigned ? (userSelectOffice\n                    .filter(({ office }) => office !== lead.assignedOffice)\n                    .map(({office}, index) => (\n                    <li className=\"office-item\" key={index}>\n                        <p onClick={() => assignExternalLeadDetail(lead, office)}\n                        >To {formatOfficeName(office)}\n                        </p>\n                    </li>\n                    ))\n                ) : (\n                    userSelectOffice.map(({office}, index) => (\n                    <li className=\"office-item\" key={index}>\n                        <p onClick={() => assignExternalLeadDetail(lead, office)}\n                        >To {formatOfficeName(office)}\n                        </p>\n                    </li>\n                    ))\n                )}\n            </ul>\n        </AssignDropContStyled>\n    );\n};\n\n","import { CustomCheckboxStyled } from \"./tableExternalLeads.styled\";\nimport { ReactComponent as CheckedIcon } from \"../../../images/svg-icons/check.svg\";\nimport { ReactComponent as CheckBoxIcon } from \"../../../images/svg-icons/rectangle.svg\";\nimport { toggleExternalLeadsCheckboxState } from \"../../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const CustomCheckbox = ({selectedExternalLeadsCheckedCheckbox, lead}) => {\n    const dispatch = useDispatch();\n\n\n    const handleCheckboxChange = (_id) => {\n        dispatch(toggleExternalLeadsCheckboxState({_id}));\n    };\n\n\n    return(\n        <CustomCheckboxStyled>\n            <div className=\"custom-checkbox\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"delete_external_lead\"\n                    id={lead._id}\n                    checked={selectedExternalLeadsCheckedCheckbox.includes(lead._id)}\n                    onChange={() => handleCheckboxChange(lead._id)}\n                />\n                <div className=\"custom-checkbox\">\n                    <CheckBoxIcon className=\"custom-checkbox-before\" width=\"16\" height=\"16\"/>\n                    <CheckedIcon className=\"custom-checkbox-after\" width=\"16\" height=\"16\"/>\n                </div>\n            </div>\n        </CustomCheckboxStyled>\n    );\n};","import { TableExternalList } from \"./tableExternalLeads.styled\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useLead } from \"../../../hooks/useLead\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { useDispatch } from \"react-redux\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice\";\nimport { setLeadDetailsModalTrue } from \"../../../redux/Lead/lead-slice\";\nimport { getLeadById } from \"../../../redux/Lead/lead-operation\";\nimport { format } from 'date-fns';\nimport { toZonedTime } from 'date-fns-tz';\nimport { AssignedDropCont } from \"./AssignDropCont\";\nimport { CustomCheckbox } from \"./CustomCheckbox\";\n\n\n\nexport function TableExternalLeads() {\n  const dispatch = useDispatch();\n  const { isAdmin } = useAuth();\n  const { userSelectOffice } = useUser();\n  const { isLeads, selectedExternalLeadsCheckedCheckbox } = useLead();\n  \n\n  let filteredLeads;\n  if (isLeads) {\n    filteredLeads = [...isLeads].sort((a, b) => {\n      if (a.newContact === b.newContact) {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      }\n      return a.newContact ? -1 : 1;\n    });\n  }\n\n\n  const openExternalLeadDetail = (_id) => {  \n    dispatch(openModalLeadDetail());\n    dispatch(setLeadDetailsModalTrue('External'));\n    dispatch(getLeadById({leadId: _id}));\n  };\n\n\n  const formatDateTime = (dateString, timeZone = 'Europe/Kiev') => {\n    const date = new Date(dateString);\n    const zonedDate = toZonedTime(date, timeZone);\n\n    const formattedDate = format(zonedDate, 'yyyy-MM-dd', { timeZone });\n    const formattedTime = format(zonedDate, 'HH:mm', { timeZone });\n\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n\n  const formatBranchName = (branch) => {\n    if (branch) {\n      return branch.replace(/([a-zA-Z]+)(\\d+)/, '$1 $2');\n    }\n  };\n\n\n  const capitalizeSource = (str) => {\n    if (typeof str !== 'string' || str.length === 0) {\n      return str;\n    }\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n\n  // For style 'small-table' - check styles on Main.styled.js\n  const chnageTableStyle = () => {\n    return isLeads.length < 13 ? 'small-table' : '';\n  };\n\n  \n  return (\n    <TableExternalList className={chnageTableStyle()}>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th id=\"nameColumn\" className=\"TableHeaderName\">Name:</th>\n            <th id=\"lastNameColumn\" className=\"TableHeaderName\">Last Name:</th>\n            <th id=\"emailColumn\" className=\"TableHeaderName\">Email:</th>\n            <th id=\"phoneColumn\" className=\"TableHeaderName\">Phone:</th>\n            <th id=\"sourceColumn\" className=\"TableHeaderName\">Source:</th>\n            <th id=\"createdColumn\" className=\"TableHeaderName\">Created:</th>\n            <th id=\"officeColumn\" className=\"TableHeaderName\">Office:</th>\n            <th id=\"crmManagerColumn\" className=\"TableHeaderName\">CRM Manager:</th>\n            <th id=\"conversionManagerColumn\" className=\"TableHeaderName\">Conversion Manager:</th>\n            <th id=\"conversionAgentColumn\" className=\"TableHeaderName\">Conversion Agent:</th>\n            <th id=\"assignColumn\" className=\"TableHeaderName\">Assign / ReAssign</th>\n            <th id=\"detailsColumn\" className=\"TableHeaderName\">Details</th>\n            <th id=\"checkColumn\" className=\"TableHeaderName\">Check</th>\n          </tr>\n        </thead>\n        <tbody>\n          {isLeads &&\n            filteredLeads.map((lead, index) => (\n              <tr className={lead.newContact ? 'back-color' : ''} key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <td className=\"TableHeaderItem\">{capitalizeSource(lead.resource)}</td>\n                <td className=\"TableHeaderItem\">{formatDateTime(lead.createdAt)}</td>\n                <td className=\"TableHeaderItem\">{formatBranchName(lead.assignedOffice)}</td>\n                <td className=\"TableHeaderItem\">\n                  {lead.crmManager.name || lead.crmManager.email ? (\n                  <ul>\n                    <li>\n                      <p>{lead.crmManager.name}</p>\n                    </li>\n                    <li>\n                      <p>{lead.crmManager.email}</p>\n                    </li>\n                  </ul>\n                  ) : (\n                    <p>Not Assigned Yet</p>\n                  )}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.conManager.name || lead.conManager.email ? (\n                    <ul>\n                      <li>\n                        <p>{lead.conManager.name}</p>\n                      </li>\n                      <li>\n                        <p>{lead.conManager.email}</p>\n                      </li>\n                    </ul>\n                  ) : (\n                    <p>Not Assigned Yet</p>\n                  )}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.conAgent.name || lead.conAgent.email ? (\n                    <ul>\n                      <li>\n                        <p>{lead.conAgent.name}</p>\n                      </li>\n                      <li>\n                        <p>{lead.conAgent.email}</p>\n                      </li>\n                    </ul>\n                  ) : (\n                    <p>Not Assigned Yet</p>\n                  )}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <AssignedDropCont\n                    isAdmin={isAdmin}\n                    lead={lead}\n                    userSelectOffice={userSelectOffice}\n                    dispatch={dispatch}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <button className=\"check-btn\" type='button'\n                    onClick={() => openExternalLeadDetail(lead._id)}\n                  >Open\n                  </button>\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <CustomCheckbox\n                    lead={lead}\n                    selectedExternalLeadsCheckedCheckbox={selectedExternalLeadsCheckedCheckbox}\n                  />\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </TableExternalList>\n  ) \n}\n","import { StyledMainPage } from \"./Main.styled\";\nimport { TableExternalLeads } from \"../../table/tableExternalLeads/tableExternalLeads\";\nimport { Pagination } from \"../../Pagination/Pagination\";\nimport { RotatingLoader } from \"../../CustomLoaders/CustomLoaders\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useLead } from \"../../../hooks/useLead\";\nimport { useModal } from \"../../../hooks/useModal\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetOfficeUserState, resetUserLeadsComponent } from \"../../../redux/User/user-slice\";\nimport { resetOfficeLeadState } from \"../../../redux/Lead/lead-slice\";\n\n\n\nexport const Main = () => {\n  const { isAdmin } = useAuth();\n  const { isLeadDetails } = useModal();\n  const { isLeadLoading, leadOffice } = useLead();\n  const { userOffice, userLeadsComponent } = useUser();\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    if (userOffice) {\n      dispatch(resetOfficeUserState());\n    }\n    if (leadOffice) {\n      dispatch(resetOfficeLeadState());\n    }\n    if (userLeadsComponent) {\n      dispatch(resetUserLeadsComponent())\n    }\n  },[dispatch, leadOffice, userLeadsComponent, userOffice]);\n\n \n  \n  return (\n    <StyledMainPage>\n      {isAdmin && (\n        <div className=\"wraper\">\n          <h1 className=\"page-title\">External Leads List & Management</h1>\n          <div className=\"filter-block\">\n            <ul className=\"filter-list\">\n              <li className=\"filter-item\">\n                <p>FILTER BLOCK</p>\n              </li>\n            </ul>\n          </div>\n            <div className=\"content-container\">\n              {(isAdmin && isLeadLoading && !isLeadDetails) ? (\n                <RotatingLoader/>\n              ) : (\n                <TableExternalLeads/>\n              )}\n              <Pagination/>\n            </div>\n        </div>\n      )}\n    </StyledMainPage>\n  );\n};\n","import {Welcome} from \"../components/HomePage/WelcomePage/Welcome\";\nimport { Main } from \"../components/HomePage/MainPage/Main\";\nimport { useAuth } from \"../hooks/useAuth\";\n\n\n\nconst HomePage = () => {\n  const { isLoggedIn } = useAuth();\n\n  \n  return isLoggedIn ? (\n      <Main/>\n    ) : (\n      <Welcome/>\n  );\n};\n\n\nexport default HomePage"],"names":["styled","section","_templateObject","_taggedTemplateLiteral","WelcomeSectionStyled","_templateObject2","BackGroundWelcome","RegisterSectionStyled","_templateObject3","BackGroundRegister","LoginSectionStyled","_templateObject4","BackGroundLogin","WelcomeSection","_ref2","children","_jsx","RegisterSection","_ref3","LoginSection","_ref4","StyledWelcome","div","p","theme","color","primary_white","primary_green_lite","primary_black","transition","main_transition","props","primary_grey","Welcome","Container","_jsxs","className","NavLink","to","StyledMainPage","background","AssignedDropCont","_ref","lead","userSelectOffice","dispatch","isAdmin","openMenus","setOpenMenus","useState","Map","leadRefs","useRef","assignExternalLeadDetail","office","newContact","leadAssign","leadId","_id","data","name","lastName","email","phone","resource","branch","toggleUserMenuDrop","leadReAssign","formatOfficeName","replace","prevState","newMap","set","get","handleKeyPress","useCallback","event","key","handleBackgroundClick","newOpenMenus","shouldUpdate","current","forEach","ref","contains","target","useEffect","document","addEventListener","removeEventListener","AssignDropContStyled","el","type","onClick","assignButtonValue","Arrow","concat","toggleLeadDropCont","assigned","filter","assignedOffice","map","index","CustomCheckbox","selectedExternalLeadsCheckedCheckbox","useDispatch","CustomCheckboxStyled","id","checked","includes","onChange","handleCheckboxChange","toggleExternalLeadsCheckboxState","CheckBoxIcon","width","height","CheckedIcon","TableExternalLeads","useAuth","useUser","isLeads","useLead","filteredLeads","sort","a","b","Date","createdAt","formatDateTime","dateString","timeZone","arguments","length","undefined","date","zonedDate","toZonedTime","formattedDate","format","formattedTime","formatBranchName","TableExternalList","str","charAt","toUpperCase","slice","crmManager","conManager","conAgent","openExternalLeadDetail","openModalLeadDetail","setLeadDetailsModalTrue","getLeadById","Main","isLeadDetails","useModal","isLeadLoading","leadOffice","userOffice","userLeadsComponent","resetOfficeUserState","resetOfficeLeadState","resetUserLeadsComponent","RotatingLoader","Pagination","HomePage","isLoggedIn"],"sourceRoot":""}