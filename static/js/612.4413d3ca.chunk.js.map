{"version":3,"file":"static/js/612.4413d3ca.chunk.js","mappings":"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","sources":["components/FilterBlock/FilterBlock.styled.js","components/FilterBlock/FilterBlockMap.jsx","components/FilterBlock/FilterBlock.jsx","components/Pagination/Pagination.styled.js","images/svg-icons/angle-bouble-left.svg","images/svg-icons/angle-double-right.svg","components/Pagination/PaginationMap.jsx","components/Pagination/Pagination.jsx","redux/Filter/filter-selectors.js","hooks/useFilter.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const FilterBlockStyled = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n\n\n    .open-filter-cont {\n        width: 20%;\n        height: 100%;\n        padding: 0.5rem;\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    .search-text{\n        font-size: 0.8rem;\n        font-weight: 500;\n        text-align: justify;\n        display: -webkit-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical;\n    }\n\n    .search-form{\n        width: 100%;\n        position: relative;\n        margin-bottom: 1rem;\n    }\n\n    .search-input{\n        width: 100%;\n        padding: 0.25rem 0.625rem;\n        padding-right: 2rem;\n        border-radius: 0.75rem;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        background: ${p => p.theme.color.primary_black_2};\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        outline: none;\n    }\n\n    .cancel-btn{\n        position: absolute;\n        bottom: 0.5rem;\n        right: 3%;\n        border: none;\n        outline: none;\n        padding: 0rem;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n    }\n        \n    .close-icon{\n        stroke: ${p => p.theme.color.primary_grey};\n        width: 0.9rem;\n        height: 0.9rem;\n        transition: transform ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            transform: rotate(90deg);\n            stroke: ${p => p.theme.color.error_color};\n        }\n    }\n\n\n    .select-filter-cont{\n        width: 80%;\n        padding: 0.5rem;\n    }\n\n    .filter-btn-list{\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: space-evenly;\n        font-weight: 500;\n        line-height: 1.25rem;\n        flex-wrap: wrap;\n    }\n\n    .filter-item{\n        width: 18%;\n        padding: 0;\n        position: relative;\n    }\n\n    .filter-btn{\n        width: 100%;\n        padding: 0.25rem 0.5rem;\n        color: ${p => p.theme.color.primary_black};\n        background-color: ${p => p.theme.color.primary_green_lite};\n        font-size: clamp(0.75rem, 0.5vw + 0.4rem, 1.5rem);\n        font-weight: 500;\n        line-height: 1.25rem;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        transition: color ${p => p.theme.transition.main_transition};\n\n        &:hover {\n            color: ${(props) => props.theme.color.primary_grey};\n        }\n    }\n\n    .filter-btn-active{\n        padding-right: 1.5rem;\n        background-color: ${p => p.theme.color.background3};\n        color: ${p => p.theme.color.primary_white};\n        border: 1px solid ${p => p.theme.color.background3};\n    }\n\n    .reset-all-filter-btn{\n        width: 100%;\n        padding: 0.25rem 0.5rem;\n        color: ${p => p.theme.color.primary_grey};\n        background-color: ${p => p.theme.color.primary_black_2};\n        font-size: clamp(0.75rem, 0.5vw + 0.4rem, 1.5rem);\n        font-weight: 500;\n        line-height: 1.25rem;\n        border: 1px solid ${p => p.theme.color.primary_black_2};\n        border-radius: 0.75rem;\n        transition: color ${p => p.theme.transition.main_transition};\n\n        &:hover {\n            color: ${(props) => props.theme.color.primary_green_lite};\n        }\n    }\n\n    .cancel-filter-btn{\n        position: absolute;\n        bottom: 0.5rem;\n        right: 4%;\n        border: none;\n        outline: none;\n        padding: 0rem;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n    }\n        \n    .close-filter-icon{\n        stroke: ${p => p.theme.color.primary_grey};\n        width: 0.9rem;\n        height: 0.9rem;\n        transition: transform ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            transform: rotate(90deg);\n            stroke: ${p => p.theme.color.error_color};\n        }\n    }\n\n\n    .filter-item-list{\n        max-height: 11.7rem;\n        position: absolute;\n        overflow-y: auto;\n        z-index: 20;\n        top: 115%;\n        left: 0;\n        width: 100%;\n        border-radius: 0.5rem;\n        padding: 0.25rem;\n        gap: 0.75rem;\n        background-color: ${p => p.theme.color.background2};\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        visibility: hidden;\n        opacity: 0;\n        font-size: 0.9rem;\n        border: 0.25rem solid ${p => p.theme.color.background3};\n        transform-origin: top;\n        transition: all ${p => p.theme.transition.main_transition};\n\n\n        &::-webkit-scrollbar {\n            width: 0.25rem;\n            background-color: transparent;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background-color: ${p => p.theme.color.primary_grey};\n            border-radius: 5px;\n        }\n    }\n\n    .filter-item-list-visible{\n        opacity: 1;\n        visibility: visible;\n        transform-origin: top;\n    }\n\n    .filter-list-item{\n        cursor: pointer;\n        width: 100%;\n        text-align: center;\n        \n\n        & .drop-cont-text{\n            transition: color ${p => p.theme.transition.main_transition};\n            color: ${p => p.theme.color.primary_white};\n\n            &:hover{\n                color: ${p => p.theme.color.primary_green_lite}\n            }\n        }\n    }\n`","import {ReactComponent as CloseIcon} from \"../../images/svg-icons/close.svg\";\nimport { FilterButtonLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { forwardRef } from \"react\";\nimport { useFilter } from \"../../hooks/useFilter\";\nimport { useState, useEffect } from \"react\";\nimport { ShowRules } from \"../../utils/showRules\";\n\n\n\nexport const FilterBlockMap = forwardRef(({\n    searchValue,\n    onValueChange,\n    isFormCancelButton,\n    resetFormValue,\n    buttonsName,\n    filterRefs,\n    toggleFilterDrop,\n    updatingLoader,\n    formatDateFullMonth,\n    resetFilterValue,\n    filterList,\n    toggleFiltersDropCont,\n    saveFilterValue,\n    isFilterError,\n    clearAllFilters,\n},ref) => {\n    const {\n        openFilter, \n        sourceState, \n        countryState, \n        regionState, \n        cityState,\n        lastUpdateDateState,\n        createdDateState,\n        nextCallDateState,\n        agentState,\n        timeZoneState,\n        officesState,\n        managerState,\n        statusState\n    } = useFilter();\n    const [activeStates, setActiveStates] = useState([]);\n    const { formatBranchName } = ShowRules();\n\n\n    useEffect(() => {\n        const active = [\n            openFilter,\n            sourceState,\n            countryState,\n            regionState,\n            cityState,\n            lastUpdateDateState,\n            createdDateState,\n            nextCallDateState,\n            agentState,\n            timeZoneState,\n            officesState,\n            managerState,\n            statusState\n        ].filter(state => state);\n    \n        setActiveStates(active);\n    },[\n        sourceState, \n        countryState,\n        regionState, \n        cityState, \n        lastUpdateDateState, \n        createdDateState, \n        nextCallDateState, \n        agentState, \n        timeZoneState, \n        statusState,\n        officesState,\n        managerState, \n        openFilter\n    ]);\n\n\n\n    const buttonValue = (state, buttonName) => {\n        return (\n            <>\n                {!state  \n                    ? buttonName \n                    : ['Create Date', 'Next Call', 'Last Update'].includes(buttonName) \n                    ? formatDateFullMonth(state)\n                    : buttonName === 'Select Office'\n                    ? formatBranchName(state) \n                    : buttonName === 'Select Time-Zone' \n                    ? (state > 0 \n                        ? `+ ${state}` \n                        : (state === \"0\" \n                            ? '0' \n                            : `- ${Math.abs(state)}`)\n                        ) \n                    : state\n                }\n            </>\n        )\n    };\n\n    \n\n    return(\n        <>\n            <div className=\"open-filter-cont\">\n                <form className=\"search-form\">\n                    <label className=\"search-label\" htmlFor=\"searchValue\">\n                        <input className=\"search-input\" \n                            type=\"text\"\n                            value={searchValue}\n                            onChange={onValueChange}\n                            id='searchValue'\n                            name=\"searchValue\"\n                            placeholder=\"Search\"\n                            required\n                        />\n                        {isFormCancelButton && (\n                            <button type=\"button\" className=\"cancel-btn\"\n                                onClick={resetFormValue}\n                            >\n                                <CloseIcon className=\"close-icon\" width={8} height={8}/>\n                            </button>\n                        )}\n                    </label>\n                </form>\n                {activeStates.length >= 2 ? (\n                    <button type=\"button\" className=\"reset-all-filter-btn\"\n                        onClick={clearAllFilters}\n                    >\n                        Reset All Filters\n                    </button>\n                ) : (\n                    <p className=\"search-text\">For SEARCH, enter one of the following values: Client ID, Name, Last Name, Email, or Phone</p>\n                )}\n            </div>\n            <div className=\"select-filter-cont\">\n                <ul className=\"filter-btn-list\">\n                    {buttonsName && buttonsName.map(({buttonName, state}, index) => (\n                        <li className=\"filter-item\" key={index}  ref={el => {\n                            if (el) {\n                                filterRefs.current.set(buttonName, el);\n                            }\n                            }}\n                        >\n                            <button type='button' \n                                className={`filter-btn ${state && 'filter-btn-active'}`}\n                                onClick={() => toggleFilterDrop(buttonName)}\n                            >   \n                                {updatingLoader === buttonName ? (\n                                    <FilterButtonLoader/>\n                                ) : (\n                                    buttonValue(state, buttonName)\n                                )}\n                            </button>\n                            {state && (\n                                <button type=\"button\" className=\"cancel-filter-btn\"\n                                    onClick={() => resetFilterValue(buttonName)}\n                                >\n                                    <CloseIcon className=\"close-filter-icon\" width={8} height={8}/>\n                                </button>\n                            )}\n                            {filterList && (\n                                <ul className={`filter-item-list ${toggleFiltersDropCont(buttonName)}`}>\n                                    {filterList.map((name, index) => (\n                                        <li className=\"filter-list-item\" key={index}>\n                                            <p className=\"drop-cont-text\"\n                                                style={{ color: (name === \"Not Defined\" || name === \"Not Assigned\")\n                                                && \"#ff000082\"}}\n                                                onClick={() => saveFilterValue(buttonName, name)}\n                                            >\n                                                {\n                                                    buttonName === 'Select Office'\n                                                    ? formatBranchName(name) \n                                                    : ['Create Date', 'Next Call', 'Last Update'].includes(buttonName)\n                                                    ? formatDateFullMonth(name)\n                                                    : name\n                                                }\n                                            </p>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                            {isFilterError && (\n                                <ul className={`filter-item-list ${toggleFiltersDropCont(buttonName)}`}>\n                                    <li className=\"filter-list-item\" key={index}\n                                        style={{ minHeight:\"2rem\",\n                                            display: 'flex',\n                                            justifyContent: 'center',\n                                            alignItems: 'center',\n                                            pointerEvents: 'none'\n                                        }}    \n                                    >\n                                        <p className=\"drop-cont-text\"\n                                            style={{ color:\"#e74a3b\"}}\n                                        >\n                                          {isFilterError}\n                                        </p>\n                                    </li>\n                                </ul>\n                            )}\n                            \n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n});","import { FilterBlockStyled } from \"./FilterBlock.styled\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { \n    setSourceState,\n    setCountryState,\n    setRegionState,\n    setCityState,\n    setLastUpdateDateState,\n    setCreatedDateState,\n    setNextCallDateState,\n    setAgentState,\n    setTimeZoneState,\n    setStatusState,\n    setOpenFilterState,\n    setOfficesState,\n    setManagerState,\n    resetSourceState,\n    resetCountryState,\n    resetRegionState,\n    resetCityState,\n    resetLastUpdateDateState,\n    resetCreatedDateState,\n    resetNextCallDateState,\n    resetAgentState,\n    resetTimeZoneState,\n    resetStatusState,\n    resetOpenFilterState,\n    resetOfficeState,\n    resetManagerState,\n    resetFilterListState,\n    resetAllStates,\n} from \"../../redux/Filter/filter-slice\";\nimport { \n    getAllSource, \n    getFilterStatus, \n    getFilterTimeZone, \n    getAllCountries,\n    getAllRegions,\n    getAllCities,\n    getAllAgents,\n    getAllNextCall,\n    getAllLastUpdated,\n    getAllCreatedDate,\n    getAllOffice,\n    getAllManagers,\n} from \"../../redux/Filter/filter-operation\";\nimport { useFilter } from \"../../hooks/useFilter\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { format } from 'date-fns';\nimport { toZonedTime } from 'date-fns-tz';\nimport { FilterBlockMap } from \"./FilterBlockMap\";\n\n\n\nexport const FilterBlock = () => {\n    const {\n        sourceState, \n        countryState, \n        regionState, \n        cityState,\n        lastUpdateDateState,\n        createdDateState,\n        nextCallDateState,\n        agentState,\n        timeZoneState,\n        statusState,\n        officesState,\n        managerState,\n        filterList,\n        isFilterError,\n    } = useFilter();\n    const { leadOffice } = useLead();\n    const { isAdmin, userLocation, isLoggedIn } = useAuth();\n    const [searchValue, setSearchValue] = useState('');\n    const [isFormCancelButton, setFormCancelButton] = useState(false);\n    const [openFilterList, setOpenFilterList] = useState(new Map());\n    const [selectedButton, setSelectedButton] = useState('');\n    const [updatingLoader, setUpdatingLoader] = useState(null);\n    const [buttonsName, setButtonsName] = useState();\n    const filterRefs = useRef(new Map());\n    const dispatch = useDispatch();\n    \n    \n    useEffect(() => {\n        if (isLoggedIn && isAdmin && userLocation === '/') {\n            setButtonsName([\n                {buttonName: 'Select Source', state: sourceState},\n                {buttonName: 'Create Date', state: createdDateState},\n                {buttonName: 'Select Manager', state: managerState},\n                {buttonName: 'Select Agent', state: agentState},\n                {buttonName: 'Select Office', state: officesState},\n            ]);\n        } else {\n            setButtonsName([\n                {buttonName: 'Select Source', state: sourceState},\n                {buttonName: 'Select Country', state: countryState},\n                {buttonName: 'Select Region', state: regionState},\n                {buttonName: 'Select City', state: cityState},\n                {buttonName: 'Last Update', state: lastUpdateDateState},\n                {buttonName: 'Create Date', state: createdDateState},\n                {buttonName: 'Next Call', state: nextCallDateState},\n                {buttonName: 'Select Agent', state: agentState},\n                {buttonName: 'Select Status', state: statusState},\n                {buttonName: 'Select Time-Zone', state: String(timeZoneState)},\n            ]);\n        }\n    },[\n        agentState, \n        cityState, \n        countryState, \n        createdDateState, \n        isAdmin, \n        isLoggedIn, \n        lastUpdateDateState, \n        nextCallDateState, \n        regionState, \n        sourceState, \n        statusState, \n        timeZoneState,\n        officesState,\n        managerState, \n        userLocation\n    ]);\n\n\n    const onValueChange = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n\n    const resetFormValue = () => {\n        setSearchValue('');\n        dispatch(resetOpenFilterState());\n    };\n\n\n    useEffect(() => {\n        if (searchValue) {\n            setFormCancelButton(true);\n        } else {\n            setFormCancelButton(false);\n        }\n\n        const handler = setTimeout(() => {\n            dispatch(setOpenFilterState(searchValue))\n        }, 500);\n        \n        return () => {\n            clearTimeout(handler);\n        };\n    }, [dispatch, searchValue]);\n\n\n    const toggleFilterDrop = (buttonName) => {\n        setOpenFilterList(prevState => {\n            const newMap = new Map(prevState);\n            const isOpen = !newMap.get(buttonName);\n            newMap.set(buttonName, isOpen);\n\n            if (isOpen) {\n                setSelectedButton(buttonName); \n            } else {\n                setSelectedButton('');  \n            }\n            return newMap;\n        });\n    };\n\n\n    useEffect(() => {\n        if (!selectedButton) return;\n\n        dispatch(resetFilterListState());\n\n        switch (selectedButton) {\n            case 'Select Source':\n                setUpdatingLoader(selectedButton);\n    \n                const sourceDispatch = isAdmin \n                ? dispatch(getAllSource(leadOffice)) \n                : dispatch(getAllSource());\n                \n                sourceDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Country':\n                setUpdatingLoader(selectedButton);\n\n                const countryDispatch = isAdmin \n                ? dispatch(getAllCountries(leadOffice)) \n                : dispatch(getAllCountries());\n                \n                countryDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Region':\n                setUpdatingLoader(selectedButton);\n\n                const regionDispatch = isAdmin \n                ? dispatch(getAllRegions(leadOffice)) \n                : dispatch(getAllRegions());\n                \n                regionDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select City':\n                setUpdatingLoader(selectedButton);\n\n                const cityDispatch = isAdmin \n                ? dispatch(getAllCities(leadOffice)) \n                : dispatch(getAllCities());\n                \n                cityDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Last Update':\n                setUpdatingLoader(selectedButton);\n\n                const lastUpdateDispatch = isAdmin \n                ? dispatch(getAllLastUpdated(leadOffice)) \n                : dispatch(getAllLastUpdated());\n                \n                lastUpdateDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Create Date':\n                setUpdatingLoader(selectedButton);\n\n                const createDateDispatch = isAdmin \n                ? dispatch(getAllCreatedDate(leadOffice)) \n                : dispatch(getAllCreatedDate());\n                \n                createDateDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Next Call':\n                setUpdatingLoader(selectedButton);\n\n                const nextCallDispatch = isAdmin \n                ? dispatch(getAllNextCall(leadOffice)) \n                : dispatch(getAllNextCall());\n                \n                nextCallDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Agent':\n                setUpdatingLoader(selectedButton);\n\n                const agentDispatch = isAdmin \n                ? dispatch(getAllAgents(leadOffice)) \n                : dispatch(getAllAgents());\n                \n                agentDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Status':\n                setUpdatingLoader(selectedButton);\n\n                const statusDispatch = isAdmin \n                ? dispatch(getFilterStatus(leadOffice)) \n                : dispatch(getFilterStatus());\n                \n                statusDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Time-Zone':\n                setUpdatingLoader(selectedButton);\n\n                const timeZoneDispatch = isAdmin \n                ? dispatch(getFilterTimeZone(leadOffice)) \n                : dispatch(getFilterTimeZone());\n                \n                timeZoneDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Manager':\n                setUpdatingLoader(selectedButton);\n\n                const managerDispatch = isAdmin \n                && dispatch(getAllManagers());\n                \n                managerDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            case 'Select Office':\n                setUpdatingLoader(selectedButton);\n\n                const officeDispatch = isAdmin \n                && dispatch(getAllOffice());\n                \n                officeDispatch.finally(() => {\n                    setUpdatingLoader(null);\n                });\n            break;\n\n            default:\n            break;\n        }\n    },[dispatch, isAdmin, leadOffice, selectedButton])\n\n\n    const toggleFiltersDropCont = (buttonName) => {\n        return openFilterList.get(buttonName) ? 'filter-item-list-visible' : '';\n    };\n\n\n    const handleKeyPress = useCallback(event => {\n        if (event.key === 'Escape') {\n            if (filterList) {\n                dispatch(resetFilterListState())\n            }\n            setSelectedButton('');  \n            setOpenFilterList(new Map());\n        }\n    },[dispatch, filterList]);\n\n\n    const handleBackgroundClick = useCallback(event => {\n        const newOpenMenus = new Map(openFilterList);\n        let shouldUpdate = false;\n\n        filterRefs.current.forEach((ref, leadId) => {\n            if (ref && !ref.contains(event.target) && openFilterList.get(leadId)) {\n                newOpenMenus.set(leadId, false);\n                shouldUpdate = true;\n            }\n        });\n\n        if (shouldUpdate) {\n            setOpenFilterList(newOpenMenus);\n        }\n        if(filterList){\n            dispatch(resetFilterListState());\n        }\n        setSelectedButton('');\n    }, [dispatch, filterList, openFilterList]);\n\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyPress);\n        document.addEventListener('click', handleBackgroundClick);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyPress);\n            document.removeEventListener('click', handleBackgroundClick);\n        };\n    }, [handleBackgroundClick, handleKeyPress]);\n\n\n    const saveFilterValue = (buttonName, name) => {\n        switch (buttonName){\n            case \"Select Source\":\n                dispatch(setSourceState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Country\":\n                dispatch(setCountryState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Region\":\n                dispatch(setRegionState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select City\":\n                dispatch(setCityState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Last Update\":\n                dispatch(setLastUpdateDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Create Date\":\n                dispatch(setCreatedDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Next Call\":\n                dispatch(setNextCallDateState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Agent\":\n                dispatch(setAgentState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Status\":\n                dispatch(setStatusState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Time-Zone\":\n                dispatch(setTimeZoneState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Manager\":\n                dispatch(setManagerState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            case \"Select Office\":\n                dispatch(setOfficesState(name));\n                setOpenFilterList(new Map());\n            break;\n\n            default:\n                return;\n        }\n    };\n\n\n    const resetFilterValue = (buttonName) => {\n        switch (buttonName){\n            case \"Select Source\":\n                dispatch(resetSourceState());\n            break;\n\n            case \"Select Country\":\n                dispatch(resetCountryState());\n            break;\n\n            case \"Select Region\":\n                dispatch(resetRegionState());\n            break;\n\n            case \"Select City\":\n                dispatch(resetCityState());\n            break;\n\n            case \"Last Update\":\n                dispatch(resetLastUpdateDateState());\n            break;\n\n            case \"Create Date\":\n                dispatch(resetCreatedDateState());\n            break;\n\n            case \"Next Call\":\n                dispatch(resetNextCallDateState());\n            break;\n\n            case \"Select Agent\":\n                dispatch(resetAgentState());\n            break;\n\n            case \"Select Status\":\n                dispatch(resetStatusState());\n            break;\n\n            case \"Select Time-Zone\":\n                dispatch(resetTimeZoneState());\n            break;\n\n            case \"Select Manager\":\n                dispatch(resetManagerState());\n            break;\n\n            case \"Select Office\":\n                dispatch(resetOfficeState());\n            break;\n\n            default:\n                return;\n        }\n    };\n\n\n    const formatDateFullMonth = (dateString, timeZone = 'Europe/Kiev') => {\n        if (dateString) {\n            const date = new Date(dateString);\n            if (isNaN(date)) {\n                return dateString;\n            }\n            const zonedDate = toZonedTime(date, timeZone);\n            const formattedDate = format(zonedDate, 'dd MMMM yyyy', { timeZone });\n            return `${formattedDate}`;\n        }\n        return '';\n    };\n\n\n    const clearAllFilters = () => {\n        dispatch(resetAllStates());\n        setSearchValue('');\n    };\n\n\n    return(\n        <FilterBlockStyled>\n            <FilterBlockMap\n                searchValue={searchValue}\n                onValueChange={onValueChange}\n                isFormCancelButton={isFormCancelButton}\n                resetFormValue={resetFormValue}\n                buttonsName={buttonsName}\n                filterRefs={filterRefs}\n                toggleFilterDrop={toggleFilterDrop}\n                updatingLoader={updatingLoader}\n                formatDateFullMonth={formatDateFullMonth}\n                resetFilterValue={resetFilterValue}\n                filterList={filterList}\n                toggleFiltersDropCont={toggleFiltersDropCont}\n                saveFilterValue={saveFilterValue}\n                isFilterError={isFilterError}\n                clearAllFilters={clearAllFilters}\n            />\n        </FilterBlockStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const PaginationStyled = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: auto;\n\n    .pagination-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n\n    .left-button-block,\n    .right-button-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n    .paginaton-button{\n        border-radius: 50%;\n        padding: 0.25rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        scale: calc(1);\n        transition: scale ${p => p.theme.transition.main_transition};\n\n        & .arrow-icon{\n            width: 1rem;\n            height: 1rem;\n        }\n        & .icon{\n            width: 0.75rem;\n            height: 0.75rem;\n        }\n        & .left-arrow{\n            transform: rotate(90deg);\n        }\n        & .right-arrow{\n            transform: rotate(-90deg);\n        }\n        &:hover{\n            scale: calc(1.2);\n        }\n    }\n\n    .right-button-block{\n        & button {\n            background-color: ${p => p.theme.color.primary_green_lite};\n\n            & .right-arrow{\n                stroke: ${p => p.theme.color.primary_black};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_black};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.primary_grey};\n                }\n                & .right-arrow{\n                    stroke: ${p => p.theme.color.primary_grey};\n                }\n            }\n\n        }\n        \n    }\n\n    .left-button-block{\n        & button {\n            background-color: ${p => p.theme.color.for_modal_color};\n\n            & .left-arrow{\n                stroke: ${p => p.theme.color.primary_white};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_white};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .left-arrow{\n                    stroke: ${p => p.theme.color.background};\n                }\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.background};\n                }\n            }\n        }\n    }\n\n    .button{\n        padding: 0.375rem;\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const PaginationMapStyled = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.375rem;\n\n    .content-list{\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        max-width: 17.875rem;\n        overflow-x: auto;\n        scroll-snap-type: x mandatory;\n        padding: 0 2px;\n\n        &::-webkit-scrollbar {\n            display: none;\n        }\n        &::-webkit-scrollbar-thumb {\n            display: none;\n        }\n    }\n\n    .content-item {\n        scroll-snap-align: center;\n        padding: 0;\n    }\n\n    .button-background{\n        font-size: 0.75rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0.25rem;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 50%;\n        background-color: pink;\n        background-color: ${p => p.theme.color.for_modal_color};\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n        line-height: 0.5;\n\n        &:hover{\n            background-color: ${p => p.theme.color.primary_green_lite};\n            color: ${p => p.theme.color.primary_black};\n        }\n    }\n\n    .button-active{\n        background-color: ${p => p.theme.color.primary_green_lite};\n        color: ${p => p.theme.color.primary_black};\n    }\n`","var _use;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgAngleBoubleLeft(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-right\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-right\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-right\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359zM15.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleBoubleLeft);\nexport default __webpack_public_path__ + \"static/media/angle-bouble-left.318d2cbb1e36601ea73d1e1b12583d67.svg\";\nexport { ForwardRef as ReactComponent };","var _use;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgAngleDoubleRight(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-left\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-left\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-left\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359zM15.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleDoubleRight);\nexport default __webpack_public_path__ + \"static/media/angle-double-right.0005b6c7ffad737a3008b46f779d2062.svg\";\nexport { ForwardRef as ReactComponent };","import { PaginationMapStyled } from \"./Pagination.styled\";\nimport { forwardRef } from \"react\";\n\n\nexport const PaginationMap = forwardRef(({\n    firstVisible,\n    clickOnFirstVisible,\n    listRef,\n    elements,\n    toggleButtonBackground,\n    setButtonActive,\n    lastVisible,\n    clickOnLastVisible\n}, ref) => {\n\n\n    return(\n        <PaginationMapStyled>\n            {firstVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnFirstVisible}\n                ><p>...</p>\n                </button>\n            )}\n            <ul className=\"content-list\" ref={listRef}>\n                {elements.map((element, index) => (\n                    <li className=\"content-item\" key={index}>\n                        <button type=\"button\" \n                            className={`button-background ${toggleButtonBackground(index + 1)}`}\n                            onClick={() => setButtonActive(index + 1)}\n                        ><p>{element}</p>\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {lastVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnLastVisible}\n                ><p>...</p>\n                </button>\n            )}\n        </PaginationMapStyled>\n    )\n});","import { PaginationStyled } from \"./Pagination.styled\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {ReactComponent as ArrowDoubleLeft} from \"../../images/svg-icons/angle-bouble-left.svg\";\nimport {ReactComponent as ArrowDoubleRight} from \"../../images/svg-icons/angle-double-right.svg\";\nimport {ReactComponent as SingleArrow} from \"../../images/svg-icons/arrow-down.svg\";\nimport { PaginationMap } from \"./PaginationMap\";\nimport { getAllLeads } from \"../../redux/Lead/lead-operation\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { useDispatch } from \"react-redux\";\nimport { useFilter } from \"../../hooks/useFilter\";\n\n\n\nexport const Pagination = () => {\n    const dispatch = useDispatch();\n    const { isAdmin, isManager, isConversion } = useAuth();\n    const { totalPages, leadOffice, leadsAmountPerPage } = useLead();\n    const { userLeadsComponent } = useUser();\n    const { \n        openFilter, \n        sourceState, \n        countryState, \n        regionState, \n        cityState,\n        lastUpdateDateState,\n        createdDateState,\n        nextCallDateState,\n        agentState,\n        timeZoneState,\n        statusState,\n        officesState,\n        managerState,\n    } = useFilter();\n    const [count, setCount] = useState(1);\n    const [firstVisible, setFirstVisible] = useState(false);\n    const [lastVisible, setLastVisible] = useState(false);\n    const [lastVisibleValue, setLastVisibleValue] = useState(0);\n    const [firstVisibleValue, setFirstVisibleValue] = useState(0);\n    const [decreaseEnable, setDecreaseEnable] = useState(false);\n    const [increaseEnable, setIncreaseEnable] = useState(false);\n    const listRef = useRef(null);  \n      \n\n    useEffect(() => {\n        if (leadsAmountPerPage) {\n            setCount(1);\n            setFirstVisibleValue(0);\n            setDecreaseEnable(false);\n            setFirstVisible(false);\n        }\n    }, [leadsAmountPerPage]);\n\n    \n    let amount;\n    if (totalPages) {\n        amount = Number(totalPages);\n    } else {\n        amount = 1;\n    }\n    const elements = Array.from({ length: amount }, (_, index) => index + 1);\n\n\n    const page = count.toString();\n    const limit = leadsAmountPerPage.toString();\n    \n\n    useEffect(() => {\n        if (listRef.current) {\n          const activeButton = listRef.current.querySelector('.button-active');\n          if (activeButton) {\n            activeButton.scrollIntoView({\n              behavior: 'smooth',\n              block: 'nearest',\n              inline: 'center'\n            });\n          }\n        }\n    }, [count]);\n\n    \n    useEffect(() => {\n        if (elements.length > 9) {\n            setLastVisible(true);\n            setLastVisibleValue(10);\n        }\n        if (elements.length > 1) {\n            setIncreaseEnable(true);\n        }\n        if (elements.length < 9) {           \n            setLastVisible(false);\n        }\n        if (elements.length === 1) {\n            setIncreaseEnable(false);\n            setLastVisible(false);\n        }\n    },[elements.length]);\n    \n\n    const toggleButtonBackground = (index) => {\n        return index === count ? 'button-active' : '';\n    };\n\n\n    const increaseCount = () => {\n        if (count <= (elements.length - 1)) {\n            setCount(prevState => prevState + 1);\n            setDecreaseEnable(true);\n        }\n        if((elements.length - count) <= 5){\n            setLastVisible(false);\n        }\n        if (count + 1 === elements.length) {\n            setIncreaseEnable(false);\n        }\n        if ((elements.length > 9) && ((count >= 5))) { \n            setFirstVisible(true);\n            const calculatedLastValue = count + 6;\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 4;\n            setFirstVisibleValue(calculatedFirstValue > (elements.length - 9) ? (elements.length - 9) : calculatedFirstValue);\n        }\n    };\n \n\n    const decreaseCount = () => {\n        if (count >= 2) {\n            setCount(prevState => prevState - 1);\n            setIncreaseEnable(true);\n        }\n        if (count - 1 <= 1) {\n            setDecreaseEnable(false);\n        }\n        if((elements.length > 9) && ((elements.length - count) >= 4)){\n            setLastVisible(true);\n            const calculatedLastValue = Math.max(10, count + 4);\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 6;\n            setFirstVisibleValue(calculatedFirstValue > 1 ? calculatedFirstValue : 1); \n        }\n        if ((elements.length > 9) && ((count <= 6))) { \n            setFirstVisible(false);\n        }\n    };\n \n\n    const setButtonActive = (index) => {\n        setCount(index);\n    \n        const remainingElements = elements.length - index;\n        const isLargeList = elements.length > 9;\n        setFirstVisible(isLargeList && index > 5);\n        setLastVisible(isLargeList && remainingElements >= 5);\n    \n        if (isLargeList) {\n\n            const calculatedLastValue = Math.max(Math.min(index + 5, elements.length), 10);\n            const maxFirstValue = elements.length - 9;\n            const calculatedFirstValue = Math.max(index - 5, 1);\n            const finalFirstValue = calculatedFirstValue > maxFirstValue ? maxFirstValue : calculatedFirstValue;\n    \n            setLastVisibleValue(calculatedLastValue);\n            setFirstVisibleValue(finalFirstValue);\n\n        } else {\n            setFirstVisible(false);\n            setLastVisible(false);\n        }\n\n        setDecreaseEnable(index > 1);\n        setIncreaseEnable(index < elements.length);\n    };\n\n\n    const toEnd = () => {\n        setCount(elements.length);\n        setIncreaseEnable(false);\n        setDecreaseEnable(true);\n        if(elements.length > 9){\n            setLastVisible(false);\n            setFirstVisible(true);\n            setLastVisibleValue(elements.length);\n            setFirstVisibleValue(elements.length - 9);\n        }\n    };\n\n\n    const toBegin = () => {\n        setCount(1);\n        setIncreaseEnable(true);\n        setDecreaseEnable(false);\n        if(elements.length > 9){\n            setLastVisible(true);\n            setFirstVisible(false);\n            setLastVisibleValue(10);\n            setFirstVisibleValue(0);\n        }\n    };\n\n\n    const clickOnFirstVisible = () => {\n        setCount(firstVisibleValue);\n        setIncreaseEnable(true);\n\n        const calculatedFirstValue = firstVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(Math.max(newFirstVisibleValue, 0));\n        \n        if (firstVisibleValue === 1) {\n            setDecreaseEnable(false);\n        }\n\n        if (count <= 10) {\n            setFirstVisible(false);\n        }\n        \n        if (elements.length >= count) {\n            setLastVisible(true);\n        }\n\n        const calculatedLastValue = firstVisibleValue + 5;\n        const newLastVisibleValue = Math.min(Math.max(calculatedLastValue, 10), elements.length);\n        setLastVisibleValue(newLastVisibleValue);\n    };\n\n\n    const clickOnLastVisible = () => {\n        setCount(lastVisibleValue);\n        setFirstVisible(true);\n        setDecreaseEnable(true);\n        \n        const newLastVisibleValue = Math.min(elements.length, lastVisibleValue + 5);\n        setLastVisibleValue(newLastVisibleValue);\n\n        if (newLastVisibleValue  >= elements.length) {\n            setLastVisible(false);\n        }\n        if (lastVisibleValue === elements.length) {\n            setIncreaseEnable(false);\n        }\n\n        const calculatedFirstValue = lastVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(newFirstVisibleValue);\n    };\n\n\n    useEffect(() => {\n        if ((isAdmin || isManager || isConversion) && !userLeadsComponent) {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n                branch: leadOffice,\n                resource: sourceState,\n                createdAt: createdDateState,\n                conManager: managerState,\n                conAgent: agentState,\n                office: officesState,\n                openFilter: openFilter,\n                country: countryState,\n                region: regionState,\n                city: cityState,\n                lastUpdate: lastUpdateDateState,\n                nextCall: nextCallDateState,\n                status: statusState,\n                timeZone: timeZoneState,\n            }));\n        }\n    },[\n        dispatch, \n        isAdmin, \n        leadOffice,\n        page, \n        limit, \n        agentState, \n        createdDateState, \n        isConversion, \n        isManager, \n        managerState, \n        officesState, \n        openFilter, \n        sourceState, \n        userLeadsComponent, \n        countryState, \n        regionState, \n        cityState, \n        lastUpdateDateState, \n        nextCallDateState, \n        statusState, \n        timeZoneState\n    ]);\n  \n    \n    return(\n        <PaginationStyled>\n            <div className=\"pagination-block\">\n                <div className=\"left-button-block\">\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toBegin}\n                        disabled={!decreaseEnable}\n                    >\n                        <ArrowDoubleRight className=\"arrow-icon\" width={16} height={16}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={decreaseCount}\n                        disabled={!decreaseEnable}\n                    >\n                        <SingleArrow className=\"icon left-arrow\" width={12} height={12}/>\n                    </button>\n                </div>\n                <PaginationMap\n                    firstVisible={firstVisible}\n                    clickOnFirstVisible={clickOnFirstVisible}\n                    listRef={listRef}\n                    elements={elements}\n                    toggleButtonBackground={toggleButtonBackground}\n                    setButtonActive={setButtonActive}\n                    lastVisible={lastVisible}\n                    clickOnLastVisible={clickOnLastVisible}\n                />\n                <div className=\"right-button-block\">\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={increaseCount}\n                        disabled={!increaseEnable}\n                    >\n                        <SingleArrow className=\"icon right-arrow\" width={12} height={12}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toEnd}\n                        disabled={!increaseEnable}\n                    >\n                        <ArrowDoubleLeft className=\"arrow-icon\" width={16} height={16}/> \n                    </button>\n                </div>\n            </div>\n        </PaginationStyled>\n    );\n};","export const selectFilterError = state => state.filter.filterError;\n\nexport const selectSourceState = state => state.filter.source.sourceState;\n\nexport const selectSourceLoading = state => state.filter.source.sourceLoading;\n\nexport const selectCountryState = state => state.filter.country.countryState;\n\nexport const selectCountryLoading = state => state.filter.country.countryLoading;\n\nexport const selectRegionState = state => state.filter.region.regionState;\n\nexport const selectRegionLoading = state => state.filter.region.regionLoading;\n\nexport const selectCityState = state => state.filter.city.cityState;\n\nexport const selectCityLoading = state => state.filter.city.cityLoading;\n\nexport const selectLastUpdateDateState = state => state.filter.lastUpdateDate.lastUpdateDateState;\n\nexport const selectLastUpdateDateLoading = state => state.filter.lastUpdateDate.lastUpdateDateLoading;\n\nexport const selectCreatedDateState = state => state.filter.createdDate.createdDateState;\n\nexport const selectCreatedDateLoading = state => state.filter.createdDate.createdDateLoading;\n\nexport const selectNextCallDateState = state => state.filter.nextCallDate.nextCallDateState;\n\nexport const selectNextCallDateLoading = state => state.filter.nextCallDate.nextCallDateLoading;\n\nexport const selectAgentState = state => state.filter.agent.agentState;\n\nexport const selectAgentLoading = state => state.filter.agent.agentLoading;\n\nexport const selectTimeZoneState = state => state.filter.timeZone.timeZoneState;\n\nexport const selectTimeZoneLoading = state => state.filter.timeZone.timeZoneLoading;\n\nexport const selectStatusState = state => state.filter.status.statusState;\n\nexport const selectStatusLoading = state => state.filter.status.statusLoading;\n\nexport const selectOfficesState = state => state.filter.office.officeState;\n\nexport const selectOfficesLoading = state => state.filter.office.officeLoading;\n\nexport const selectManagerState = state => state.filter.manager.managerState;\n\nexport const selectManagerLoading = state => state.filter.manager.managerLoading;\n\nexport const selectFilterList = state => state.filter.filterList;\n\nexport const selectOpenFilter = state => state.filter.openFilter;\n","import { useSelector } from \"react-redux\";\nimport {\n    selectFilterError,\n    selectSourceState,\n    selectSourceLoading,\n    selectCountryState,\n    selectCountryLoading,\n    selectRegionState,\n    selectRegionLoading,\n    selectCityState,\n    selectCityLoading,\n    selectLastUpdateDateState,\n    selectLastUpdateDateLoading,\n    selectCreatedDateState,\n    selectCreatedDateLoading,\n    selectNextCallDateState,\n    selectNextCallDateLoading,\n    selectAgentState,\n    selectAgentLoading,\n    selectTimeZoneState,\n    selectTimeZoneLoading,\n    selectStatusState,\n    selectStatusLoading,\n    selectOfficesState,\n    selectOfficesLoading,\n    selectManagerState,\n    selectManagerLoading,\n    selectFilterList,\n    selectOpenFilter,\n} from \"../redux/Filter/filter-selectors\";\n\n\nexport const useFilter = () => {\n    const isFilterError = useSelector(selectFilterError);\n    const sourceState = useSelector(selectSourceState);\n    const sourceLoading = useSelector(selectSourceLoading);\n    const countryState = useSelector(selectCountryState);\n    const countryLoading = useSelector(selectCountryLoading);\n    const regionState = useSelector(selectRegionState);\n    const regionLoading = useSelector(selectRegionLoading);\n    const cityState = useSelector(selectCityState);\n    const cityLoading = useSelector(selectCityLoading);\n    const lastUpdateDateState = useSelector(selectLastUpdateDateState);\n    const lastUpdateDateLoading = useSelector(selectLastUpdateDateLoading);\n    const createdDateState = useSelector(selectCreatedDateState);\n    const createdDateLoading = useSelector(selectCreatedDateLoading);\n    const nextCallDateState = useSelector(selectNextCallDateState);\n    const nextCallDateLoading = useSelector(selectNextCallDateLoading);\n    const agentState = useSelector(selectAgentState);\n    const agentLoading = useSelector(selectAgentLoading);\n    const timeZoneState = useSelector(selectTimeZoneState);\n    const timeZoneLoading = useSelector(selectTimeZoneLoading);\n    const statusState = useSelector(selectStatusState);\n    const statusLoading = useSelector(selectStatusLoading);\n    const officesState = useSelector(selectOfficesState);\n    const officesLoading = useSelector(selectOfficesLoading);\n    const managerState = useSelector(selectManagerState);\n    const managerLoading = useSelector(selectManagerLoading);\n    const filterList = useSelector(selectFilterList);\n    const openFilter = useSelector(selectOpenFilter);\n\n\n    return {\n        isFilterError,\n        sourceState,\n        sourceLoading,\n        countryState,\n        countryLoading,\n        regionState,\n        regionLoading,\n        cityState,\n        cityLoading,\n        lastUpdateDateState,\n        lastUpdateDateLoading,\n        createdDateState,\n        createdDateLoading,\n        nextCallDateState,\n        nextCallDateLoading,\n        agentState,\n        agentLoading,\n        timeZoneState,\n        timeZoneLoading,\n        statusState,\n        statusLoading,\n        officesState,\n        officesLoading,\n        managerState,\n        managerLoading,\n        filterList,\n        openFilter,\n    }\n};"],"names":["FilterBlockStyled","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","primary_green_lite","primary_black_2","primary_white","primary_grey","transition","main_transition","error_color","primary_black","props","background3","background2","FilterBlockMap","forwardRef","_ref","ref","searchValue","onValueChange","isFormCancelButton","resetFormValue","buttonsName","filterRefs","toggleFilterDrop","updatingLoader","formatDateFullMonth","resetFilterValue","filterList","toggleFiltersDropCont","saveFilterValue","isFilterError","clearAllFilters","openFilter","sourceState","countryState","regionState","cityState","lastUpdateDateState","createdDateState","nextCallDateState","agentState","timeZoneState","officesState","managerState","statusState","useFilter","activeStates","setActiveStates","useState","formatBranchName","ShowRules","useEffect","active","filter","state","buttonValue","buttonName","_jsx","_Fragment","children","includes","concat","Math","abs","_jsxs","className","htmlFor","type","value","onChange","id","name","placeholder","required","onClick","CloseIcon","width","height","length","map","_ref2","index","el","current","set","FilterButtonLoader","style","minHeight","display","justifyContent","alignItems","pointerEvents","FilterBlock","leadOffice","useLead","isAdmin","userLocation","isLoggedIn","useAuth","setSearchValue","setFormCancelButton","openFilterList","setOpenFilterList","Map","selectedButton","setSelectedButton","setUpdatingLoader","setButtonsName","useRef","dispatch","useDispatch","String","handler","setTimeout","setOpenFilterState","clearTimeout","resetFilterListState","getAllSource","finally","getAllCountries","getAllRegions","getAllCities","getAllLastUpdated","getAllCreatedDate","getAllNextCall","getAllAgents","getFilterStatus","getFilterTimeZone","getAllManagers","getAllOffice","handleKeyPress","useCallback","event","key","handleBackgroundClick","newOpenMenus","shouldUpdate","forEach","leadId","contains","target","get","document","addEventListener","removeEventListener","e","resetOpenFilterState","prevState","newMap","isOpen","dateString","timeZone","arguments","undefined","date","Date","isNaN","zonedDate","toZonedTime","formattedDate","format","resetSourceState","resetCountryState","resetRegionState","resetCityState","resetLastUpdateDateState","resetCreatedDateState","resetNextCallDateState","resetAgentState","resetStatusState","resetTimeZoneState","resetManagerState","resetOfficeState","setSourceState","setCountryState","setRegionState","setCityState","setLastUpdateDateState","setCreatedDateState","setNextCallDateState","setAgentState","setStatusState","setTimeZoneState","setManagerState","setOfficesState","resetAllStates","PaginationStyled","for_modal_color","background","PaginationMapStyled","_templateObject2","_use","_excluded","_extends","Object","assign","bind","n","t","r","hasOwnProperty","call","apply","SvgAngleBoubleLeft","svgRef","title","titleId","o","i","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","xlinkHref","viewBox","d","ForwardRef","SvgAngleDoubleRight","PaginationMap","firstVisible","clickOnFirstVisible","listRef","elements","toggleButtonBackground","setButtonActive","lastVisible","clickOnLastVisible","element","Pagination","isManager","isConversion","totalPages","leadsAmountPerPage","userLeadsComponent","useUser","count","setCount","setFirstVisible","setLastVisible","lastVisibleValue","setLastVisibleValue","firstVisibleValue","setFirstVisibleValue","decreaseEnable","setDecreaseEnable","increaseEnable","setIncreaseEnable","amount","Number","Array","from","_","page","toString","limit","activeButton","querySelector","scrollIntoView","behavior","block","inline","getAllLeads","branch","resource","createdAt","conManager","conAgent","office","country","region","city","lastUpdate","nextCall","status","toBegin","disabled","ArrowDoubleRight","decreaseCount","calculatedLastValue","max","calculatedFirstValue","SingleArrow","limitFirstValue","newFirstVisibleValue","min","newLastVisibleValue","remainingElements","isLargeList","maxFirstValue","finalFirstValue","increaseCount","toEnd","ArrowDoubleLeft","selectFilterError","filterError","selectSourceState","source","selectSourceLoading","sourceLoading","selectCountryState","selectCountryLoading","countryLoading","selectRegionState","selectRegionLoading","regionLoading","selectCityState","selectCityLoading","cityLoading","selectLastUpdateDateState","lastUpdateDate","selectLastUpdateDateLoading","lastUpdateDateLoading","selectCreatedDateState","createdDate","selectCreatedDateLoading","createdDateLoading","selectNextCallDateState","nextCallDate","selectNextCallDateLoading","nextCallDateLoading","selectAgentState","agent","selectAgentLoading","agentLoading","selectTimeZoneState","selectTimeZoneLoading","timeZoneLoading","selectStatusState","selectStatusLoading","statusLoading","selectOfficesState","officeState","selectOfficesLoading","officeLoading","selectManagerState","manager","selectManagerLoading","managerLoading","selectFilterList","selectOpenFilter","useSelector","officesLoading"],"sourceRoot":""}