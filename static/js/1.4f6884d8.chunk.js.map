{"version":3,"file":"static/js/1.4f6884d8.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/Pagination/Pagination.styled.js","images/svg-icons/angle-bouble-left.svg","images/svg-icons/angle-double-right.svg","components/Pagination/PaginationMap.jsx","components/Pagination/Pagination.jsx","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableComponents/dropdownTimeZone.jsx","components/table/tableComponents/dropdownStatus.jsx","components/table/tableComponents/inputWindow.jsx","components/table/tableComponents/nextCall.jsx","components/table/tableComponents/timeZone.jsx","components/table/tableComponents/city.jsx","components/table/tableComponents/region.jsx","components/table/tableComponents/country.jsx","components/table/tableComponents/status.jsx","components/table/tableComponents/clientTime.jsx","components/table/tableLeads/tableLeads.jsx","components/table/tableHook.jsx/tableHook.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const PaginationStyled = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: auto;\n\n    .pagination-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n\n    .left-button-block,\n    .right-button-block{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.625rem;\n    }\n\n    .paginaton-button{\n        border-radius: 50%;\n        padding: 0.25rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        scale: calc(1);\n        transition: scale ${p => p.theme.transition.main_transition};\n\n        & .arrow-icon{\n            width: 1rem;\n            height: 1rem;\n        }\n        & .icon{\n            width: 0.75rem;\n            height: 0.75rem;\n        }\n        & .left-arrow{\n            transform: rotate(90deg);\n        }\n        & .right-arrow{\n            transform: rotate(-90deg);\n        }\n        &:hover{\n            scale: calc(1.2);\n        }\n    }\n\n    .right-button-block{\n        & button {\n            background-color: ${p => p.theme.color.primary_green_lite};\n\n            & .right-arrow{\n                stroke: ${p => p.theme.color.primary_black};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_black};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.primary_grey};\n                }\n                & .right-arrow{\n                    stroke: ${p => p.theme.color.primary_grey};\n                }\n            }\n\n        }\n        \n    }\n\n    .left-button-block{\n        & button {\n            background-color: ${p => p.theme.color.for_modal_color};\n\n            & .left-arrow{\n                stroke: ${p => p.theme.color.primary_white};\n            }\n            & .arrow-icon{\n                fill: ${p => p.theme.color.primary_white};\n            }\n\n            &:disabled{\n                scale: calc(1);\n                pointer-events: none;\n\n                & .left-arrow{\n                    stroke: ${p => p.theme.color.background};\n                }\n                & .arrow-icon{\n                    fill: ${p => p.theme.color.background};\n                }\n            }\n        }\n    }\n\n    .button{\n        padding: 0.375rem;\n    }\n`\n\n\n\n\n\n\n\n\n\n\nexport const PaginationMapStyled = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.375rem;\n\n    .content-list{\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        max-width: 17.875rem;\n        overflow-x: auto;\n        scroll-snap-type: x mandatory;\n        padding: 0 2px;\n\n        &::-webkit-scrollbar {\n            display: none;\n        }\n        &::-webkit-scrollbar-thumb {\n            display: none;\n        }\n    }\n\n    .content-item {\n        scroll-snap-align: center;\n        padding: 0;\n    }\n\n    .button-background{\n        font-size: 0.75rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0.25rem;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 50%;\n        background-color: pink;\n        background-color: ${p => p.theme.color.for_modal_color};\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        &:hover{\n            background-color: ${p => p.theme.color.primary_green_lite};\n            color: ${p => p.theme.color.primary_black};\n        }\n    }\n\n    .button-active{\n        background-color: ${p => p.theme.color.primary_green_lite};\n        color: ${p => p.theme.color.primary_black};\n    }\n`","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleBoubleLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-right\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-right\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-right\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359zM15.297 15c0 0.125-0.063 0.266-0.156 0.359l-7.281 7.281c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-0.781-0.781c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l6.141-6.141-6.141-6.141c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l0.781-0.781c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l7.281 7.281c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleBoubleLeft);\nexport default __webpack_public_path__ + \"static/media/angle-bouble-left.318d2cbb1e36601ea73d1e1b12583d67.svg\";\nexport { ForwardRef as ReactComponent };","var _use;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAngleDoubleRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"icon icon-angle-double-left\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _use || (_use = /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#icon-angle-double-left\"\n  }, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-angle-double-left\",\n    viewBox: \"0 0 16 28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359zM15.797 21.5c0 0.125-0.063 0.266-0.156 0.359l-0.781 0.781c-0.094 0.094-0.234 0.156-0.359 0.156s-0.266-0.063-0.359-0.156l-7.281-7.281c-0.094-0.094-0.156-0.234-0.156-0.359s0.063-0.266 0.156-0.359l7.281-7.281c0.094-0.094 0.234-0.156 0.359-0.156s0.266 0.063 0.359 0.156l0.781 0.781c0.094 0.094 0.156 0.234 0.156 0.359s-0.063 0.266-0.156 0.359l-6.141 6.141 6.141 6.141c0.094 0.094 0.156 0.234 0.156 0.359z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAngleDoubleRight);\nexport default __webpack_public_path__ + \"static/media/angle-double-right.0005b6c7ffad737a3008b46f779d2062.svg\";\nexport { ForwardRef as ReactComponent };","import { PaginationMapStyled } from \"./Pagination.styled\";\nimport { forwardRef } from \"react\";\n\n\nexport const PaginationMap = forwardRef(({\n    firstVisible,\n    clickOnFirstVisible,\n    listRef,\n    elements,\n    toggleButtonBackground,\n    setButtonActive,\n    lastVisible,\n    clickOnLastVisible\n}, ref) => {\n\n\n    return(\n        <PaginationMapStyled>\n            {firstVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnFirstVisible}\n                ><p>...</p>\n                </button>\n            )}\n            <ul className=\"content-list\" ref={listRef}>\n                {elements.map((element, index) => (\n                    <li className=\"content-item\" key={index}>\n                        <button type=\"button\" \n                            className={`button-background ${toggleButtonBackground(index + 1)}`}\n                            onClick={() => setButtonActive(index + 1)}\n                        ><p>{element}</p>\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            {lastVisible && (\n                <button type=\"button\" \n                    className='button-background'\n                    onClick={clickOnLastVisible}\n                ><p>...</p>\n                </button>\n            )}\n        </PaginationMapStyled>\n    )\n});","import { PaginationStyled } from \"./Pagination.styled\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {ReactComponent as ArrowDoubleLeft} from \"../../images/svg-icons/angle-bouble-left.svg\";\nimport {ReactComponent as ArrowDoubleRight} from \"../../images/svg-icons/angle-double-right.svg\";\nimport {ReactComponent as SingleArrow} from \"../../images/svg-icons/arrow-down.svg\";\nimport { PaginationMap } from \"./PaginationMap\";\nimport { getAllLeads } from \"../../redux/Lead/lead-operation\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport const Pagination = () => {\n    const dispatch = useDispatch();\n    const { userLocation, isAdmin, isManager, isConversion } = useAuth();\n    const { totalPages, leadOffice, leadsAmountPerPage } = useLead();\n    const { userLeadsComponent } = useUser();\n    const [count, setCount] = useState(1);\n    const [firstVisible, setFirstVisible] = useState(false);\n    const [lastVisible, setLastVisible] = useState(false);\n    const [lastVisibleValue, setLastVisibleValue] = useState(0);\n    const [firstVisibleValue, setFirstVisibleValue] = useState(0);\n    const [decreaseEnable, setDecreaseEnable] = useState(false);\n    const [increaseEnable, setIncreaseEnable] = useState(false);\n    const listRef = useRef(null);\n    \n    \n    let amount;\n    if (totalPages) {\n        amount = Number(totalPages);\n    } else {\n        amount = 1;\n    }\n    const elements = Array.from({ length: amount }, (_, index) => index + 1);\n\n\n    const page = count.toString();\n    const limit = leadsAmountPerPage.toString();\n\n\n    useEffect(() => {\n        if (isAdmin && userLocation === \"/\") {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n            }));\n        }\n        if (isAdmin && !userLeadsComponent && userLocation === '/leads') {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n                branch: leadOffice,\n            }));\n        }\n        if ((isManager || isConversion) && !userLeadsComponent && userLocation === '/leads') {\n            dispatch(getAllLeads({\n                page: page,\n                limit: limit,\n            }));\n        }\n    }, [count, dispatch, isAdmin, isConversion, isManager, leadOffice, limit, page, userLeadsComponent, userLocation]);\n       \n     \n\n    useEffect(() => {\n        if (listRef.current) {\n          const activeButton = listRef.current.querySelector('.button-active');\n          if (activeButton) {\n            activeButton.scrollIntoView({\n              behavior: 'smooth',\n              block: 'nearest',\n              inline: 'center'\n            });\n          }\n        }\n    }, [count]);\n\n    \n    useEffect(() => {\n        if (elements.length > 9) {\n            setLastVisible(true);\n            setLastVisibleValue(10);\n        }\n        if (elements.length > 1) {\n            setIncreaseEnable(true);\n        }\n        if (elements.length === 1) {\n            setIncreaseEnable(false);\n            setLastVisible(false);\n        }\n    },[elements.length]);\n    \n\n    const toggleButtonBackground = (index) => {\n        return index === count ? 'button-active' : '';\n    };\n\n\n    const increaseCount = () => {\n        if (count <= (elements.length - 1)) {\n            setCount(prevState => prevState + 1);\n            setDecreaseEnable(true);\n        }\n        if((elements.length - count) <= 5){\n            setLastVisible(false);\n        }\n        if (count + 1 === elements.length) {\n            setIncreaseEnable(false);\n        }\n        if ((elements.length > 9) && ((count >= 5))) { \n            setFirstVisible(true);\n            const calculatedLastValue = count + 6;\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 4;\n            setFirstVisibleValue(calculatedFirstValue > (elements.length - 9) ? (elements.length - 9) : calculatedFirstValue);\n        }\n    };\n \n\n    const decreaseCount = () => {\n        if (count >= 2) {\n            setCount(prevState => prevState - 1);\n            setIncreaseEnable(true);\n        }\n        if (count - 1 <= 1) {\n            setDecreaseEnable(false);\n        }\n        if((elements.length > 9) && ((elements.length - count) >= 4)){\n            setLastVisible(true);\n            const calculatedLastValue = Math.max(10, count + 4);\n            setLastVisibleValue(calculatedLastValue > elements.length ? elements.length : calculatedLastValue);\n            const calculatedFirstValue = count - 6;\n            setFirstVisibleValue(calculatedFirstValue > 1 ? calculatedFirstValue : 1); \n        }\n        if ((elements.length > 9) && ((count <= 6))) { \n            setFirstVisible(false);\n        }\n    };\n \n\n    const setButtonActive = (index) => {\n        setCount(index);\n    \n        const remainingElements = elements.length - index;\n        const isLargeList = elements.length > 9;\n        setFirstVisible(isLargeList && index > 5);\n        setLastVisible(isLargeList && remainingElements >= 5);\n    \n        if (isLargeList) {\n\n            const calculatedLastValue = Math.max(Math.min(index + 5, elements.length), 10);\n            const maxFirstValue = elements.length - 9;\n            const calculatedFirstValue = Math.max(index - 5, 1);\n            const finalFirstValue = calculatedFirstValue > maxFirstValue ? maxFirstValue : calculatedFirstValue;\n    \n            setLastVisibleValue(calculatedLastValue);\n            setFirstVisibleValue(finalFirstValue);\n\n        } else {\n            setFirstVisible(false);\n            setLastVisible(false);\n        }\n\n        setDecreaseEnable(index > 1);\n        setIncreaseEnable(index < elements.length);\n    };\n\n\n    const toEnd = () => {\n        setCount(elements.length);\n        setIncreaseEnable(false);\n        setDecreaseEnable(true);\n        if(elements.length > 9){\n            setLastVisible(false);\n            setFirstVisible(true);\n            setLastVisibleValue(elements.length);\n            setFirstVisibleValue(elements.length - 9);\n        }\n    };\n\n\n    const toBegin = () => {\n        setCount(1);\n        setIncreaseEnable(true);\n        setDecreaseEnable(false);\n        if(elements.length > 9){\n            setLastVisible(true);\n            setFirstVisible(false);\n            setLastVisibleValue(10);\n            setFirstVisibleValue(0);\n        }\n    };\n\n\n    const clickOnFirstVisible = () => {\n        setCount(firstVisibleValue);\n        setIncreaseEnable(true);\n\n        const calculatedFirstValue = firstVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(Math.max(newFirstVisibleValue, 0));\n        \n        if (firstVisibleValue === 1) {\n            setDecreaseEnable(false);\n        }\n\n        if (count <= 10) {\n            setFirstVisible(false);\n        }\n        \n        if (elements.length >= count) {\n            setLastVisible(true);\n        }\n\n        const calculatedLastValue = firstVisibleValue + 5;\n        const newLastVisibleValue = Math.min(Math.max(calculatedLastValue, 10), elements.length);\n        setLastVisibleValue(newLastVisibleValue);\n    };\n\n\n    const clickOnLastVisible = () => {\n        setCount(lastVisibleValue);\n        setFirstVisible(true);\n        setDecreaseEnable(true);\n        \n        const newLastVisibleValue = Math.min(elements.length, lastVisibleValue + 5);\n        setLastVisibleValue(newLastVisibleValue);\n\n        if (newLastVisibleValue  >= elements.length) {\n            setLastVisible(false);\n        }\n        if (lastVisibleValue === elements.length) {\n            setIncreaseEnable(false);\n        }\n\n        const calculatedFirstValue = lastVisibleValue - 5;\n        const limitFirstValue = elements.length - 9;\n        const newFirstVisibleValue = Math.min(calculatedFirstValue, limitFirstValue);\n        setFirstVisibleValue(newFirstVisibleValue);\n    };\n\n   \n    \n    return(\n        <PaginationStyled>\n            <div className=\"pagination-block\">\n                <div className=\"left-button-block\">\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toBegin}\n                        disabled={!decreaseEnable}\n                    >\n                        <ArrowDoubleRight className=\"arrow-icon\" width={16} height={16}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={decreaseCount}\n                        disabled={!decreaseEnable}\n                    >\n                        <SingleArrow className=\"icon left-arrow\" width={12} height={12}/>\n                    </button>\n                </div>\n                <PaginationMap\n                    firstVisible={firstVisible}\n                    clickOnFirstVisible={clickOnFirstVisible}\n                    listRef={listRef}\n                    elements={elements}\n                    toggleButtonBackground={toggleButtonBackground}\n                    setButtonActive={setButtonActive}\n                    lastVisible={lastVisible}\n                    clickOnLastVisible={clickOnLastVisible}\n                />\n                <div className=\"right-button-block\">\n                    <button type=\"button\" className=\"paginaton-button button\" \n                        onClick={increaseCount}\n                        disabled={!increaseEnable}\n                    >\n                        <SingleArrow className=\"icon right-arrow\" width={12} height={12}/>\n                    </button>\n                    <button type=\"button\" className=\"paginaton-button\" \n                        onClick={toEnd}\n                        disabled={!increaseEnable}\n                    >\n                        <ArrowDoubleLeft className=\"arrow-icon\" width={16} height={16}/> \n                    </button>\n                </div>\n            </div>\n        </PaginationStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n  margin-top: 2rem;\n\n  .Table {\n    table-layout: auto;\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n\n    @media only screen and (min-width: 1800px) {\n      white-space: nowrap;\n    }\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n    font-size: 0.5rem;\n    gap: 0.25rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n\n`;\n","import { useLead } from \"../../../hooks/useLead\";\n\n\nexport const DropdownTimeZone = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n\n    const { timeZone: timeZoneData, isTimeZoneLoading } = useLead()\n    const loading = \"Loading...\";\n\n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isTimeZoneLoading ? timeZoneData.map((zona, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={zona}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, zona, \"timeZone\", inputVisible.leadId)}\n                        >\n                            {zona}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useLead } from \"../../../hooks/useLead\";\n\nexport const DropdownStatus = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n\n    const { status: tstatusData, isStatusLoading, isStatusError } = useLead()\n    const loading = \"Loading...\";\n\n    \n    if (isStatusError) {\n        return <div>Oooops something wrong</div>\n    };\n    \n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isStatusLoading ? tstatusData.map((status, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={status}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, status, \"status\", inputVisible.leadId)}\n                        >\n                            {status}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport { patchCityLead, patchCountryLead, patchRegionLead } from \"../../../redux/Lead/lead-operation\";\nimport { useState } from \"react\";\n\n\nexport const InputWindow = ({ leads, inputVisible, inputRef, setLeads, handleTextareaChange, setInputVisible }) => {\n  const dispatch = useDispatch();\n  const [newText, setNewText] = useState(\"\");\n\n\n  const handleInputChange = (event) => {\n    setNewText(event.target.value);\n  };\n\n\n  const handleSubmit = (e, leadIndex, fieldName, leadId) => {\n    e.preventDefault();\n\n    switch (fieldName) {\n      case \"city\":\n        dispatch(patchCityLead({ id: leadId, leadCity: newText }))\n        .then((response) => {\n          if (response.payload.name) {\n            const updatedLeads = [...leads];\n            updatedLeads[leadIndex] = {\n              ...updatedLeads[leadIndex],\n              city: newText\n            };\n            setLeads(updatedLeads);\n            setNewText(\"\");\n            setInputVisible({ row: null, cell: null, leadId: null });\n          }\n        })\n      break;\n\n      \n      case \"region\":\n        dispatch(patchRegionLead({ id: leadId, leadRegion: newText }))\n        .then((response) => {\n          if (response.payload.name) {\n            const updatedLeads = [...leads];\n            updatedLeads[leadIndex] = {\n              ...updatedLeads[leadIndex],\n              region: newText\n            };\n            setLeads(updatedLeads);\n            setNewText(\"\");\n            setInputVisible({ row: null, cell: null, leadId: null });\n          }\n        })\n      break;\n\n      \n      case \"country\":\n        if (fieldName === \"country\") {\n          dispatch(patchCountryLead({ id: leadId, leadCountry: newText }))\n            .then((response) => {\n              if (response.payload.name) {\n                const updatedLeads = [...leads];\n                updatedLeads[leadIndex] = {\n                  ...updatedLeads[leadIndex],\n                  country: newText\n                };\n                setLeads(updatedLeads);\n                setNewText(\"\");\n                setInputVisible({ row: null, cell: null, leadId: null });\n              }\n            })\n        }\n      break;\n      default:\n    }\n  };\n  \n\n  return (\n    <>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={newText}\n              onChange={handleInputChange}\n              onInput={handleTextareaChange}\n            />\n            <button className=\"ButtonSave\" type=\"submit\"\n              onClick={(e) => handleSubmit(e, inputVisible.row, inputVisible.cell, inputVisible.leadId)}\n            >\n              Save\n            </button>\n          </form>\n        )}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../redux/Lead/lead-operation\";\n\nexport const NextCall = ({ lead }) => {\n  const [newDate, setNewDate] = useState(\"\");\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setNewDate(lead.nextCall.toString().slice(0, 16));\n\n    }\n  }, [lead.nextCall]);\n\n  const handleInputChange = (event) => {\n    const updatedDate = event.target.value;\n    dispatch(patchNextCall({ id: lead._id, leadNextcall: updatedDate }))\n      .then((response) => {\n        if (response.payload.nextCall) {\n          setNewDate(updatedDate);\n        }\n      })\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\">\n      <label>\n        <input\n          type=\"datetime-local\"\n          value={newDate}\n          onChange={handleInputChange}\n        />\n      </label>\n    </td>\n  );\n};\n\n","\nexport const TimeZone = ({lead, ArrowDown, toggleInputVisibility, index, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n      {lead.timeZone}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"timeZone\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"timeZone\"\n        )}`}\n      />\n    </td>\n  );\n};","\nexport const City = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  return (\n    <td className=\"TableHeaderItem\" id={`city-${index}`}>\n      {lead.city}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"city\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"city\"\n        )}`}\n      />\n    </td>\n  );\n};\n\n","\nexport const Region = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`region-${index}`}>\n      {lead.region}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"region\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"region\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Country = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  \n  return (\n    <td className=\"TableHeaderItem\" id={`country-${index}`}>\n      {lead.country}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"country\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"country\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Status = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow}) => {\n  \n  \n  return (\n    <td className=\"TableHeaderItem\" id={`status-${index}`}>\n      {lead.status}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"status\"\n        )}`}\n      />\n    </td>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n\n  return (\n    <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\" }}>\n      {calculateClientTime(lead.timeZone)}\n    </td>\n  );\n};\n","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\nimport { DropdownTimeZone } from \"../tableComponents/dropdownTimeZone\";\nimport { DropdownStatus } from \"../tableComponents/dropdownStatus\";\nimport { InputWindow } from \"../tableComponents/inputWindow\";\nimport { NextCall } from \"../tableComponents/nextCall\";\nimport { TimeZone } from \"../tableComponents/timeZone\";\nimport { City } from \"../tableComponents/city\";\nimport { Region } from \"../tableComponents/region\";\nimport { Country } from \"../tableComponents/country\";\nimport { Status } from \"../tableComponents/status\";\nimport { useTableHook } from \"../tableHook.jsx/tableHook\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchStatus, patchTimeZone } from \"../../../redux/Lead/lead-operation.js\";\nimport { ClientTime } from \"../tableComponents/clientTime.jsx\";\nimport { useUser } from \"../../../hooks/useUser.js\";  \n\n\nexport const TableLeads = () => {\n  const { isLeads } = useLead();\n  const { userLeads, userLeadsComponent } = useUser();\n  const [leads, setLeads] = useState()\n  const dispatch = useDispatch();\n  \n\n  useEffect(() => {\n    if (userLeads || isLeads) {\n      setLeads(userLeadsComponent ? userLeads : isLeads)\n    }\n  }, [isLeads, userLeadsComponent, userLeads]);\n\n\n  const {\n    inputVisible,\n    inputRef,\n    dropdownRef,\n    setInputVisible,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  } = useTableHook();\n\n\n  const handleDropdownItemClick = (leadIndex, status, name, leadId) => {\n    const updatedLeads = [...leads];\n    if (name === \"timeZone\") {\n      dispatch(patchTimeZone({ id: leadId, leadTimeZone: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        timeZone: status,\n      };\n    } else if (name === \"status\") {\n      dispatch(patchStatus({ id: leadId, leadStatus: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        status: status,\n      }\n    }\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n\n  return (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            <th className=\"TableHeaderItem\">Agent</th>\n            <th className=\"TableHeaderItem\">Next call</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <Status\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\">{lead.resource}</td>\n                <Country\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <Region\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <City\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <TimeZone\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  index={index}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <ClientTime lead={lead}/>\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.updatedAt &&\n                    lead.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.createdAt &&\n                    lead.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: lead.assigned ? \"none\" : \"#ff000082\" }}\n                >\n                  {lead.conAgentId}\n                </td>\n                <NextCall\n                  lead={lead}\n                />\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n      <InputWindow\n        leads={leads}\n        inputVisible={inputVisible}\n        inputRef={inputRef}\n        setLeads={setLeads}\n        handleTextareaChange={handleTextareaChange}\n        setInputVisible={setInputVisible}\n      />\n      <DropdownStatus\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n      <DropdownTimeZone\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n    </TableListStyled>\n  )\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getStatus, getTimeZone } from \"../../../redux/Lead/lead-operation\";\n\n\nexport const useTableHook = () => {\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null, leadId: null });\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n\n  const toggleInputVisibility = (row, cell, leadId) => {\n    if (cell === \"status\") {\n      dispatch(getStatus())\n    } else if (cell === \"timeZone\") {\n      dispatch(getTimeZone())\n    }\n    setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell, leadId }\n    );\n  };\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n        if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n            (rect.top + window.scrollY + rect.height) / 2\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.36\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible]);\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  },[]);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return {\n    inputVisible,\n    inputRef,\n    isMenuBox,\n    dropdownRef,\n    setInputVisible,\n    setMenuBox,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  };\n};\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\n\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const { isLeadLoading } = useLead();\n    const { isLeadDetails } = useModal();\n    const {availableUsersForAssign} = useUser()\n    const dispatch = useDispatch();\n    console.log(\"Users for Assign:\", availableUsersForAssign);\n\n    const resetStateForOffice = () => {\n        dispatch(resetOfficeLeadState());\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForOffice}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();\n    console.log(isUserLeadsLoading);\n    \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n\n\n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' on onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, forNoneAdminLogin} = useAuth();\n\n\n    useEffect(() => {\n        if (!forNoneAdminLogin && !userLeadsComponent && !isAdmin) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, forNoneAdminLogin, isAdmin, userLeadsComponent]);\n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","PaginationStyled","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","transition","main_transition","color","primary_green_lite","primary_black","primary_grey","for_modal_color","primary_white","background","PaginationMapStyled","_templateObject2","_use","SvgAngleBoubleLeft","className","xlinkHref","SvgAngleDoubleRight","PaginationMap","forwardRef","firstVisible","clickOnFirstVisible","listRef","elements","toggleButtonBackground","setButtonActive","lastVisible","clickOnLastVisible","_jsxs","children","_jsx","type","onClick","map","element","index","concat","Pagination","dispatch","useDispatch","userLocation","isAdmin","isManager","isConversion","useAuth","totalPages","leadOffice","leadsAmountPerPage","useLead","userLeadsComponent","useUser","count","setCount","useState","setFirstVisible","setLastVisible","lastVisibleValue","setLastVisibleValue","firstVisibleValue","setFirstVisibleValue","decreaseEnable","setDecreaseEnable","increaseEnable","setIncreaseEnable","useRef","amount","Number","Array","from","_","page","toString","limit","useEffect","getAllLeads","branch","current","activeButton","querySelector","scrollIntoView","behavior","block","inline","toBegin","disabled","ArrowDoubleRight","decreaseCount","prevState","calculatedLastValue","Math","max","calculatedFirstValue","SingleArrow","limitFirstValue","newFirstVisibleValue","min","newLastVisibleValue","remainingElements","isLargeList","maxFirstValue","finalFirstValue","increaseCount","toEnd","ArrowDoubleLeft","StyledOfficeLeads","TableListStyled","DropdownTimeZone","inputVisible","dropdownRef","handleDropdownItemClick","timeZone","timeZoneData","isTimeZoneLoading","_Fragment","row","cell","split","load","item","zona","value","leadId","DropdownStatus","status","tstatusData","isStatusLoading","isStatusError","InputWindow","leads","inputRef","setLeads","handleTextareaChange","setInputVisible","newText","setNewText","onChange","event","onInput","e","handleSubmit","leadIndex","fieldName","preventDefault","patchCityLead","leadCity","then","response","payload","name","updatedLeads","city","patchRegionLead","leadRegion","region","patchCountryLead","leadCountry","country","NextCall","lead","newDate","setNewDate","nextCall","slice","updatedDate","patchNextCall","_id","leadNextcall","TimeZone","ArrowDown","toggleInputVisibility","toggleUserMenuDropArrow","City","Region","Country","Status","ClientTime","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","style","maxWidth","timeZoneOffset","getTime","toLocaleString","year","month","day","hour","minute","second","undefined","TableLeads","isLeads","userLeads","useTableHook","isMenuBox","setMenuBox","inputElement","document","getElementById","inputContainer","dropdownContainer","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","display","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","textarea","scrollHeight","getStatus","getTimeZone","patchTimeZone","leadTimeZone","patchStatus","leadStatus","clientId","lastName","email","phone","resource","selfCreated","updatedAt","replace","createdAt","assigned","conAgentId","OfficeLeads","isLeadLoading","isLeadDetails","useModal","availableUsersForAssign","console","log","NavLink","to","resetStateForOffice","resetOfficeLeadState","RotatingLoader","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","ArrowSVG","on","backToUsers","resetUserLeadsComponent","OfficeLeadsPage","forNoneAdminLogin","getAvailableUsers"],"sourceRoot":""}