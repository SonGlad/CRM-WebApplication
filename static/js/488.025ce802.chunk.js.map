{"version":3,"file":"static/js/488.025ce802.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableComponents/dropdownTimeZone.jsx","components/table/tableComponents/dropdownStatus.jsx","components/table/tableComponents/inputWindow.jsx","components/table/tableComponents/nextCall.jsx","components/table/tableComponents/timeZone.jsx","components/table/tableComponents/city.jsx","components/table/tableComponents/region.jsx","components/table/tableComponents/country.jsx","components/table/tableComponents/status.jsx","components/table/tableLeads/tableLeads.jsx","components/table/tableHook.jsx/tableHook.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n\n  .Table {\n        table-layout: auto;\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n        @media only screen and (min-width: 1800px) {\n     white-space: nowrap;\n    }\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n        font-size: 0.5rem;\n    /* display: grid; */\n    gap: 0.25rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n\n`;\n","import { useLead } from \"../../../hooks/useLead\";\n\nexport const DropdownTimeZone = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n    const { timeZone: timeZoneData, isTimeZoneLoading } = useLead()\n\n    const loading = \"Loading...\";\n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isTimeZoneLoading ? timeZoneData.map((zona, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={zona}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, zona, \"timeZone\", inputVisible.leadId)}\n                        >\n                            {zona}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useLead } from \"../../../hooks/useLead\";\n\nexport const DropdownStatus = ({ inputVisible, dropdownRef, handleDropdownItemClick }) => {\n\n    const { status: tstatusData, isStatusLoading, isStatusError } = useLead()\n\n     const loading = \"Loading...\";\n    \n if (isStatusError) {\nreturn <div>Oooops something wrong</div>\n    }\n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isStatusLoading ? tstatusData.map((status, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={status}\n                            onClick={() => handleDropdownItemClick(inputVisible.row, status, \"status\", inputVisible.leadId)}\n                        >\n                            {status}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport { patchCityLead, patchCountryLead, patchRegionLead } from \"../../../redux/Lead/lead-operation\";\nimport { useState } from \"react\";\n\nexport const InputWindow = ({ leads, inputVisible, inputRef, setLeads, handleTextareaChange, setInputVisible }) => {\n  \n  const dispatch = useDispatch();\n  const [newText, setNewText] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setNewText(event.target.value);\n  };\n\n  const handleSubmit = (e, leadIndex, fieldName, leadId) => {\n    e.preventDefault();\n\n    switch (fieldName) {\n      case \"city\":\n        dispatch(patchCityLead({ id: leadId, leadCity: newText }))\n                .then((response) => {\n                  if (response.payload.name) {\n                    const updatedLeads = [...leads];\n                    updatedLeads[leadIndex] = {\n                      ...updatedLeads[leadIndex],\n                      city: newText\n                    };\n                    setLeads(updatedLeads);\n                    setNewText(\"\");\n                    setInputVisible({ row: null, cell: null, leadId: null });\n                  }\n          })\n        break;\n      \n      case \"region\":\n        dispatch(patchRegionLead({ id: leadId, leadRegion: newText }))\n          .then((response) => {\n            if (response.payload.name) {\n              const updatedLeads = [...leads];\n              updatedLeads[leadIndex] = {\n                ...updatedLeads[leadIndex],\n                region: newText\n              };\n              setLeads(updatedLeads);\n              setNewText(\"\");\n              setInputVisible({ row: null, cell: null, leadId: null });\n            }\n            })\n\n        break;\n      \n      case \"country\":\n        if (fieldName === \"country\") {\n          dispatch(patchCountryLead({ id: leadId, leadCountry: newText }))\n            .then((response) => {\n              if (response.payload.name) {\n                const updatedLeads = [...leads];\n                updatedLeads[leadIndex] = {\n                  ...updatedLeads[leadIndex],\n                  country: newText\n                };\n                setLeads(updatedLeads);\n                setNewText(\"\");\n                setInputVisible({ row: null, cell: null, leadId: null });\n              }\n            })\n        }\n        break;\n        default:\n    }\n  };\n\n  return (\n    <>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={newText}\n              onChange={handleInputChange}\n              onInput={handleTextareaChange}\n            />\n            <button className=\"ButtonSave\" type=\"submit\"\n              onClick={(e) => handleSubmit(e, inputVisible.row, inputVisible.cell, inputVisible.leadId)}\n            >\n              Save\n            </button>\n          </form>\n        )}\n    </>\n  );\n};\n","\nexport const NextCall = ({leads, lead, setLeads, index, handleTextareaChange }) => {\n    \n          const handleInputChange = (event, leadIndex, fieldName) => {\n    const updatedLeads = [...leads];\n    const fieldParts = fieldName.split(\".\");\n    if (fieldParts.length === 2) {\n      updatedLeads[leadIndex][fieldParts[0]][fieldParts[1]] =\n        event.target.value;\n    } else {\n      updatedLeads[leadIndex][fieldName] = event.target.value;\n    }\n    setLeads(updatedLeads);\n  };\n\n    return (\n                <td className=\"TableHeaderItem\">\n                  <label>\n                    <input\n                      type=\"datetime-local\"\n                      value={lead.latestComment.nextCall && lead.latestComment.nextCall\n                        .toString()\n                        .slice(0, 16)}\n                      onChange={(e) =>\n                        handleInputChange(e, index, \"latestComment.nextCall\")\n                      }\n                      onInput={handleTextareaChange}\n                    />\n                  </label>\n                </td>\n    );\n};\n","\nexport const TimeZone = ({lead, ArrowDown, toggleInputVisibility, index, toggleUserMenuDropArrow }) => {\n\n    return (\n                <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n                  {lead.timeZone}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"timeZone\", lead._id)}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"timeZone\"\n                    )}`}\n                  />\n                </td>\n    );\n};","\nexport const City = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n    return (\n                <td className=\"TableHeaderItem\" id={`city-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"city\", lead._id)}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"city\"\n                    )}`}\n                  />\n                </td>\n    );\n};\n\n","\nexport const Region = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n    return (\n                <td className=\"TableHeaderItem\" id={`region-${index}`}>\n                  {lead.region}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"region\", lead._id)}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"region\"\n                    )}`}\n                  />\n                </td>\n    );\n};\n","\nexport const Country = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n    return (\n                <td className=\"TableHeaderItem\" id={`country-${index}`}>\n                  {lead.country}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"country\", lead._id)}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"country\"\n                    )}`}\n                  />\n                </td>\n    );\n};\n","\nexport const Status = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow}) => {\n    return (\n                <td className=\"TableHeaderItem\" id={`status-${index}`}>\n                  {lead.status}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"status\"\n                    )}`}\n                  />\n                </td>\n    );\n};\n","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\nimport { DropdownTimeZone } from \"../tableComponents/dropdownTimeZone\";\nimport { DropdownStatus } from \"../tableComponents/dropdownStatus\";\nimport { InputWindow } from \"../tableComponents/inputWindow\";\nimport { NextCall } from \"../tableComponents/nextCall\";\nimport { TimeZone } from \"../tableComponents/timeZone\";\nimport { City } from \"../tableComponents/city\";\nimport { Region } from \"../tableComponents/region\";\nimport { Country } from \"../tableComponents/country\";\nimport { Status } from \"../tableComponents/status\";\nimport { useTableHook } from \"../tableHook.jsx/tableHook\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useEffect, useState } from \"react\";\nimport { DataLoading } from \"../../CustomLoaders/CustomLoaders\";\nimport { useDispatch } from \"react-redux\";\nimport { patchStatus, patchTimeZone } from \"../../../redux/Lead/lead-operation.js\";\n\nexport const TableLeads = () => {\n  const { isLeadLoading, isLeads } = useLead();\n  const [delayedLoading, setDelayedLoading] = useState(true);\n  const [leads, setLeads] = useState(isLeads);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLeads(isLeads);\n  }, [isLeads]);\n\n  useEffect(() => {\n    if (!isLeadLoading) {\n      const timer = setTimeout(() => {\n        setDelayedLoading(false);\n      }, 100);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isLeadLoading]);\n\n  const {\n    inputVisible,\n    inputRef,\n    dropdownRef,\n    setInputVisible,\n    handleTextareaChange,\n    calculateClientTime,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  } = useTableHook();\n\n  const handleDropdownItemClick = (leadIndex, status, name, leadId) => {\n    const updatedLeads = [...leads];\n    if (name === \"timeZone\") {\n      dispatch(patchTimeZone({ id: leadId, leadTimeZone: status }))\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        timeZone: status,\n      };\n    } else if (name === \"status\") {\n      dispatch(patchStatus({ id: leadId, leadStatus: status }))\n             updatedLeads[leadIndex] = {\n              ...updatedLeads[leadIndex],\n              status: status,\n            }\n    }\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n  return !isLeadLoading && !delayedLoading ? (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            <th className=\"TableHeaderItem\">Agent</th>\n            <th className=\"TableHeaderItem\">Next call</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <Status\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\">{lead.resource}</td>\n                <Country\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <Region\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <City\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <TimeZone\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  index={index}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\" }}>\n                  {calculateClientTime(lead.timeZone)}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.updatedAt &&\n                    lead.latestComment.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.createdAt &&\n                    lead.latestComment.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: lead.assigned ? \"none\" : \"#ff000082\" }}\n                >\n                  {lead.conAgentId}\n                </td>\n                <NextCall\n                  leads={leads}\n                  lead={lead}\n                  setLeads={setLeads}\n                  index={index}\n                  handleTextareaChange={handleTextareaChange}\n                />\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <InputWindow\n        leads={leads}\n        inputVisible={inputVisible}\n        inputRef={inputRef}\n        setLeads={setLeads}\n        handleTextareaChange={handleTextareaChange}\n        setInputVisible={setInputVisible}\n      />\n      <DropdownStatus\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n      <DropdownTimeZone\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n    </TableListStyled>\n  ) : (\n    <DataLoading />\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getStatus, getTimeZone } from \"../../../redux/Lead/lead-operation\";\n\nexport const useTableHook = () => {\n  const [currentTime] = useState(new Date());\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null, leadId: null });\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    return clientTime.toLocaleString();\n  };\n\n  const toggleInputVisibility = (row, cell, leadId) => {\n    if (cell === \"status\") {\n      dispatch(getStatus())\n    } else if (cell === \"timeZone\") {\n      dispatch(getTimeZone())\n    }\n    setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell, leadId }\n    );\n  };\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n        if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n            (rect.top + window.scrollY + rect.height) / 2\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.36\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible]);\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  }, []);\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n  return {\n    inputVisible,\n    inputRef,\n    isMenuBox,\n      dropdownRef,\n    setInputVisible,\n    setMenuBox,\n    handleTextareaChange,\n    calculateClientTime,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  };\n};\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeState } from \"../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const {availableUsersForAssign} = useUser()\n    const dispatch = useDispatch();\n    console.log(\"Users for Assign:\", availableUsersForAssign);\n\n\n    const resetStateForOffice = () => {\n        dispatch(resetOfficeState())\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForOffice}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <TableLeads/>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center ;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\n\n\n\nexport const UserLeads = () => {\n    const { userLeads, userName, userLeadsComponentData } = useUser();\n    const dispatch = useDispatch();\n    console.log(userLeads);\n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n\n\n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' on onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                <h2>UserLeads</h2>\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\n\n\nconst OfficeLeadsPage = () => {\n    const {userLeadsComponent} = useUser();\n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","TableListStyled","primary_white","DropdownTimeZone","inputVisible","dropdownRef","handleDropdownItemClick","timeZone","timeZoneData","isTimeZoneLoading","useLead","_jsx","_Fragment","children","row","cell","className","split","map","load","item","zona","value","onClick","leadId","DropdownStatus","status","tstatusData","isStatusLoading","isStatusError","InputWindow","leads","inputRef","setLeads","handleTextareaChange","setInputVisible","dispatch","useDispatch","newText","setNewText","useState","_jsxs","onChange","event","onInput","type","e","handleSubmit","leadIndex","fieldName","preventDefault","patchCityLead","leadCity","then","response","payload","name","updatedLeads","city","patchRegionLead","leadRegion","region","patchCountryLead","leadCountry","country","NextCall","lead","index","latestComment","nextCall","toString","slice","handleInputChange","fieldParts","TimeZone","ArrowDown","toggleInputVisibility","toggleUserMenuDropArrow","concat","_id","City","Region","Country","Status","TableLeads","isLeadLoading","isLeads","delayedLoading","setDelayedLoading","useEffect","timer","setTimeout","clearTimeout","calculateClientTime","useTableHook","currentTime","Date","isMenuBox","setMenuBox","useRef","inputElement","document","getElementById","inputContainer","current","dropdownContainer","rect","getBoundingClientRect","style","top","window","scrollY","left","scrollX","display","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","textarea","scrollHeight","timeZoneOffset","getTime","toLocaleString","getStatus","getTimeZone","patchTimeZone","leadTimeZone","patchStatus","leadStatus","DataLoading","clientId","lastName","email","phone","resource","maxWidth","selfCreated","updatedAt","replace","createdAt","assigned","conAgentId","OfficeLeads","isAdmin","useAuth","availableUsersForAssign","useUser","console","log","NavLink","to","resetStateForOffice","resetOfficeState","UserLeadsStyled","transition","main_transition","UserLeads","userLeads","userName","userLeadsComponentData","openUserModal","openModalUserDetail","ArrowSVG","on","backToUsers","resetUserLeadsComponent","OfficeLeadsPage","userLeadsComponent"],"sourceRoot":""}