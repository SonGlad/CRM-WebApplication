{"version":3,"file":"static/js/513.0175f24b.chunk.js","mappings":"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","sources":["images/svg-icons/arrow-left.svg","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableComponents/dropdownTimeZone.jsx","components/table/tableComponents/dropdownStatus.jsx","components/table/tableComponents/inputWindow.jsx","components/table/tableComponents/nextCall.jsx","components/table/tableComponents/timeZone.jsx","components/table/tableComponents/city.jsx","components/table/tableComponents/region.jsx","components/table/tableComponents/country.jsx","components/table/tableComponents/status.jsx","components/table/tableComponents/clientTime.jsx","components/table/tableLeads/CustomAssignLeadCheckbox.jsx","components/table/tableLeads/tableLeads.jsx","components/table/tableHook.jsx/tableHook.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        justify-content: ${p => p.$isAdmin ? 'none' : 'center'};\n        margin-bottom: 1rem;\n    }\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        margin-right: 32%;\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem\n    }\n\n\n    .filter-block{\n        margin-bottom: 2rem;\n    }\n\n    \n    .filter-list{\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: center;\n        font-weight: 500;\n        line-height: 1.25rem;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border-radius: 0.625rem;\n  width: 100%;\n  position: relative;\n  overflow-y: auto;\n\n  .TableContainer{\n    border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .Table {\n    table-layout: auto;\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 0.5rem;\n  }\n\n\n  .TableHeader {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background: #223f53;\n  }\n\n  .TableHeaderItem::after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px; \n     background-color: #E3FFA8;\n    z-index: 5;\n}\n\n/* \n  .TableHeaderList thead {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n\n    border-top: 1px solid #E3FFA8;\n  } */\n\n  td[id^=\"status-\"],\n  td[id^=\"timeZone-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid transparent;\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n\n    @media only screen and (min-width: 1800px) {\n      white-space: nowrap;\n    }\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    width: 10rem;\n    z-index: 1000;\n    position: absolute;\n    font-size: 0.75rem;\n    gap: 0.2rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n       background-color: ${p => p.theme.color.background2};\n    border: 0.25rem solid ${p => p.theme.color.background3};\n    color: black;\n    overflow: hidden;\n     overflow-x: auto; \n  }\n\n\n  .ListItem {\n    cursor: pointer;\n    color: #E3FFA8;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n     cursor: pointer;\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background-color: ${p => p.theme.color.background2};\n    border: 0.25rem solid ${p => p.theme.color.background3};\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: white;\n  }\n\n  .ButtonSave {\n    cursor: pointer;\n    border-radius: 5px;\n    background: #E3FFA8;\n    color: ${p => p.theme.color.background2};\n    border: none;\n  }\n\n    .check-btn{\n    font-size: 0.5rem;\n    /* width: 70%; */\n    color: ${(props) => props.theme.color.primary_black};\n    background-color: ${p => p.theme.color.primary_green_lite};\n    border: 1px solid ${p => p.theme.color.primary_green_lite};\n    padding: 0.25rem 0.25rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    transition: color ${p => p.theme.transition.main_transition};\n    flex-wrap: nowrap;\n\n    &:hover{\n      color: ${props => props.theme.color.primary_grey};\n    }\n  }\n\n\n  .calendar-cont{\n    width: 72px;\n\n    & input{\n      padding: 0;\n      text-align: center;\n      color: ${props => props.theme.color.primary_white};\n      transition: border ${props => props.theme.transition.main_transition};\n\n      &:focus,\n      &:hover {\n        color: ${props => props.theme.color.primary_green_lite};\n\n        &::placeholder{\n        color: ${props => props.theme.color.primary_green_lite};\n      }\n      }\n      \n      &::placeholder{\n        color: ${props => props.theme.color.primary_white};\n      }\n    }\n  }\n`;\n\n\nexport const CustomCheckboxStyled = styled.div`\n\n  .custom-checkbox{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .checkbox {\n    margin-top: 5px;\n    width: 1rem;\n    height: 1rem;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n  }\n  \n  .custom-checkbox-before, .custom-checkbox-after{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n  }\n  .custom-checkbox-before{\n    opacity: 1;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .custom-checkbox-after{\n    opacity: 0;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .checkbox:focus + .custom-checkbox > .custom-checkbox-before{\n    outline: 3px solid ${p => p.theme.color.primary_green_lite};\n    border-radius: 2px;\n    outline-offset: -3px; \n  }\n\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-after{\n    opacity: 1;\n  }\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-before{\n    opacity: 0;\n  }\n\n`\n","import { useDispatch } from \"react-redux\";\nimport { useLead } from \"../../../hooks/useLead\";\nimport { patchTimeZone } from \"../../../redux/Lead/lead-operation\";\n\n\nexport const DropdownTimeZone = ({ inputVisible, dropdownRef, setInputVisible}) => {\nconst dispatch = useDispatch();\n\n    const { timeZone: timeZoneData, isTimeZoneLoading } = useLead()\n    const loading = \"Loading...\";\n\n    const handleDropdownItemClick = (e, leadIndex, zona, leadId) => {\n        e.preventDefault();\n        dispatch(patchTimeZone({ id: leadId, leadTimeZone: zona }))\n        setInputVisible({ row: null, cell: null, leadId: null });\n    };\n\n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isTimeZoneLoading ? timeZoneData.map((zona, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={zona}\n                            onClick={(e) => handleDropdownItemClick(e, inputVisible.row, zona, inputVisible.leadId)}\n                        >\n                            {zona}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport { useLead } from \"../../../hooks/useLead\";\nimport { patchStatus} from \"../../../redux/Lead/lead-operation\";\n\nexport const DropdownStatus = ({ inputVisible, dropdownRef, setInputVisible}) => {\n    const dispatch = useDispatch();\n\n    const { status: tstatusData, isStatusLoading, isStatusError} = useLead()\n    const loading = \"Loading...\";\n\n    const handleDropdownItemClick = (e, status, leadId) => {\n        e.preventDefault();\n        dispatch(patchStatus({ id: leadId, leadStatus: status }))\n        setInputVisible({ row: null, cell: null, leadId: null });\n    };\n\n    \n    if (isStatusError) {\n        return <div>Oooops something wrong</div>\n    };\n    \n\n    return (\n        <>\n            {inputVisible.row !== null && inputVisible.cell === \"status\" && (\n                <ul className=\"dropdown\" ref={dropdownRef}>\n                    {!isStatusLoading ? tstatusData.map((status, item) => (\n                        <li\n                            className=\"ListItem\"\n                            key={item}\n                            value={status}\n                            onClick={(e) => handleDropdownItemClick(e, inputVisible.row, status, inputVisible.leadId)}\n                        >\n                            {status}\n                        </li>\n                    )) : loading.split(\"\").map((load, item) => (\n                        <li\n                        className=\"ListItem\"\n                            key={item}\n                        >{load}</li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport {\n  patchCityLead,\n  patchCountryLead,\n  patchRegionLead,\n} from \"../../../redux/Lead/lead-operation\";\nimport { useState } from \"react\";\n\nexport const InputWindow = ({\n  inputVisible,\n  inputRef,\n  handleTextareaChange,\n  setInputVisible,\n}) => {\n  const dispatch = useDispatch();\n  const [newText, setNewText] = useState(\"\");\n\n\n  const handleInputChange = (event) => {\n    setNewText(event.target.value);\n  };\n\n  const handleSubmit = (e, leadIndex, fieldName, leadId) => {\n    e.preventDefault();\n\n    switch (fieldName) {\n      case \"city\":\n        dispatch(patchCityLead({ id: leadId, leadCity: newText }))\n        setNewText(\"\");\n        setInputVisible({ row: null, cell: null, leadId: null });\n      break;\n\n      case \"region\":\n        dispatch(patchRegionLead({ id: leadId, leadRegion: newText }))\n        setNewText(\"\");\n        setInputVisible({ row: null, cell: null, leadId: null });\n      break;\n\n      case \"country\":\n        if (fieldName === \"country\") {\n          dispatch(patchCountryLead({ id: leadId, leadCountry: newText }))\n          setNewText(\"\");\n          setInputVisible({ row: null, cell: null, leadId: null });\n        }\n      break;\n      \n      default:\n    }\n  };\n\n  return (\n    <>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={newText}\n              onChange={handleInputChange}\n              onInput={handleTextareaChange}\n            />\n            <button\n              className=\"ButtonSave\"\n              type=\"submit\"\n              onClick={(e) =>\n                handleSubmit(\n                  e,\n                  inputVisible.row,\n                  inputVisible.cell,\n                  inputVisible.leadId\n                )\n              }\n            >\n              Save\n            </button>\n          </form>\n        )}\n    </>\n  );\n};\n","import Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/dark.css\";\nimport { useState, useEffect ,useMemo, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../redux/Lead/lead-operation\";\n\n\n\nexport const NextCall = ({ lead }) => {\n  const [date, setDate] = useState(null);\n  const dateNow = useRef(new Date());\n  const dispatch = useDispatch();\n\n\n  const nextCallDate = useMemo(() => {\n    return lead.nextCall ? new Date(lead.nextCall) : null;\n  }, [lead.nextCall]);\n\n\n  const isOverdue = date && date < dateNow.current;\n  const timeLeft = date ? date - dateNow.current : 0;\n  const isAlmostDue = !isOverdue && timeLeft <= 6 * 60 * 60 * 1000;\n  const isToday = date && dateNow.current.toDateString() === date.toDateString();\n  const minDateOption = date && date > dateNow.current ? \"today\" : null;\n  const minTimeOption = isToday ? dateNow.current.toTimeString().slice(0, 5) : null;\n\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setDate(nextCallDate);\n    } else {\n      setDate(null);\n    }\n  }, [lead.nextCall, nextCallDate]);\n\n\n  const submitNextCallDate = () => {\n    if ((date !== (nextCallDate || null)) && (date !== dateNow.current)) {\n      if (isOverdue) {\n        setDate(null);\n      } else {\n        const updatedDate = date.toISOString().slice(0, 16)\n        dispatch(patchNextCall({\n          id: lead._id, \n          leadNextcall: updatedDate \n        }))\n      }\n    }\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\"\n      style={{\n        backgroundColor: isOverdue\n          ? '#ff000082'\n          : isAlmostDue\n          ? '#223f53'\n          : 'transparent'\n      }}\n    >\n      <div className=\"calendar-cont\">\n        <Flatpickr\n          data-enable-time\n          value={date ? date : ''}\n          onChange={([date]) => setDate(date)}\n          options={{\n            dateFormat: \"d.m.Y  H:i\",\n            minDate: minDateOption,\n            minTime: minTimeOption,\n            weekNumbers: true,\n            \"locale\": {\n              \"firstDayOfWeek\": 1\n            },\n          }}\n          placeholder=\"Select Date/ Time\"\n          onClose={submitNextCallDate}\n        />   \n      </div>\n    </td>\n  );\n};\n","export const TimeZone = ({lead, ArrowDown, toggleInputVisibility, index, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n      {lead.timeZone}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"timeZone\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"timeZone\"\n        )}`}\n      />\n    </td>\n  );\n};\n","export const City = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  return (\n    <td className=\"TableHeaderItem\" id={`city-${index}`}>\n      {lead.city}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"city\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"city\"\n        )}`}\n      />\n    </td>\n  );\n};\n\n\n\n\n\n\n\n\n","\nexport const Region = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`region-${index}`}>\n      {lead.region}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"region\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"region\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Country = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n  \n  return (\n    <td className=\"TableHeaderItem\" id={`country-${index}`}>\n      {lead.country}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"country\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"country\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Status = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow}) => {\n  \n  \n  return (\n    // <td className=\"TableHeaderItem\" id={`status-${index}`}>\n    //   {lead.status}\n    //   <ArrowDown\n    //     onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n    //     className={`arrow-svg ${toggleUserMenuDropArrow(\n    //       index,\n    //       \"status\"\n    //     )}`}\n    //   />\n    // </td>\n        <td className=\"TableHeaderItem\" id={`status-${index}`}>\n      {lead.status}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"status\"\n        )}`}\n      />\n    </td>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const currentUTCTime  = new Date(\n      currentTime.getTime() + currentTime.getTimezoneOffset() * 60000\n    );     \n\n    const clientTime = new Date(\n      currentUTCTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n\n  return (\n    <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\", textWrap: \"unset\"}}>\n      {calculateClientTime(lead.timeZone)}\n    </td>\n  );\n};\n","import { CustomCheckboxStyled } from \"../tableExternalLeads/tableExternalLeads.styled\";\nimport { ReactComponent as CheckedIcon } from \"../../../images/svg-icons/check.svg\";\nimport { ReactComponent as CheckBoxIcon } from \"../../../images/svg-icons/rectangle.svg\";\nimport { toggleOfficeLeadsCheckboxState } from \"../../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\n\n\n\n\nexport const CustomAssignLeadCheckbox = ({selectedOfficeLeadsCheckedCheckbox, lead}) => {\n    const dispatch = useDispatch();\n\n\n    const handleCheckboxChange = (_id) => {\n        dispatch(toggleOfficeLeadsCheckboxState({_id}));\n    };\n\n\n    return(\n        <CustomCheckboxStyled>\n            <div className=\"custom-checkbox\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"delete_external_lead\"\n                    id={lead._id}\n                    checked={selectedOfficeLeadsCheckedCheckbox.includes(lead._id)}\n                    onChange={() => handleCheckboxChange(lead._id)}\n                />\n                <div className=\"custom-checkbox\">\n                    <CheckBoxIcon className=\"custom-checkbox-before\" width=\"16\" height=\"16\"/>\n                    <CheckedIcon className=\"custom-checkbox-after\" width=\"16\" height=\"16\"/>\n                </div>\n            </div>\n        </CustomCheckboxStyled>\n    );\n};","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\nimport { DropdownTimeZone } from \"../tableComponents/dropdownTimeZone\";\nimport { DropdownStatus } from \"../tableComponents/dropdownStatus\";\nimport { InputWindow } from \"../tableComponents/inputWindow\";\nimport { NextCall } from \"../tableComponents/nextCall\";\nimport { TimeZone } from \"../tableComponents/timeZone\";\nimport { City } from \"../tableComponents/city\";\nimport { Region } from \"../tableComponents/region\";\nimport { Country } from \"../tableComponents/country\";\nimport { Status } from \"../tableComponents/status\";\nimport { useTableHook } from \"../tableHook.jsx/tableHook\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getLeadById } from \"../../../redux/Lead/lead-operation.js\";\nimport { ClientTime } from \"../tableComponents/clientTime.jsx\";\nimport { useUser } from \"../../../hooks/useUser.js\";\nimport { useAuth } from \"../../../hooks/useAuth.js\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice.js\";\nimport { CustomAssignLeadCheckbox } from \"./CustomAssignLeadCheckbox.jsx\";\nimport { setLeadDetailsModalTrue } from \"../../../redux/Lead/lead-slice.js\";\nimport { ShowRules } from \"../../../utils/showRules.js\";\n\n\nexport const TableLeads = () => {\n  const { isLeads, selectedOfficeLeadsCheckedCheckbox, leadOffice } = useLead();\n  const { formatDateTime } = ShowRules();\n  const {\n    userBranch,\n    userRole,\n    isAdmin,\n    isConversion,\n    isManager,\n    isLoggedIn,\n  } = useAuth();\n  const { userLeads, userLeadsComponent } = useUser();\n  const [leads, setLeads] = useState();\n  const dispatch = useDispatch();\n   \n \n  useEffect(() => {\n    if (userLeadsComponent && userLeads) {\n      setLeads(userLeads)\n    } else if(isLeads){\n      setLeads(isLeads)\n    }\n  }, [isLeads, userLeads, userLeadsComponent]);\n\n\n  const {\n    inputVisible,\n    inputRef,\n    dropdownRef,\n    setInputVisible,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  } = useTableHook();\n  \n\n  const openExternalLeadDetail = (_id) => {\n    dispatch(openModalLeadDetail());\n    dispatch(setLeadDetailsModalTrue(\"Office\"));\n    if (isLoggedIn && isAdmin) {\n      dispatch(\n        getLeadById({\n          leadId: _id,\n          branch: leadOffice,\n        })\n      );\n    } else if (isLoggedIn && (isConversion || isManager)) {\n      dispatch(getLeadById({ leadId: _id }));\n    }\n  };\n\n  return (\n   \n    <TableListStyled>\n       <div className=\"TableContainer\">\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            {userRole !== \"Conversion Agent\" && (\n              <th className=\"TableHeaderItem\">Assign / Reassign Agent</th>\n            )}\n            {userRole !== \"Conversion Manager\" &&\n              userRole !== \"Conversion Agent\" && (\n                <th className=\"TableHeaderItem\">Assign / Reassign Manager</th>\n              )}\n            <th className=\"TableHeaderItem\">Next call</th>\n            <th className=\"TableHeaderItem\">Details</th>\n            {userBranch === \"Main\" && (\n              <th className=\"TableHeaderItem\">Check</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <Status\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\">{lead.resource}</td>\n                <Country\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <Region\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <City\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <TimeZone\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  index={index}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <ClientTime lead={lead} />\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.updatedAt && formatDateTime(lead.updatedAt)}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.createdAt && formatDateTime(lead.createdAt)}\n                </td>\n                {userRole !== \"Conversion Agent\" && \n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: !lead.conAgentId ? \"#ff000082\" : \"\" }}\n                >\n                  {!lead.conAgentId ? (\n                    'Not Assigned'\n                  ) : (\n                    lead.conAgentId.username\n                  )}\n                </td>}\n                {userRole !== \"Conversion Manager\" && userRole !== \"Conversion Agent\" && (\n                  <td\n                    className=\"TableHeaderItem\"\n                    style={{ background: !lead.conManagerId ? \"#ff000082\" : \"\" }}\n                    >\n                    {!lead.conManagerId ? (\n                      'Not Assigned'\n                    ) : (\n                      lead.conManagerId.username\n                    )}\n                  </td>\n                )}\n                <NextCall lead={lead} />\n                <td className=\"TableHeaderItem\">\n                  <button className=\"check-btn\" type='button'\n                    onClick={() => openExternalLeadDetail(lead._id, lead.branch)}\n                  >Open\n                  </button>\n                </td>\n                {userBranch === \"Main\" && (\n                  <td className=\"TableHeaderItem\">\n                    <CustomAssignLeadCheckbox\n                      lead={lead}\n                      selectedOfficeLeadsCheckedCheckbox={\n                        selectedOfficeLeadsCheckedCheckbox\n                      }\n                    />\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>    \n      <InputWindow\n        inputVisible={inputVisible}\n        inputRef={inputRef}\n        handleTextareaChange={handleTextareaChange}\n        setInputVisible={setInputVisible}\n      />\n      <DropdownStatus\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        setInputVisible={setInputVisible}\n      />\n      <DropdownTimeZone\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        setInputVisible={setInputVisible}\n        />\n        </div>\n      </TableListStyled>\n      \n  );\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLead } from \"../../../hooks/useLead\";\n\n\nexport const useTableHook = () => {\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null, leadId: null });\n  const [index, setIndex] = useState()\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n    const {\n    isLeads,\n    } = useLead();\n\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n  const toggleInputVisibility = (row, cell, leadId) => {\n    setIndex(leadId)\n\n        setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell, leadId }\n    );\n  };\n\n\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n\n      const tableElement = document.querySelector('.TableHeaderItem').offsetHeight;\n      // const mainContainer = document.getElementById('root').offsetHeight;\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      const indexElement = isLeads.findIndex(element => element._id === index);\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n          if (inputContainer) {\n            inputContainer.style.top = `${tableElement + (rect.height * (indexElement + 1) - window.scrollX)}px`;\n            inputContainer.style.left = `${rect.left - inputContainer.clientWidth * 1.5}px`\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          // dropdownContainer.style.top = `${\n          //  isLeads[isLeads.length - 1]._id !== index ? rect.top - dropdownRef.current.clientHeight * 0.9 : rect.top - dropdownRef.current.clientHeight * 1.11\n          // }px`;\n          dropdownContainer.style.top = `${ (rect.height * (indexElement + 1) - window.scrollX)}px`;\n          // dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n          dropdownContainer.style.left = `${rect.right - dropdownContainer.clientWidth * 1.6}px`\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            isLeads[isLeads.length - 1]._id !== index ? (rect.right + window.scrollX) / 1.55 : rect.right\n            }px`;\n          // dropdownContainer.style.top = `${isLeads[isLeads.length - 1]._id !== index ? '' : rect.top}px`;\n           dropdownContainer.style.top = `${tableElement + (rect.height * (indexElement + 1) - window.scrollX)}px`;\n        }\n      }\n    }\n  }, [inputVisible, isLeads, index]);\n  \n\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  },[]);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return {\n    inputVisible,\n    inputRef,\n    isMenuBox,\n    dropdownRef,\n    setInputVisible,\n    setMenuBox,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  };\n};\n\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { ShowRules } from \"../../utils/showRules\";\n\n\n\nexport const OfficeLeads = () => {\n    const { formatOfficeName } = ShowRules();\n    const { isAdmin } = useAuth();\n    const { isLeadLoading, leadOffice } = useLead();\n    const { isLeadDetails } = useModal();\n    const { userLeadsComponent } = useUser()\n    const dispatch = useDispatch();\n    \n\n    const resetStateForLeads = () => {\n        if (leadOffice) {\n            dispatch(resetOfficeLeadState());\n        }\n        if (userLeadsComponent) {\n            dispatch(resetUserLeadsComponent());\n        }\n    };\n\n\n    return(\n        <StyledOfficeLeads $isAdmin={isAdmin}>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    {isAdmin ? (\n                        <>\n                            <NavLink className=\"link\" to='/' onClick={resetStateForLeads}>\n                                <ArrowSVG className=\"svg\"/>\n                                <h1 className=\"titles\">Back</h1>\n                            </NavLink>\n                            <h2 className=\"titles\">{formatOfficeName(leadOffice)} Leads List & Management</h2>\n                        </>\n                    ) : (\n                        <h2 className=\"titles\">All Office Leads List & Management</h2>\n                    )}\n                </div>\n                <div className=\"filter-block\">\n                    <ul className=\"filter-list\">\n                    <li className=\"filter-item\">\n                        <p>FILTER BLOCK</p>\n                    </li>\n                    </ul>\n                </div>\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();  \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n    \n    \n    \n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\nimport { getStatus, getTimeZone } from \"../redux/Lead/lead-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, isManager, isConversionManager, isConversion } = useAuth();\n\n\n    useEffect(() => {\n        if (!userLeadsComponent && (isAdmin || isManager || isConversion)) {\n            dispatch(getStatus());\n            dispatch(getTimeZone());\n        }\n        if (!userLeadsComponent && !isAdmin && (isManager || isConversionManager)) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, isAdmin, isConversion, isConversionManager, isManager, userLeadsComponent]);\n    \n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","$isAdmin","transition","main_transition","primary_white","TableListStyled","background2","background3","primary_black","primary_grey","_templateObject2","DropdownTimeZone","inputVisible","dropdownRef","setInputVisible","dispatch","useDispatch","timeZone","timeZoneData","isTimeZoneLoading","useLead","_jsx","_Fragment","children","row","cell","className","split","map","load","item","zona","value","onClick","e","handleDropdownItemClick","leadIndex","leadId","preventDefault","patchTimeZone","leadTimeZone","DropdownStatus","status","tstatusData","isStatusLoading","isStatusError","patchStatus","leadStatus","InputWindow","inputRef","handleTextareaChange","newText","setNewText","useState","_jsxs","onChange","event","onInput","type","handleSubmit","fieldName","patchCityLead","leadCity","patchRegionLead","leadRegion","patchCountryLead","leadCountry","NextCall","lead","date","setDate","dateNow","useRef","Date","nextCallDate","useMemo","nextCall","isOverdue","current","timeLeft","isAlmostDue","isToday","toDateString","minDateOption","minTimeOption","toTimeString","slice","useEffect","style","backgroundColor","Flatpickr","_ref2","options","dateFormat","minDate","minTime","weekNumbers","placeholder","onClose","submitNextCallDate","updatedDate","toISOString","patchNextCall","_id","leadNextcall","TimeZone","ArrowDown","toggleInputVisibility","index","toggleUserMenuDropArrow","concat","City","city","Region","region","Country","country","Status","ClientTime","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","maxWidth","textWrap","timeZoneOffset","currentUTCTime","getTime","getTimezoneOffset","toLocaleString","year","month","day","hour","minute","second","undefined","calculateClientTime","CustomAssignLeadCheckbox","selectedOfficeLeadsCheckedCheckbox","CustomCheckboxStyled","name","checked","includes","handleCheckboxChange","toggleOfficeLeadsCheckboxState","CheckBoxIcon","CheckedIcon","TableLeads","isLeads","leadOffice","formatDateTime","ShowRules","userBranch","userRole","isAdmin","isConversion","isManager","isLoggedIn","useAuth","userLeads","userLeadsComponent","useUser","leads","setLeads","useTableHook","isMenuBox","setMenuBox","setIndex","inputElement","document","getElementById","tableElement","querySelector","offsetHeight","inputContainer","dropdownContainer","indexElement","findIndex","element","rect","getBoundingClientRect","top","window","scrollX","left","clientWidth","scrollY","display","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","textarea","scrollHeight","clientId","lastName","email","phone","resource","selfCreated","updatedAt","createdAt","conAgentId","username","conManagerId","openExternalLeadDetail","branch","openModalLeadDetail","setLeadDetailsModalTrue","getLeadById","OfficeLeads","formatOfficeName","isLeadLoading","isLeadDetails","useModal","NavLink","to","resetStateForLeads","resetOfficeLeadState","resetUserLeadsComponent","ArrowSVG","RotatingLoader","Pagination","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","backToUsers","OfficeLeadsPage","isConversionManager","getStatus","getTimeZone","getAvailableUsers"],"sourceRoot":""}