{"version":3,"file":"static/js/793.012ab46b.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/HomePage/WelcomePage/Welcome.styled.js","components/HomePage/WelcomePage/Welcome.jsx","components/HomePage/MainPage/Main.styled.js","components/table/table.styled.js","components/table/table.js","components/HomePage/MainPage/Main.jsx","pages/Home.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport BackGroundWelcome from \"../../images/images/welcome.jpg\"\nimport BackGroundLogin from \"../../images/images/login.jpg\";\nimport BackGroundRegister from \"../../images/images/register.jpg\"\n\n\nexport const SectionStyle = styled.section`\n\n`\n\nexport const WelcomeSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.5), \n        rgba(46, 47, 66, 0.5)), \n        url(${BackGroundWelcome});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const RegisterSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundRegister});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const LoginSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundLogin});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`","import {\n    SectionStyle,\n    WelcomeSectionStyled,\n    RegisterSectionStyled,\n    LoginSectionStyled\n} from './Section.styled';\n\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    );\n};\n\nexport const WelcomeSection = ({children}) => {\n    return (\n        <WelcomeSectionStyled>\n            {children}\n        </WelcomeSectionStyled>\n    );\n};\n\nexport const RegisterSection = ({children}) => {\n    return (\n        <RegisterSectionStyled>\n            {children}\n        </RegisterSectionStyled>\n    );\n};\n\n\nexport const LoginSection = ({children}) => {\n    return (\n        <LoginSectionStyled>\n            {children}\n        </LoginSectionStyled>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledWelcome = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    .welcome-title{\n        margin-bottom: 3.75rem;\n        font-size: 40px;\n        line-height: 1.3;\n        font-weight: 700;\n        color: ${p => p.theme.color.primary_white};\n    \n        @media screen and (min-width: 834px) {\n            font-size: 3.4375rem;\n            line-height: 1.2;\n            letter-spacing: 0.625rem;\n        }\n\n        @media screen and (min-width: 1440px) {\n            font-weight: 700;\n            font-size: 4.375rem;\n        }\n    }\n\n    .welcome-navigation{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n    }\n\n    .welcome-nav-list{\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 3.75rem;\n        flex-direction: column;\n\n        @media screen and (min-width: 834px) {\n            flex-direction: row;\n            gap: 1.875rem;\n        }\n        @media screen and (min-width: 1440px) {\n            gap: 3.75rem;\n        }\n    }\n\n    .welcome-nav-item{\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n\n        @media screen and (min-width: 1440px) {\n            width: 30%;\n        }\n    }\n\n    .welcome-item-text{\n        text-align: center;\n        margin-bottom: 1.875rem;\n\n        @media screen and (min-width: 1440px) {\n            font-size: 1.5625rem;\n            line-height: 1.5;\n        }\n    }\n\n    .welcome-nav-link{\n        display: flex;\n        width: 8.875rem;\n        padding: 0.5rem 0.625rem;\n        border-radius: 0.75rem;\n        background: ${p => p.theme.color.primary_green_lite};\n        font-size: 0.875rem;\n        font-weight: 500;\n        line-height: 1.4;\n        justify-content: center;\n        color: ${p => p.theme.color.primary_black};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        &:hover {\n            color: ${props => props.theme.color.primary_grey};\n        }\n\n        &:focus {\n            color: ${props => props.theme.color.primary_grey};\n        }\n\n        @media screen and (min-width: 834px) {\n            width: 50%;\n            font-size: 1.25rem;\n        }\n\n        @media screen and (min-width: 1440px) {\n            font-size: 1.5625rem;\n            line-height: 1.5;\n        }\n    }\n`","import { StyledWelcome } from \"./Welcome.styled\";\nimport { Container } from \"../../Container/Container\";\nimport { WelcomeSection } from \"../../Section/Section\";\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport const Welcome = () => {\n    \n    return (\n        <WelcomeSection>\n            <Container>\n                <StyledWelcome>\n                    <h1 className=\"welcome-title\">WELCOME</h1>\n                    <nav className=\"welcome-navigation\">\n                        <ul className=\"welcome-nav-list\">\n                            <li className=\"welcome-nav-item\">\n                                <p className=\"welcome-item-text\">If you still don't have an account, please proceed with</p>\n                                <NavLink className=\"welcome-nav-link\" to=\"/signup\">\n                                    Sign Up\n                                </NavLink>\n                            </li>\n                            <li className=\"welcome-nav-item\">\n                                <p className=\"welcome-item-text\">If you already have an account, please proceed with</p>\n                                <NavLink className=\"welcome-nav-link\" to=\"/signin\">\n                                    Sign In\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                </StyledWelcome>\n            </Container>\n        </WelcomeSection>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const StyledMainPage = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    height: 90vh;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 87.5dvh;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableList = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n\n  .Table {\n    border-collapse: collapse;\n    table-layout: fixed;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #e3ffa869;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"lastName-\"],\n  td[id^=\"email-\"],\n  td[id^=\"phone-\"],\n  td[id^=\"resourse-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n    margin-top: 0.3125rem;\n    display: none;\n    gap: 0.5rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n    background: ${(p) => p.theme.color.primary_green_lite};\n    color: black;\n  }\n\n  .ListItem {\n    cursor: pointer;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background: #e3ffa8e0;\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: black;\n  }\n\n  .ButtonSave {\n    border-radius: 5px;\n    background: black;\n    color: white;\n    border: none;\n  }\n`;\n","import { TableList } from \"./table.styled\";\nimport { useEffect, useState, useRef } from \"react\";\nimport leadsData from \"./leads.json\";\nimport statusData from \"./status.json\";\nimport timeZoneData from \"./timeZone.json\";\nimport { ReactComponent as ArrowDown } from \"../../images/svg-icons/arrow-down.svg\";\n\nexport function Table() {\n  const [leads, setLeads] = useState(leadsData);\n  // const [dropdownVisible, setDropdownVisible] = useState(null);\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null });\n  const inputRef = useRef(null);\n\n  const handleInputChange = (event, leadIndex, fieldName) => {\n    const updatedLeads = [...leads];\n    const fieldParts = fieldName.split(\".\");\n    if (fieldParts.length === 2) {\n      updatedLeads[leadIndex][fieldParts[0]][fieldParts[1]] =\n        event.target.value;\n    } else {\n      updatedLeads[leadIndex][fieldName] = event.target.value;\n    }\n    setLeads(updatedLeads);\n  };\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n  useEffect(() => {\n    const textareas = document.querySelectorAll(\"textarea\");\n    textareas.forEach((textarea) => {\n      adjustTextareaHeight(textarea);\n    });\n  }, [leads]);\n\n  // const handleDropdownClick = (leadIndex) => {\n  //   setDropdownVisible(dropdownVisible === leadIndex ? null : leadIndex);\n  // };\n\n  const handleDropdownItemClick = (leadIndex, status) => {\n    const updatedLeads = [...leads];\n    updatedLeads[leadIndex].status = status;\n    setLeads(updatedLeads);\n    // setDropdownVisible(null); \n  };\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const currentTime = new Date();\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    return clientTime.toLocaleString();\n  };\n\n  const toggleInputVisibility = (row, cell) => {\n    setMenuBox(isMenuBox === row ? null : row);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell }\n    );\n  };\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      if (inputElement && inputContainer) {\n        const rect = inputElement.getBoundingClientRect();\n        inputContainer.style.top = `${\n          rect.top + window.scrollY + rect.height\n        }px`;\n        inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        // inputContainer.style.width = `${rect.width}px`;\n      }\n    }\n  }, [inputVisible]);\n\n  return (\n    <TableList>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            <th className=\"TableHeaderItem\">Agent</th>\n            <th className=\"TableHeaderItem\">Next call</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\" id={`lastName-${index}`}>\n                  {lead.lastName}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"lastName\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"lastName\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`email-${index}`}>\n                  {lead.email}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"email\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"email\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`phone-${index}`}>\n                  {lead.phone}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"phone\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"phone\"\n                    )}`}\n                  />\n                </td>\n                {/* <td\n                  className=\"TableHeaderItem custom-input\"\n                  onClick={() => handleDropdownClick(index)}\n                >\n                  <input\n                    id=\"statistics\"\n                    name=\"statistics\"\n                    className=\"Input\"\n                    type=\"text\"\n                    placeholder=\"Categories\"\n                    value={lead.status}\n                    readOnly\n                  />\n                  <ul\n                    className=\"dropdown\"\n                    style={{\n                      display: dropdownVisible === index ? \"grid\" : \"none\",\n                    }}\n                  >\n                    {statusData.map((statu, item) => (\n                      <li\n                        className=\"ListItem\"\n                        key={item}\n                        value={statu}\n                        onClick={() => handleDropdownItemClick(index, statu)}\n                      >\n                        {statu}\n                      </li>\n                    ))}\n                  </ul>\n                </td> */}\n                <td className=\"TableHeaderItem\" id={`status-${index}`}>\n                  {lead.status}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"status\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"status\"\n                    )}`}\n                  />\n                </td>\n                    \n                   <ul\n                    className=\"dropdown\"\n                    style={{\n                      display: inputVisible.cell === \"status\" ? \"grid\" : \"none\",\n                    }}\n                  >\n                  {inputVisible.row !== null && inputVisible.cell === \"status\" && \n                    statusData.map((statu, item) => (\n                      <li\n                        className=\"ListItem\"\n                        key={item}\n                        value={statu}\n                        onClick={() => handleDropdownItemClick(index, statu)}\n                      >\n                        {statu}\n                      </li>\n                    ))\n                  }\n                  </ul>\n                <td className=\"TableHeaderItem\" id={`resource-${index}`}>\n                  {lead.resource}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"resource\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"resource\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`country-${index}`}>\n                  {lead.country}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"country\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"country\"\n                    )}`}\n                  />\n                </td>\n                <td className=\"TableHeaderItem\" id={`region-${index}`}>\n                  {lead.region}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"region\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"region\"\n                    )}`}\n                  />\n                </td>\n                         <td className=\"TableHeaderItem\" id={`city-${index}`}>\n                  {lead.city}\n                  <ArrowDown\n                    onClick={() => toggleInputVisibility(index, \"city\")}\n                    className={`arrow-svg ${toggleUserMenuDropArrow(\n                      index,\n                      \"city\"\n                    )}`}\n                  />\n                </td>\n\n                <td className=\"TableHeaderItem\">\n                  <select\n                    value={lead.timeZone}\n                    onChange={(e) => handleInputChange(e, index, \"timeZone\")}\n                  >\n                    {timeZoneData.map((time, item) => (\n                      <option key={item} value={time}>\n                        {time}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {calculateClientTime(lead.timeZone)}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.updatedAt.slice(0, 19).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.latestComment.createdAt.slice(0, 19).replace(\"T\", \" \")}\n                </td>\n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: lead.assigned ? \"none\" : \"#ff000082\" }}\n                >\n                  {lead.conAgentId}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  <label>\n                    <input\n                      type=\"datetime-local\"\n                      value={lead.latestComment.nextCall\n                        .toString()\n                        .slice(0, 16)}\n                      onChange={(e) =>\n                        handleInputChange(e, index, \"latestComment.nextCall\")\n                      }\n                      onInput={handleTextareaChange}\n                    />\n                  </label>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {inputVisible.row !== null && inputVisible.cell !== null &&  inputVisible.cell !== \"status\" && (\n        <form className=\"InputContainer\" ref={inputRef}>\n          <input\n            value={leads[inputVisible.row][inputVisible.cell]}\n            onChange={(e) =>\n              handleInputChange(e, inputVisible.row, inputVisible.cell)\n            }\n            onInput={handleTextareaChange}\n          />\n          <button className=\"ButtonSave\" type=\"submit\">\n            Save\n          </button>\n        </form>\n      )}\n    </TableList>\n  );\n}\n","import { StyledMainPage } from \"./Main.styled\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { Table } from \"../../table/table\";\n\n\nexport const Main = () => {\n    const {userOffice} = useUser(); \n    console.log(userOffice);\n\n\n    return(\n        <StyledMainPage>\n            <div className=\"wraper\">\n                <Table/>\n            </div>\n        </StyledMainPage>\n    );\n};","import {Welcome} from \"../components/HomePage/WelcomePage/Welcome\";\nimport { Main } from \"../components/HomePage/MainPage/Main\";\nimport { useAuth } from \"../hooks/useAuth\";\n\n\nconst HomePage = () => {\n    const {isLoggedIn} = useAuth();\n\n    return isLoggedIn ? (\n        <Main/>\n      ) : (\n        <Welcome/>\n    );\n};\n\n\nexport default HomePage"],"names":["styled","section","_templateObject","_taggedTemplateLiteral","WelcomeSectionStyled","_templateObject2","BackGroundWelcome","RegisterSectionStyled","_templateObject3","BackGroundRegister","LoginSectionStyled","_templateObject4","BackGroundLogin","WelcomeSection","_ref2","children","_jsx","RegisterSection","_ref3","LoginSection","_ref4","StyledWelcome","div","p","theme","color","primary_white","primary_green_lite","primary_black","transition","main_transition","props","primary_grey","Welcome","Container","_jsxs","className","NavLink","to","StyledMainPage","background","TableList","Table","leads","setLeads","useState","leadsData","isMenuBox","setMenuBox","inputVisible","setInputVisible","row","cell","inputRef","useRef","handleInputChange","event","leadIndex","fieldName","updatedLeads","fieldParts","split","length","target","value","adjustTextareaHeight","textarea","style","height","concat","scrollHeight","handleTextareaChange","useEffect","document","querySelectorAll","forEach","calculateClientTime","timeZoneOffset","currentTime","Date","getTime","toLocaleString","toggleInputVisibility","toggleUserMenuDropArrow","inputElement","getElementById","inputContainer","current","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","map","lead","index","clientId","name","id","lastName","ArrowDown","onClick","email","phone","status","display","statusData","statu","item","handleDropdownItemClick","resource","country","region","city","timeZone","onChange","e","timeZoneData","time","selfCreated","latestComment","updatedAt","slice","replace","createdAt","assigned","conAgentId","type","nextCall","toString","onInput","_id","ref","Main","userOffice","useUser","console","log","HomePage","isLoggedIn","useAuth"],"sourceRoot":""}