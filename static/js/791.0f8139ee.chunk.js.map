{"version":3,"file":"static/js/791.0f8139ee.chunk.js","mappings":"8IAAIA,E,UACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAAaC,EAAMC,GAC1B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDqB,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAMnB,IAAOA,EAAkB,gBAAoB,IAAK,CAClE4B,GAAI,6BACU,gBAAoB,IAAK,CACvCA,GAAI,eACU,gBAAoB,OAAQ,CAC1CA,GAAI,SACJC,EAAG,6CACHC,iBAAkB,GAClBC,cAAe,QACfC,eAAgB,UACD,gBAAoB,OAAQ,CAC3CJ,GAAI,WACJC,EAAG,qBACHC,iBAAkB,GAClBC,cAAe,QACfC,eAAgB,aAEpB,CACA,MAAMC,EAA0B,aAAiBjB,GAClC,G,wECnCR,MAAMkB,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8qBAKnBC,GAAKA,EAAEC,MAAMC,MAAMC,aAOfH,GAAKA,EAAEC,MAAMC,MAAME,qB,8ECbxC,MAAMC,EAAkBT,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,09FAClBC,GAAMA,EAAEC,MAAMC,MAAME,qBAoCXJ,GAAMA,EAAEC,MAAMC,MAAME,qBAcrBJ,GAAMA,EAAEC,MAAMC,MAAME,qBAiBrCJ,GAAMA,EAAEC,MAAMC,MAAMI,gBAkBPN,GAAKA,EAAEC,MAAMC,MAAMK,cAClBP,GAAKA,EAAEC,MAAMC,MAAMM,cAqBhC1B,GAAUA,EAAMmB,MAAMC,MAAME,qBAenBJ,GAAKA,EAAEC,MAAMC,MAAMK,cACfP,GAAKA,EAAEC,MAAMC,MAAMM,cAgBlCR,GAAKA,EAAEC,MAAMC,MAAMK,cAOlBzB,GAAUA,EAAMmB,MAAMC,MAAMO,gBAClBT,GAAKA,EAAEC,MAAMC,MAAME,qBACnBJ,GAAKA,EAAEC,MAAMC,MAAME,qBAInBJ,GAAKA,EAAEC,MAAMS,WAAWC,kBAIjC7B,GAASA,EAAMmB,MAAMC,MAAMU,eAONhB,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,o7BA2BpBC,GAAKA,EAAEC,MAAMS,WAAWC,kBAIxBX,GAAKA,EAAEC,MAAMS,WAAWC,kBAGzBX,GAAKA,EAAEC,MAAMC,MAAME,qB,2CC/LrC,MAAMU,EAAcpC,IASpB,IATqB,MAC1BqC,EAAK,aACLC,EAAY,SACZC,EAAQ,SACRC,EAAQ,qBACRC,EAAoB,gBACpBC,EAAe,YACfC,EAAW,wBACXC,GACD5C,EACC,MAAM6C,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAGrCC,OAAQC,EACRC,SAAUC,EAAY,gBACtBC,EAAe,kBACfC,EAAiB,cACjBC,IACEC,EAAAA,EAAAA,KACEC,EAAU,aAkEhB,OAAIF,GACKG,EAAAA,EAAAA,KAAA,OAAAC,SAAK,4BAIZC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,CACwB,OAArBtB,EAAayB,KACU,OAAtBzB,EAAa0B,MACS,WAAtB1B,EAAa0B,MACS,aAAtB1B,EAAa0B,OACXH,EAAAA,EAAAA,MAAA,QAAMI,UAAU,iBAAiBvD,IAAK6B,EAASqB,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,SACEO,MAAOnB,EACPoB,SA7EeC,IACzBpB,EAAWoB,EAAMhF,OAAO8E,MAAM,EA6EpBG,QAAS5B,KAEXkB,EAAAA,EAAAA,KAAA,UACEM,UAAU,aACVK,KAAK,SACLC,QAAUC,GA/EDC,EAACD,EAAGE,EAAWC,EAAWC,KAG7C,OAFAJ,EAAEK,iBAEMF,GACN,IAAK,OACH9B,GAASiC,EAAAA,EAAAA,IAAc,CAAEnE,GAAIiE,EAAQG,SAAUhC,KAAYiC,MACxDC,IACC,GAAIA,EAASC,QAAQC,KAAM,CACzB,MAAMC,EAAe,IAAI/C,GACzB+C,EAAaV,GAAa,IACrBU,EAAaV,GAChBW,KAAMtC,GAERP,EAAS4C,GACTpC,EAAW,IACXN,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,KAAMY,OAAQ,MACnD,KAGJ,MAEF,IAAK,SACH/B,GAASyC,EAAAA,EAAAA,IAAgB,CAAE3E,GAAIiE,EAAQW,WAAYxC,KAAYiC,MAC5DC,IACC,GAAIA,EAASC,QAAQC,KAAM,CACzB,MAAMC,EAAe,IAAI/C,GACzB+C,EAAaV,GAAa,IACrBU,EAAaV,GAChBc,OAAQzC,GAEVP,EAAS4C,GACTpC,EAAW,IACXN,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,KAAMY,OAAQ,MACnD,KAGJ,MAEF,IAAK,UACe,YAAdD,GACF9B,GAAS4C,EAAAA,EAAAA,IAAiB,CAAE9E,GAAIiE,EAAQc,YAAa3C,KAAYiC,MAC9DC,IACC,GAAIA,EAASC,QAAQC,KAAM,CACzB,MAAMC,EAAe,IAAI/C,GACzB+C,EAAaV,GAAa,IACrBU,EAAaV,GAChBiB,QAAS5C,GAEXP,EAAS4C,GACTpC,EAAW,IACXN,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,KAAMY,OAAQ,MACnD,KAMV,EAuBYH,CACED,EACAlC,EAAayB,IACbzB,EAAa0B,KACb1B,EAAasC,QAEhBhB,SACF,YAKe,OAArBtB,EAAayB,KACU,OAAtBzB,EAAa0B,MACS,WAAtB1B,EAAa0B,OACXL,EAAAA,EAAAA,KAAA,MAAIM,UAAU,WAAWvD,IAAKiC,EAAYiB,SACtCN,EAkBEI,EAAQkC,MAAM,IAAIC,KAAI,CAACC,EAAMC,KAC3BpC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,WAAUL,SACrBkC,GAD2BC,KAlBhC5C,EAAY0C,KAAI,CAAC3C,EAAQ6C,KACvBpC,EAAAA,EAAAA,KAAA,MACEM,UAAU,WAEVC,MAAOhB,EACPqB,QAASA,IACP3B,EACEN,EAAayB,IACbb,EACA,SACAZ,EAAasC,QAEhBhB,SAEAV,GAXI6C,OAsBG,OAArBzD,EAAayB,KAAsC,aAAtBzB,EAAa0B,OACzCL,EAAAA,EAAAA,KAAA,MAAIM,UAAU,WAAWvD,IAAKiC,EAAYiB,SACtCL,EAkBEG,EAAQkC,MAAM,IAAIC,KAAI,CAACC,EAAMC,KAC3BpC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,WAAUL,SACrBkC,GAD2BC,KAlBhC1C,EAAawC,KAAI,CAACG,EAAMD,KACtBpC,EAAAA,EAAAA,KAAA,MACEM,UAAU,WAEVC,MAAO8B,EACPzB,QAASA,IACP3B,EACEN,EAAayB,IACbiC,EACA,WACA1D,EAAasC,QAEhBhB,SAEAoC,GAXID,SAqBhB,EClLME,EAAWjG,IAAe,IAAd,KAAEkG,GAAMlG,EAC/B,MAAOmG,EAASC,IAAcnD,EAAAA,EAAAA,UAAS,IACjCJ,GAAWC,EAAAA,EAAAA,OAGjBuD,EAAAA,EAAAA,YAAU,KACJH,EAAKI,UACPF,EAAWF,EAAKI,SAASC,WAAWC,MAAM,EAAG,IAE/C,GACC,CAACN,EAAKI,WAcT,OACE3C,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,UAC7BD,EAAAA,EAAAA,KAAA,SAAAC,UACED,EAAAA,EAAAA,KAAA,SACEW,KAAK,iBACLJ,MAAOiC,EACPhC,SAjBmBC,IACzB,MAAMqC,EAAcrC,EAAMhF,OAAO8E,MACjCrB,GAAS6D,EAAAA,EAAAA,IAAc,CAAE/F,GAAIuF,EAAKS,IAAKC,aAAcH,KAClDzB,MAAMC,IACDA,EAASC,QAAQoB,UACnBF,EAAWK,EACb,GACA,OAaC,ECvCII,EAAW7G,IAAgF,IAA/E,KAACkG,EAAI,UAAEY,EAAS,sBAAEC,EAAqB,MAAEC,EAAK,wBAAEC,GAAyBjH,EAGhG,OACE6D,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAkBtD,GAAE,YAAAuG,OAAcF,GAAQpD,SAAA,CACrDsC,EAAK9C,UACNO,EAAAA,EAAAA,KAACmD,EAAS,CACRvC,QAASA,IAAMwC,EAAsBC,EAAO,WAAYd,EAAKS,KAC7D1C,UAAS,aAAAiD,OAAeD,EACtBD,EACA,iBAGD,ECbIG,EAAOnH,IAAiF,IAAhF,MAAEgH,EAAK,KAAEd,EAAI,UAAEY,EAAS,sBAAEC,EAAqB,wBAAEE,GAAyBjH,EAE7F,OACE6D,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAkBtD,GAAE,QAAAuG,OAAUF,GAAQpD,SAAA,CACjDsC,EAAKb,MACN1B,EAAAA,EAAAA,KAACmD,EAAS,CACRvC,QAASA,IAAMwC,EAAsBC,EAAO,OAAQd,EAAKS,KACzD1C,UAAS,aAAAiD,OAAeD,EACtBD,EACA,aAGD,ECXII,EAASpH,IAAiF,IAAhF,MAAEgH,EAAK,KAAEd,EAAI,UAAEY,EAAS,sBAAEC,EAAqB,wBAAEE,GAAyBjH,EAG/F,OACE6D,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAkBtD,GAAE,UAAAuG,OAAYF,GAAQpD,SAAA,CACnDsC,EAAKV,QACN7B,EAAAA,EAAAA,KAACmD,EAAS,CACRvC,QAASA,IAAMwC,EAAsBC,EAAO,SAAUd,EAAKS,KAC3D1C,UAAS,aAAAiD,OAAeD,EACtBD,EACA,eAGD,ECbIK,EAAUrH,IAAiF,IAAhF,MAAEgH,EAAK,KAAEd,EAAI,UAAEY,EAAS,sBAAEC,EAAqB,wBAAEE,GAAyBjH,EAEhG,OACE6D,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAkBtD,GAAE,WAAAuG,OAAaF,GAAQpD,SAAA,CACpDsC,EAAKP,SACNhC,EAAAA,EAAAA,KAACmD,EAAS,CACRvC,QAASA,IAAMwC,EAAsBC,EAAO,UAAWd,EAAKS,KAC5D1C,UAAS,aAAAiD,OAAeD,EACtBD,EACA,gBAGD,ECZIM,EAAStH,IAAgF,IAA/E,MAAEgH,EAAK,KAAEd,EAAI,UAAEY,EAAS,sBAAEC,EAAqB,wBAAEE,GAAwBjH,EAG9F,OAWM6D,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAkBtD,GAAE,UAAAuG,OAAYF,GAAQpD,SAAA,CACvDsC,EAAKhD,QACNS,EAAAA,EAAAA,KAACmD,EAAS,CACRvC,QAASA,IAAMwC,EAAsBC,EAAO,SAAUd,EAAKS,KAC3D1C,UAAS,aAAAiD,OAAeD,EACtBD,EACA,eAGD,ECtBIO,EAAavH,IAAe,IAAd,KAAEkG,GAAMlG,EACjC,MAAOwH,EAAaC,IAAkBxE,EAAAA,EAAAA,UAAS,IAAIyE,OAEnDrB,EAAAA,EAAAA,YAAU,KACR,MAAMsB,EAAaC,aAAY,KAC7BH,EAAe,IAAIC,KAAO,GACzB,KAEH,MAAO,IAAMG,cAAcF,EAAW,GACrC,IAiBH,OACEhE,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAkB6D,MAAO,CAAEC,SAAU,OAAQC,SAAU,SAASpE,UAhBnDqE,EAiBJ/B,EAAK9C,SAhBT,IAAIsE,KACrBF,EAAYU,UAA6B,GAAjBD,EAAsB,GAAK,KAGnCE,eAAe,QAAS,CACxCC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,YAAQC,OAXiBT,KAkBtB,E,4CCtBF,MAAMU,EAA2B3I,IAAiD,IAAhD,mCAAC4I,EAAkC,KAAE1C,GAAKlG,EAC/E,MAAM6C,GAAWC,EAAAA,EAAAA,MAQjB,OACIa,EAAAA,EAAAA,KAACkF,EAAAA,GAAoB,CAAAjF,UACjBC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBL,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SACIM,UAAU,WACVK,KAAK,WACLa,KAAK,uBACLxE,GAAIuF,EAAKS,IACTmC,QAASF,EAAmCG,SAAS7C,EAAKS,KAC1DxC,SAAUA,KAAM6E,OAdFrC,EAcuBT,EAAKS,SAbtD9D,GAASoG,EAAAA,EAAAA,IAA+B,CAACtC,SADfA,KAciC,KAEnD9C,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBL,SAAA,EAC5BD,EAAAA,EAAAA,KAACuF,EAAAA,EAAY,CAACjF,UAAU,yBAAyB5D,MAAM,KAAKC,OAAO,QACnEqD,EAAAA,EAAAA,KAACwF,EAAAA,EAAW,CAAClF,UAAU,wBAAwB5D,MAAM,KAAKC,OAAO,cAGtD,ECLlB8I,EAAaA,KACxB,MAAM,QACJC,EAAO,mCACPT,EAAkC,WAClCU,IACE7F,EAAAA,EAAAA,MACE,WACJ8F,EAAU,SACVC,EAAQ,QACRC,EAAO,aACPC,EAAY,UACZC,EAAS,WACTC,IACEC,EAAAA,EAAAA,MACE,UAAEC,EAAS,mBAAEC,IAAuBC,EAAAA,EAAAA,MACnC3H,EAAOG,IAAYS,EAAAA,EAAAA,YAEpBJ,GAAWC,EAAAA,EAAAA,OAGjBuD,EAAAA,EAAAA,YAAU,MACJyD,GAAaT,IACf7G,EAASuH,EAAqBD,EAAYT,EAC5C,GACC,CAACA,EAASU,EAAoBD,IAEjC,MAAM,aACJxH,EAAY,SACZC,EAAQ,YACRI,EAAW,gBACXD,EAAe,qBACfD,EAAoB,wBACpBwE,EAAuB,sBACvBF,GCxDwBkD,MAC1B,MAAOC,EAAWC,IAAclH,EAAAA,EAAAA,WAAS,IAClCX,EAAcI,IAAmBO,EAAAA,EAAAA,UAAS,CAAEc,IAAK,KAAMC,KAAM,KAAMY,OAAQ,QAC3EoC,EAAOoD,IAAYnH,EAAAA,EAAAA,YACpBV,GAAW8H,EAAAA,EAAAA,QAAO,MAClB1H,GAAc0H,EAAAA,EAAAA,QAAO,MACrBxH,GAAWC,EAAAA,EAAAA,OAET,QACNuG,IACI5F,EAAAA,EAAAA,MA4CN4C,EAAAA,EAAAA,YAAU,KACR,GAAyB,OAArB/D,EAAayB,KAAsC,OAAtBzB,EAAa0B,KAAe,CAC3D,MAAMsG,EAAeC,SAASC,eAAe,GAADtD,OACvC5E,EAAa0B,KAAI,KAAAkD,OAAI5E,EAAayB,MAEjC0G,EAAiBlI,EAASmI,QAC1BC,EAAoBhI,EAAY+H,QACtC,GAAIJ,IAAiBG,GAAkBE,GAAoB,CACzD,MAAMC,EAAON,EAAaO,wBACpBJ,IACJA,EAAe3C,MAAMgD,IAAG,GAAA5D,OACtB0D,EAAKE,IAAMC,OAAOC,QAAUJ,EAAKtK,OAAM,MAEzCmK,EAAe3C,MAAMmD,KAAI,GAAA/D,OAAM0D,EAAKK,KAAOF,OAAOG,QAAO,OAEvDP,IACFA,EAAkB7C,MAAMgD,IAAG,GAAA5D,OACzB0D,EAAKE,IAAMC,OAAOC,QAAUJ,EAAKtK,OAAM,MAEzCqK,EAAkB7C,MAAMmD,KAAI,GAAA/D,OAAM0D,EAAKK,KAAOF,OAAOG,QAAO,OAG1DP,GAA2C,WAAtBrI,EAAa0B,OACpC2G,EAAkB7C,MAAMqD,QAAU,OAClCR,EAAkB7C,MAAMgD,IAAG,GAAA5D,OAC1BmC,EAAQA,EAAQ9J,OAAS,GAAGoH,MAAQK,EAAO4D,EAAKE,IAAyC,GAAnCnI,EAAY+H,QAAQU,aAAqBR,EAAKE,IAAyC,KAAnCnI,EAAY+H,QAAQU,aAAmB,MAElJT,EAAkB7C,MAAMmD,KAAI,GAAA/D,OAAM0D,EAAKS,MAAQN,OAAOG,QAAO,OAE3DP,GAA2C,aAAtBrI,EAAa0B,OACpC2G,EAAkB7C,MAAMqD,QAAU,OAClCR,EAAkB7C,MAAMmD,KAAI,GAAA/D,QACzB0D,EAAKS,MAAQN,OAAOG,SAAW,MAAK,MAG3C,CACF,IACC,CAAC5I,EAAc+G,EAASrC,IAG3B,MAAMsE,GAAiBC,EAAAA,EAAAA,cAAanH,IAChB,WAAdA,EAAM3E,MACR0K,GAAW,GACXzH,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,OACrC,GACA,IAGIwH,GAAwBD,EAAAA,EAAAA,cAAanH,IAEzC,IADeA,EAAMhF,OAEXqM,UAAUC,SAAS,qBACzBnJ,EAASmI,UAAYnI,EAASmI,QAAQgB,SAAStH,EAAMhF,SACpDuD,EAAY+H,UAAY/H,EAAY+H,QAAQgB,SAAStH,EAAMhF,SAI9D,OAFA+K,GAAW,QACXzH,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,MAErC,GACC,IAcH,OAXAqC,EAAAA,EAAAA,YAAU,KACRkE,SAASoB,iBAAiB,UAAWL,GACrCf,SAASoB,iBAAiB,QAASH,GAE5B,KACLjB,SAASqB,oBAAoB,UAAWN,GACxCf,SAASqB,oBAAoB,QAASJ,EAAsB,IAE7D,CAACA,EAAuBF,IAGpB,CACLhJ,eACAC,WACA2H,YACAvH,cACAD,kBACAyH,aACA1H,qBAlH4B2B,IANAyH,SAOPzH,EAAMhF,QANlB0I,MAAMxH,OAAS,OACxBuL,EAAS/D,MAAMxH,OAAM,GAAA4G,OAAM2E,EAASC,aAAY,KAKd,EAkHlC7E,wBAxF8BA,CAAClD,EAAKC,IAC7B1B,EAAayB,MAAQA,GAAOzB,EAAa0B,OAASA,EACrD,kBACA,GAsFJ+C,sBA/G4BA,CAAChD,EAAKC,EAAMY,KAExC,OADAwF,EAASxF,GACDZ,GACN,IAAK,SACHnB,GAASkJ,EAAAA,EAAAA,OACT,MACC,IAAK,WACNlJ,GAASmJ,EAAAA,EAAAA,OAKT7B,GAAyB,IAAdD,GAAsBnG,GACrCrB,EACEJ,EAAayB,MAAQA,GAAOzB,EAAa0B,OAASA,EAC9C,CAAED,IAAK,KAAMC,KAAM,MACnB,CAAED,MAAKC,OAAMY,UAClB,EA+FF,EDhFGqF,GAoCJ,OACEpG,EAAAA,EAAAA,MAAClC,EAAe,CAAAiC,SAAA,EACdC,EAAAA,EAAAA,MAAA,SAAOI,UAAU,QAAOL,SAAA,EACtBD,EAAAA,EAAAA,KAAA,SAAOM,UAAU,cAAaL,UAC5BC,EAAAA,EAAAA,MAAA,MAAII,UAAU,kBAAiBL,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,eAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,UAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,eAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,WAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,WAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,YAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,YAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,aAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,YAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,UAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,eAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,iBAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,kBAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,iBAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,eAClB,qBAAb4F,IAAmC7F,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,4BACtD,uBAAb4F,GACc,qBAAbA,IAAmC7F,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,+BACrED,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,eAChCD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,YAChB,SAAf2F,IACC5F,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAC,gBAItCD,EAAAA,EAAAA,KAAA,SAAAC,SACGvB,GACCA,EAAMwD,KAAI,CAACK,EAAMc,KACfnD,EAAAA,EAAAA,MAAA,MAAII,UAAU,WAAUL,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAK+F,YACtCtI,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAKf,QACtCxB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAKgG,YACtCvI,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAKiG,SACtCxI,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAKkG,SACtCzI,EAAAA,EAAAA,KAAC2D,EAAM,CACLN,MAAOA,EACPd,KAAMA,EACNY,UAAWA,EAAAA,EACXC,sBAAuBA,EACvBE,wBAAyBA,KAE3BtD,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAAEsC,EAAKmG,YACtC1I,EAAAA,EAAAA,KAAC0D,EAAO,CACNL,MAAOA,EACPd,KAAMA,EACNY,UAAWA,EAAAA,EACXC,sBAAuBA,EACvBE,wBAAyBA,KAE3BtD,EAAAA,EAAAA,KAACyD,EAAM,CACLJ,MAAOA,EACPd,KAAMA,EACNY,UAAWA,EAAAA,EACXC,sBAAuBA,EACvBE,wBAAyBA,KAE3BtD,EAAAA,EAAAA,KAACwD,EAAI,CACHH,MAAOA,EACPd,KAAMA,EACNY,UAAWA,EAAAA,EACXC,sBAAuBA,EACvBE,wBAAyBA,KAE3BtD,EAAAA,EAAAA,KAACkD,EAAQ,CACPX,KAAMA,EACNY,UAAWA,EAAAA,EACXC,sBAAuBA,EACvBC,MAAOA,EACPC,wBAAyBA,KAE3BtD,EAAAA,EAAAA,KAAC4D,EAAU,CAACrB,KAAMA,KAClBvC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAC5BsC,EAAKoG,YAAc,MAAQ,QAE9B3I,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAC5BsC,EAAKqG,WACJrG,EAAKqG,UAAU/F,MAAM,EAAG,IAAIgG,QAAQ,IAAK,QAE7C7I,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,SAC5BsC,EAAKuG,WACJvG,EAAKuG,UAAUjG,MAAM,EAAG,IAAIgG,QAAQ,IAAK,OAE/B,qBAAbhD,IACD7F,EAAAA,EAAAA,KAAA,MACEM,UAAU,kBACV6D,MAAO,CAAErG,WAAayE,EAAKwG,QAAwB,GAAd,aAAmB9I,SAEtDsC,EAAKwG,QAGLxG,EAAKwG,QAAQC,SAFb,iBAKU,uBAAbnD,GAAkD,qBAAbA,IAAmC7F,EAAAA,EAAAA,KAAA,MACvEM,UAAU,kBACV6D,MAAO,CAAErG,WAAayE,EAAK0G,UAA0B,GAAd,aAAmBhJ,SAExDsC,EAAK0G,UAGL1G,EAAK0G,UAAUD,SAFf,kBAKJhJ,EAAAA,EAAAA,KAACsC,EAAQ,CAACC,KAAMA,KACEvC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,UAC7CD,EAAAA,EAAAA,KAAA,UAAQM,UAAU,YAAYK,KAAK,SACjCC,QAASA,KAAMsI,OA7HHlG,EA6H0BT,EAAKS,IAAKT,EAAK4G,OA5HvEjK,GAASkK,EAAAA,EAAAA,OACTlK,GAASmK,EAAAA,EAAAA,IAAwB,gBAC9BpD,GAAcH,EACf5G,GAASoK,EAAAA,EAAAA,IAAY,CACnBrI,OAAQ+B,EACRmG,OAAQxD,KAEFM,IAAeF,GAAgBC,IACvC9G,GAASoK,EAAAA,EAAAA,IAAY,CAACrI,OAAQ+B,MATFA,KA6HiD,EAAA/C,SAC9D,WAGW,SAAf2F,IACC5F,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kBAAiBL,UAC7BD,EAAAA,EAAAA,KAACgF,EAAwB,CACvBzC,KAAMA,EACN0C,mCACEA,QAvFoB1C,EAAKS,aAgG3ChD,EAAAA,EAAAA,KAACvB,EAAW,CACVC,MAAOA,EACPC,aAAcA,EACdC,SAAUA,EACVC,SAAUA,EACVC,qBAAsBA,EACtBC,gBAAiBA,EACdC,YAAaA,EAChBC,wBA3K0BA,CAAC8B,EAAWxB,EAAQiC,EAAMP,KACxD,MAAMQ,EAAe,IAAI/C,GACZ,aAAT8C,GACFtC,GAASqK,EAAAA,EAAAA,IAAc,CAAEvM,GAAIiE,EAAQuI,aAAcjK,KACnDkC,EAAaV,GAAa,IACrBU,EAAaV,GAChBtB,SAAUF,IAEM,WAATiC,IACTtC,GAASuK,EAAAA,EAAAA,IAAY,CAAEzM,GAAIiE,EAAQyI,WAAYnK,KAC/CkC,EAAaV,GAAa,IACrBU,EAAaV,GAChBxB,OAAQA,IAGZV,EAAS4C,GACT1C,EAAgB,CAAEqB,IAAK,KAAMC,KAAM,MAAO,MAuKxB,E,iCExOf,MAAMsJ,EAAcA,KACvB,MAAM,QAAE7D,IAAYI,EAAAA,EAAAA,MACd,cAAE0D,EAAa,WAAEjE,IAAe7F,EAAAA,EAAAA,MAChC,cAAE+J,IAAkBC,EAAAA,EAAAA,MACpB,wBAAEC,EAAuB,mBAAE3D,IAAuBC,EAAAA,EAAAA,KAClDnH,GAAWC,EAAAA,EAAAA,MACjB6K,QAAQC,IAAI,oBAAqBF,GAajC,OACI/J,EAAAA,EAAAA,KAAC1C,EAAiB,CAAA2C,UACdC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQL,SAAA,CAClB6F,IACG9F,EAAAA,EAAAA,KAACkK,EAAAA,GAAO,CAACC,GAAG,IAAIvJ,QAdLwJ,KACnBzE,GACAzG,GAASmL,EAAAA,EAAAA,OAETjE,GACAlH,GAASoL,EAAAA,EAAAA,MACb,EAQwDrK,UACxCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YAGZC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oBAAmBL,SAAA,CAC5B2J,IAAkBC,GAChB7J,EAAAA,EAAAA,KAACuK,EAAAA,GAAc,KAEfvK,EAAAA,EAAAA,KAACyF,EAAU,KAEfzF,EAAAA,EAAAA,KAACwK,EAAAA,EAAU,WAGH,E,MCjDrB,MAAMC,EAAkBlN,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oqDAKjBC,GAAKA,EAAEC,MAAMC,MAAMC,aAOfH,GAAKA,EAAEC,MAAMC,MAAME,qBA0B9BJ,GAAKA,EAAEC,MAAMC,MAAMI,gBACVN,GAAKA,EAAEC,MAAMS,WAAWC,kBAK5BX,GAAKA,EAAEC,MAAMC,MAAMI,gBAIpBN,GAAKA,EAAEC,MAAMC,MAAME,qBAGlBJ,GAAKA,EAAEC,MAAMC,MAAME,qBASfJ,GAAKA,EAAEC,MAAMS,WAAWC,kBAO5BX,GAAKA,EAAEC,MAAMC,MAAMI,gBAIpBN,GAAKA,EAAEC,MAAMC,MAAME,qBAGlBJ,GAAKA,EAAEC,MAAMC,MAAME,qB,cCjElC,MAAM2M,EAAYA,KACrB,MAAM,SAAEC,EAAQ,uBAAEC,EAAsB,mBAAEC,IAAuBxE,EAAAA,EAAAA,KAC3DnH,GAAWC,EAAAA,EAAAA,MAajB,OACIa,EAAAA,EAAAA,KAACyK,EAAe,CAAAxK,UACZC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQL,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWL,SAAA,EACtBC,EAAAA,EAAAA,MAAA,UAAQS,KAAK,SACTL,UAAU,eACVM,QAhBEkK,KAClB5L,GAAS6L,EAAAA,EAAAA,MAAsB,EAeQ9K,SAAA,EAEvBD,EAAAA,EAAAA,KAACgL,EAAAA,EAAQ,CAAC1K,UAAU,QAAO,+BAG/BJ,EAAAA,EAAAA,MAACgK,EAAAA,GAAO,CAAC5J,UAAU,OAAO6J,GAAG,SAASvJ,QAjBlCqK,KAChB/L,GAASoL,EAAAA,EAAAA,MAA0B,EAgBoCrK,SAAA,CAAC,iBAExDD,EAAAA,EAAAA,KAACgL,EAAAA,EAAQ,CAAC1K,UAAU,eAG5BJ,EAAAA,EAAAA,MAAA,MAAII,UAAU,SAAQL,SAAA,CAAE0K,EAAS,QAAMC,EAAuB,oBAC7DC,GACG7K,EAAAA,EAAAA,KAACuK,EAAAA,GAAc,KAEfvK,EAAAA,EAAAA,KAACyF,EAAU,QAGL,E,cCxC1B,MA0BA,EA1BwByF,KACpB,MAAMhM,GAAWC,EAAAA,EAAAA,OACX,mBAAEiH,IAAuBC,EAAAA,EAAAA,MACzB,QAAEP,EAAO,kBAAEqF,IAAqBjF,EAAAA,EAAAA,KAWtC,OARAxD,EAAAA,EAAAA,YAAU,KACDyI,GAAsB/E,GAAuBN,GAC9C5G,GAASkM,EAAAA,EAAAA,MACb,GACF,CAAClM,EAAUiM,EAAmBrF,EAASM,KAKrCpG,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAF,SACKmG,GACGpG,EAAAA,EAAAA,KAAC0K,EAAS,KAEV1K,EAAAA,EAAAA,KAAC2J,EAAW,KAEjB,C","sources":["images/svg-icons/arrow-left.svg","components/OfficeLeads/OfficeLeads.styled.js","components/table/tableLeads/tableLeads.styled.js","components/table/tableComponents/inputWindow.jsx","components/table/tableComponents/nextCall.jsx","components/table/tableComponents/timeZone.jsx","components/table/tableComponents/city.jsx","components/table/tableComponents/region.jsx","components/table/tableComponents/country.jsx","components/table/tableComponents/status.jsx","components/table/tableComponents/clientTime.jsx","components/table/tableLeads/CustomAssignLeadCheckbox.jsx","components/table/tableLeads/tableLeads.jsx","components/table/tableHook.jsx/tableHook.jsx","components/OfficeLeads/OfficeLeads.jsx","components/OfficeLeads/UserLeads.styled.js","components/OfficeLeads/UserLeads.jsx","pages/OfficeLeads.jsx"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\n\nexport const StyledOfficeLeads = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    .content-container{\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex-grow: 1;\n    }\n`","import styled from \"styled-components\";\n\nexport const TableListStyled = styled.div`\n  border: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  border-radius: 0.625rem;\n  width: 100%;\n  margin-top: 2rem;\n\n  .Table {\n    table-layout: auto;\n    width: 100%;\n    border-collapse: collapse;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .TableHeader {\n    background: #223f53;\n  }\n\n  .TableHeaderList th {\n    padding: 1rem 0.25rem 1rem 0.25rem;\n  }\n\n  td[id^=\"status-\"],\n  td[id^=\"timeZone-\"],\n  td[id^=\"country-\"],\n  td[id^=\"region-\"],\n  td[id^=\"city-\"] {\n    max-width: 70px;\n    max-height: 50px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    position: relative;\n  }\n\n  .TableHeaderItem {\n    padding:0.5rem 0.25rem;\n    border-bottom: 1px solid ${(p) => p.theme.color.primary_green_lite};\n    text-align: left;\n    font-weight: 500;\n    font-size: 0.5rem;\n    overflow-wrap: break-word;\n    text-align: center;\n    position: relative;\n\n    @media only screen and (min-width: 1800px) {\n      white-space: nowrap;\n    }\n  }\n\n  .TableHeaderItem:not(:last-child) {\n    border-right: 1px solid ${(p) => p.theme.color.primary_green_lite};\n  }\n\n  .WordList textarea,\n  select,\n  input {\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border: none;\n    background: none;\n    resize: none;\n    overflow: hidden;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    color: ${(p) => p.theme.color.primary_white};\n    position: relative;\n\n    &:focus {\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  .dropdown {\n    width: 10rem;\n    z-index: 1000;\n    position: absolute;\n    font-size: 0.75rem;\n    gap: 0.5rem;\n    border-radius: 1rem;\n    padding: 0.75rem 0.5rem;\n    box-shadow: 0 0.25rem 3rem 0 rgba(18, 20, 23, 0.08);\n       background-color: ${p => p.theme.color.background2};\n    border: 0.25rem solid ${p => p.theme.color.background3};\n    color: black;\n    overflow: hidden;\n     overflow-x: auto; \n  }\n\n\n  .ListItem {\n    cursor: pointer;\n    color: #E3FFA8;\n\n    &:hover {\n      color: #a2a59e;\n    }\n  }\n\n\n  .arrow-svg {\n    cursor: pointer;\n    width: 0.875rem;\n    height: 0.875rem;\n    stroke: ${(props) => props.theme.color.primary_green_lite};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    position: absolute;\n    left: 5px;\n    bottom: 0px;\n  }\n\n  .arrow-svg-close {\n     cursor: pointer;\n    transform: rotate(180deg);\n  }\n\n  .InputContainer {\n    display: flex;\n    position: absolute;\n    background-color: ${p => p.theme.color.background2};\n    border: 0.25rem solid ${p => p.theme.color.background3};\n    border-radius: 10px;\n    padding: 10px;\n    z-index: 9999;\n    width: max-content;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .InputContainer input {\n    color: white;\n  }\n\n  .ButtonSave {\n    cursor: pointer;\n    border-radius: 5px;\n    background: #E3FFA8;\n    color: ${p => p.theme.color.background2};\n    border: none;\n  }\n\n    .check-btn{\n    font-size: 0.5rem;\n    /* width: 70%; */\n    color: ${(props) => props.theme.color.primary_black};\n    background-color: ${p => p.theme.color.primary_green_lite};\n    border: 1px solid ${p => p.theme.color.primary_green_lite};\n    padding: 0.25rem 0.25rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    transition: color ${p => p.theme.transition.main_transition};\n    flex-wrap: nowrap;\n\n    &:hover{\n      color: ${props => props.theme.color.primary_grey};\n    }\n  }\n\n`;\n\n\nexport const CustomCheckboxStyled = styled.div`\n\n  .custom-checkbox{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .checkbox {\n    margin-top: 5px;\n    width: 16px;\n    height: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n  }\n  \n  .custom-checkbox-before, .custom-checkbox-after{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n  }\n  .custom-checkbox-before{\n    opacity: 1;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .custom-checkbox-after{\n    opacity: 0;\n    transition: opacity ${p => p.theme.transition.main_transition};\n  }\n  .checkbox:focus + .custom-checkbox > .custom-checkbox-before{\n    outline: 3px solid ${p => p.theme.color.primary_green_lite};\n    border-radius: 2px;\n    outline-offset: -3px; \n  }\n\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-after{\n    opacity: 1;\n  }\n  .checkbox:checked + .custom-checkbox > .custom-checkbox-before{\n    opacity: 0;\n  }\n\n`","import { useDispatch } from \"react-redux\";\nimport {\n  patchCityLead,\n  patchCountryLead,\n  patchRegionLead,\n} from \"../../../redux/Lead/lead-operation\";\nimport { useState } from \"react\";\nimport { useLead } from \"../../../hooks/useLead\";\n\nexport const InputWindow = ({\n  leads,\n  inputVisible,\n  inputRef,\n  setLeads,\n  handleTextareaChange,\n  setInputVisible,\n  dropdownRef,\n  handleDropdownItemClick,\n}) => {\n  const dispatch = useDispatch();\n  const [newText, setNewText] = useState(\"\");\n\n    const {\n    status: tstatusData,\n    timeZone: timeZoneData,\n    isStatusLoading,\n    isTimeZoneLoading,\n    isStatusError,\n  } = useLead();\n  const loading = \"Loading...\";\n\n  const handleInputChange = (event) => {\n    setNewText(event.target.value);\n  };\n\n  const handleSubmit = (e, leadIndex, fieldName, leadId) => {\n    e.preventDefault();\n\n    switch (fieldName) {\n      case \"city\":\n        dispatch(patchCityLead({ id: leadId, leadCity: newText })).then(\n          (response) => {\n            if (response.payload.name) {\n              const updatedLeads = [...leads];\n              updatedLeads[leadIndex] = {\n                ...updatedLeads[leadIndex],\n                city: newText,\n              };\n              setLeads(updatedLeads);\n              setNewText(\"\");\n              setInputVisible({ row: null, cell: null, leadId: null });\n            }\n          }\n        );\n        break;\n\n      case \"region\":\n        dispatch(patchRegionLead({ id: leadId, leadRegion: newText })).then(\n          (response) => {\n            if (response.payload.name) {\n              const updatedLeads = [...leads];\n              updatedLeads[leadIndex] = {\n                ...updatedLeads[leadIndex],\n                region: newText,\n              };\n              setLeads(updatedLeads);\n              setNewText(\"\");\n              setInputVisible({ row: null, cell: null, leadId: null });\n            }\n          }\n        );\n        break;\n\n      case \"country\":\n        if (fieldName === \"country\") {\n          dispatch(patchCountryLead({ id: leadId, leadCountry: newText })).then(\n            (response) => {\n              if (response.payload.name) {\n                const updatedLeads = [...leads];\n                updatedLeads[leadIndex] = {\n                  ...updatedLeads[leadIndex],\n                  country: newText,\n                };\n                setLeads(updatedLeads);\n                setNewText(\"\");\n                setInputVisible({ row: null, cell: null, leadId: null });\n              }\n            }\n          );\n        }\n        break;\n      default:\n    }\n  };\n\n  if (isStatusError) {\n    return <div>Oooops something wrong</div>;\n  }\n\n  return (\n    <>\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell !== \"status\" &&\n        inputVisible.cell !== \"timeZone\" && (\n          <form className=\"InputContainer\" ref={inputRef}>\n            <input\n              value={newText}\n              onChange={handleInputChange}\n              onInput={handleTextareaChange}\n            />\n            <button\n              className=\"ButtonSave\"\n              type=\"submit\"\n              onClick={(e) =>\n                handleSubmit(\n                  e,\n                  inputVisible.row,\n                  inputVisible.cell,\n                  inputVisible.leadId\n                )\n              }\n            >\n              Save\n            </button>\n          </form>\n        )}\n      {inputVisible.row !== null &&\n        inputVisible.cell !== null &&\n        inputVisible.cell === \"status\" && (\n          <ul className=\"dropdown\" ref={dropdownRef}>\n            {!isStatusLoading\n              ? tstatusData.map((status, item) => (\n                  <li\n                    className=\"ListItem\"\n                    key={item}\n                    value={status}\n                    onClick={() =>\n                      handleDropdownItemClick(\n                        inputVisible.row,\n                        status,\n                        \"status\",\n                        inputVisible.leadId\n                      )\n                    }\n                  >\n                    {status}\n                  </li>\n                ))\n              : loading.split(\"\").map((load, item) => (\n                  <li className=\"ListItem\" key={item}>\n                    {load}\n                  </li>\n                ))}\n          </ul>\n        )}\n\n      {inputVisible.row !== null && inputVisible.cell === \"timeZone\" && (\n        <ul className=\"dropdown\" ref={dropdownRef}>\n          {!isTimeZoneLoading\n            ? timeZoneData.map((zona, item) => (\n                <li\n                  className=\"ListItem\"\n                  key={item}\n                  value={zona}\n                  onClick={() =>\n                    handleDropdownItemClick(\n                      inputVisible.row,\n                      zona,\n                      \"timeZone\",\n                      inputVisible.leadId\n                    )\n                  }\n                >\n                  {zona}\n                </li>\n              ))\n            : loading.split(\"\").map((load, item) => (\n                <li className=\"ListItem\" key={item}>\n                  {load}\n                </li>\n              ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { patchNextCall } from \"../../../redux/Lead/lead-operation\";\n\n\n\nexport const NextCall = ({ lead }) => {\n  const [newDate, setNewDate] = useState(\"\");\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    if (lead.nextCall) {\n      setNewDate(lead.nextCall.toString().slice(0, 16));\n\n    }\n  }, [lead.nextCall]);\n  \n\n  const handleInputChange = (event) => {\n    const updatedDate = event.target.value;\n    dispatch(patchNextCall({ id: lead._id, leadNextcall: updatedDate }))\n      .then((response) => {\n        if (response.payload.nextCall) {\n          setNewDate(updatedDate);\n        }\n      })\n  };\n\n\n  return (\n    <td className=\"TableHeaderItem\">\n      <label>\n        <input\n          type=\"datetime-local\"\n          value={newDate}\n          onChange={handleInputChange}\n        />\n      </label>\n    </td>\n  );\n};\n\n","export const TimeZone = ({lead, ArrowDown, toggleInputVisibility, index, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`timeZone-${index}`}>\n      {lead.timeZone}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"timeZone\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"timeZone\"\n        )}`}\n      />\n    </td>\n  );\n};\n","export const City = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n  return (\n    <td className=\"TableHeaderItem\" id={`city-${index}`}>\n      {lead.city}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"city\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"city\"\n        )}`}\n      />\n    </td>\n  );\n};\n\n\n\n\n\n\n\n\n","\nexport const Region = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n\n\n  return (\n    <td className=\"TableHeaderItem\" id={`region-${index}`}>\n      {lead.region}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"region\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"region\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Country = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow }) => {\n  \n  return (\n    <td className=\"TableHeaderItem\" id={`country-${index}`}>\n      {lead.country}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"country\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"country\"\n        )}`}\n      />\n    </td>\n  );\n};\n","\nexport const Status = ({ index, lead, ArrowDown, toggleInputVisibility, toggleUserMenuDropArrow}) => {\n  \n  \n  return (\n    // <td className=\"TableHeaderItem\" id={`status-${index}`}>\n    //   {lead.status}\n    //   <ArrowDown\n    //     onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n    //     className={`arrow-svg ${toggleUserMenuDropArrow(\n    //       index,\n    //       \"status\"\n    //     )}`}\n    //   />\n    // </td>\n        <td className=\"TableHeaderItem\" id={`status-${index}`}>\n      {lead.status}\n      <ArrowDown\n        onClick={() => toggleInputVisibility(index, \"status\", lead._id)}\n        className={`arrow-svg ${toggleUserMenuDropArrow(\n          index,\n          \"status\"\n        )}`}\n      />\n    </td>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const ClientTime = ({ lead }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const calculateClientTime = (timeZoneOffset) => {\n    const clientTime = new Date(\n      currentTime.getTime() + timeZoneOffset * 60 * 60 * 1000\n    );\n    \n    return clientTime.toLocaleString(\"ru-RU\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: undefined \n    });\n  };\n\n  return (\n    <td className=\"TableHeaderItem\" style={{ maxWidth: \"60px\", textWrap: \"unset\"}}>\n      {calculateClientTime(lead.timeZone)}\n    </td>\n  );\n};\n","import { CustomCheckboxStyled } from \"../tableExternalLeads/tableExternalLeads.styled\";\nimport { ReactComponent as CheckedIcon } from \"../../../images/svg-icons/check.svg\";\nimport { ReactComponent as CheckBoxIcon } from \"../../../images/svg-icons/rectangle.svg\";\nimport { toggleAssignLeadsCheckboxState } from \"../../../redux/Lead/lead-slice\";\nimport { useDispatch } from \"react-redux\";\n\n\n\n\nexport const CustomAssignLeadCheckbox = ({selectedAssignLeadsCheckedCheckbox, lead}) => {\n    const dispatch = useDispatch();\n\n\n    const handleCheckboxChange = (_id) => {\n        dispatch(toggleAssignLeadsCheckboxState({_id}));\n    };\n\n\n    return(\n        <CustomCheckboxStyled>\n            <div className=\"custom-checkbox\">\n                <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"delete_external_lead\"\n                    id={lead._id}\n                    checked={selectedAssignLeadsCheckedCheckbox.includes(lead._id)}\n                    onChange={() => handleCheckboxChange(lead._id)}\n                />\n                <div className=\"custom-checkbox\">\n                    <CheckBoxIcon className=\"custom-checkbox-before\" width=\"16\" height=\"16\"/>\n                    <CheckedIcon className=\"custom-checkbox-after\" width=\"16\" height=\"16\"/>\n                </div>\n            </div>\n        </CustomCheckboxStyled>\n    );\n};","import { TableListStyled } from \"./tableLeads.styled\";\nimport { ReactComponent as ArrowDown } from \"../../../images/svg-icons/arrow-down.svg\";\n// import { DropdownTimeZone } from \"../tableComponents/dropdownTimeZone\";\n// import { DropdownStatus } from \"../tableComponents/dropdownStatus\";\nimport { InputWindow } from \"../tableComponents/inputWindow\";\nimport { NextCall } from \"../tableComponents/nextCall\";\nimport { TimeZone } from \"../tableComponents/timeZone\";\nimport { City } from \"../tableComponents/city\";\nimport { Region } from \"../tableComponents/region\";\nimport { Country } from \"../tableComponents/country\";\nimport { Status } from \"../tableComponents/status\";\nimport { useTableHook } from \"../tableHook.jsx/tableHook\";\nimport { useLead } from \"../../../hooks/useLead.js\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getLeadById,\n  patchStatus,\n  patchTimeZone,\n} from \"../../../redux/Lead/lead-operation.js\";\nimport { ClientTime } from \"../tableComponents/clientTime.jsx\";\nimport { useUser } from \"../../../hooks/useUser.js\";\nimport { useAuth } from \"../../../hooks/useAuth.js\";\nimport { openModalLeadDetail } from \"../../../redux/Modal/modal-slice.js\";\nimport { CustomAssignLeadCheckbox } from \"./CustomAssignLeadCheckbox.jsx\";\nimport { setLeadDetailsModalTrue } from \"../../../redux/Lead/lead-slice.js\";\n\n\n\nexport const TableLeads = () => {\n  const {\n    isLeads,\n    selectedAssignLeadsCheckedCheckbox,\n    leadOffice,\n  } = useLead();\n  const { \n    userBranch, \n    userRole, \n    isAdmin, \n    isConversion, \n    isManager, \n    isLoggedIn \n  } = useAuth();\n  const { userLeads, userLeadsComponent } = useUser();\n  const [leads, setLeads] = useState();\n\n  const dispatch = useDispatch(); \n\n\n  useEffect(() => {\n    if (userLeads || isLeads) {\n      setLeads(userLeadsComponent ? userLeads : isLeads);\n    }\n  }, [isLeads, userLeadsComponent, userLeads]);\n\n  const {\n    inputVisible,\n    inputRef,\n    dropdownRef,\n    setInputVisible,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  } = useTableHook();\n\n  const handleDropdownItemClick = (leadIndex, status, name, leadId) => {\n    const updatedLeads = [...leads];\n    if (name === \"timeZone\") {\n      dispatch(patchTimeZone({ id: leadId, leadTimeZone: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        timeZone: status,\n      };\n    } else if (name === \"status\") {\n      dispatch(patchStatus({ id: leadId, leadStatus: status }));\n      updatedLeads[leadIndex] = {\n        ...updatedLeads[leadIndex],\n        status: status,\n      };\n    }\n    setLeads(updatedLeads);\n    setInputVisible({ row: null, cell: null });\n  };\n\n\n  const openExternalLeadDetail = (_id) => {  \n    dispatch(openModalLeadDetail());\n    dispatch(setLeadDetailsModalTrue('Office'));\n    if(isLoggedIn && isAdmin){\n      dispatch(getLeadById({\n        leadId: _id,\n        branch: leadOffice,\n      }));\n    } else if(isLoggedIn && (isConversion || isManager)){\n      dispatch(getLeadById({leadId: _id}));\n    }\n  };\n\n\n  return (\n    <TableListStyled>\n      <table className=\"Table\">\n        <thead className=\"TableHeader\">\n          <tr className=\"TableHeaderList\">\n            <th className=\"TableHeaderItem\">Client Id</th>\n            <th className=\"TableHeaderItem\">Name</th>\n            <th className=\"TableHeaderItem\">Last Name</th>\n            <th className=\"TableHeaderItem\">Email</th>\n            <th className=\"TableHeaderItem\">Phone</th>\n            <th className=\"TableHeaderItem\">Status</th>\n            <th className=\"TableHeaderItem\">Source</th>\n            <th className=\"TableHeaderItem\">Country</th>\n            <th className=\"TableHeaderItem\">Region</th>\n            <th className=\"TableHeaderItem\">City</th>\n            <th className=\"TableHeaderItem\">Time Zone</th>\n            <th className=\"TableHeaderItem\">Client Time</th>\n            <th className=\"TableHeaderItem\">Self created</th>\n            <th className=\"TableHeaderItem\">Last update</th>\n            <th className=\"TableHeaderItem\">Created At</th>\n            {userRole !== \"Conversion Agent\" && <th className=\"TableHeaderItem\">Assign / Reassign Agent</th>}\n            {userRole !== \"Conversion Manager\" &&\n              userRole !== \"Conversion Agent\" && <th className=\"TableHeaderItem\">Assign / Reassign Manager</th>}\n            <th className=\"TableHeaderItem\">Next call</th>\n            <th className=\"TableHeaderItem\">Details</th>\n            {userBranch === \"Main\" && (\n              <th className=\"TableHeaderItem\">Check</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {leads &&\n            leads.map((lead, index) => (\n              <tr className=\"WordList\" key={lead._id}>\n                <td className=\"TableHeaderItem\">{lead.clientId}</td>\n                <td className=\"TableHeaderItem\">{lead.name}</td>\n                <td className=\"TableHeaderItem\">{lead.lastName}</td>\n                <td className=\"TableHeaderItem\">{lead.email}</td>\n                <td className=\"TableHeaderItem\">{lead.phone}</td>\n                <Status\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <td className=\"TableHeaderItem\">{lead.resource}</td>\n                <Country\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <Region\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <City\n                  index={index}\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <TimeZone\n                  lead={lead}\n                  ArrowDown={ArrowDown}\n                  toggleInputVisibility={toggleInputVisibility}\n                  index={index}\n                  toggleUserMenuDropArrow={toggleUserMenuDropArrow}\n                />\n                <ClientTime lead={lead} />\n                <td className=\"TableHeaderItem\">\n                  {lead.selfCreated ? \"Yes\" : \"No\"}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.updatedAt &&\n                    lead.updatedAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                <td className=\"TableHeaderItem\">\n                  {lead.createdAt &&\n                    lead.createdAt.slice(0, 16).replace(\"T\", \" \")}\n                </td>\n                {userRole !== \"Conversion Agent\" && \n                <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: !lead.agentId ? \"#ff000082\" : \"\" }}\n                >\n                  {!lead.agentId ? (\n                    'Not Assigned'\n                  ) : (\n                    lead.agentId.username\n                  )}\n                </td>}\n                {userRole !== \"Conversion Manager\" && userRole !== \"Conversion Agent\" && <td\n                  className=\"TableHeaderItem\"\n                  style={{ background: !lead.managerId ? \"#ff000082\" : \"\" }}\n                >\n                  {!lead.managerId ? (\n                    'Not Assigned'\n                  ) : (\n                    lead.managerId.username\n                  )}\n                </td>}\n                <NextCall lead={lead} />\n                                  <td className=\"TableHeaderItem\">\n                    <button className=\"check-btn\" type='button'\n                      onClick={() => openExternalLeadDetail(lead._id, lead.branch)}\n                    >Open\n                    </button>\n                  </td>\n                {userBranch === \"Main\" && (\n                  <td className=\"TableHeaderItem\">\n                    <CustomAssignLeadCheckbox\n                      lead={lead}\n                      selectedAssignLeadsCheckedCheckbox={\n                        selectedAssignLeadsCheckedCheckbox\n                      }\n                    />\n                  </td>\n                )}\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <InputWindow\n        leads={leads}\n        inputVisible={inputVisible}\n        inputRef={inputRef}\n        setLeads={setLeads}\n        handleTextareaChange={handleTextareaChange}\n        setInputVisible={setInputVisible}\n           dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      />\n      {/* <DropdownStatus\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      /> */}\n      {/* <DropdownTimeZone\n        inputVisible={inputVisible}\n        dropdownRef={dropdownRef}\n        handleDropdownItemClick={handleDropdownItemClick}\n      /> */}\n    </TableListStyled>\n  )\n};\n\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getStatus, getTimeZone } from \"../../../redux/Lead/lead-operation\";\nimport { useLead } from \"../../../hooks/useLead\";\n\n\nexport const useTableHook = () => {\n  const [isMenuBox, setMenuBox] = useState(false);\n  const [inputVisible, setInputVisible] = useState({ row: null, cell: null, leadId: null });\n  const [index, setIndex] = useState()\n  const inputRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dispatch = useDispatch();\n\n    const {\n    isLeads,\n    } = useLead();\n\n\n\n  const adjustTextareaHeight = (textarea) => {\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n\n  const handleTextareaChange = (event) => {\n    adjustTextareaHeight(event.target);\n  };\n\n\n  const toggleInputVisibility = (row, cell, leadId) => {\n    setIndex(leadId)\n    switch (cell) {\n      case \"status\":\n        dispatch(getStatus())\n        break;\n         case \"timeZone\":\n        dispatch(getTimeZone())\n        break;\n      default:\n    }\n\n        setMenuBox(isMenuBox === false ? row : false);\n    setInputVisible(\n      inputVisible.row === row && inputVisible.cell === cell\n        ? { row: null, cell: null }\n        : { row, cell, leadId }\n    );\n  };\n\n\n\n  const toggleUserMenuDropArrow = (row, cell) => {\n    return inputVisible.row === row && inputVisible.cell === cell\n      ? \"arrow-svg-close\"\n      : \"\";\n  };\n\n\n  useEffect(() => {\n    if (inputVisible.row !== null && inputVisible.cell !== null) {\n      const inputElement = document.getElementById(\n        `${inputVisible.cell}-${inputVisible.row}`\n      );\n      const inputContainer = inputRef.current;\n      const dropdownContainer = dropdownRef.current;\n      if (inputElement && (inputContainer || dropdownContainer)) {\n        const rect = inputElement.getBoundingClientRect();\n          if (inputContainer) {\n          inputContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          inputContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n        if (dropdownContainer) {\n          dropdownContainer.style.top = `${\n            rect.top + window.scrollY + rect.height\n          }px`;\n          dropdownContainer.style.left = `${rect.left + window.scrollX}px`;\n        }\n\n        if (dropdownContainer && inputVisible.cell === \"status\") {\n          dropdownContainer.style.display = \"grid\";\n          dropdownContainer.style.top = `${\n           isLeads[isLeads.length - 1]._id !== index? rect.top - dropdownRef.current.clientHeight * 0.9 : rect.top - dropdownRef.current.clientHeight * 1.11\n          }px`;\n          dropdownContainer.style.left = `${rect.right + window.scrollX}px`;\n        }\n        if (dropdownContainer && inputVisible.cell === \"timeZone\") {\n          dropdownContainer.style.display = \"flex\";\n          dropdownContainer.style.left = `${\n            (rect.right + window.scrollX) / 1.125\n          }px`;\n        }\n      }\n    }\n  }, [inputVisible, isLeads, index]);\n\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"Escape\") {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n    }\n  },[]);\n\n\n  const handleBackgroundClick = useCallback((event) => {\n    const target = event.target;\n    if (\n      !target.classList.contains(\"arrow-svg-close\") &&\n      ((inputRef.current && !inputRef.current.contains(event.target)) ||\n        (dropdownRef.current && !dropdownRef.current.contains(event.target)))\n    ) {\n      setMenuBox(false);\n      setInputVisible({ row: null, cell: null });\n      return;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    document.addEventListener(\"click\", handleBackgroundClick);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n      document.removeEventListener(\"click\", handleBackgroundClick);\n    };\n  }, [handleBackgroundClick, handleKeyPress]);\n\n\n  return {\n    inputVisible,\n    inputRef,\n    isMenuBox,\n    dropdownRef,\n    setInputVisible,\n    setMenuBox,\n    handleTextareaChange,\n    toggleUserMenuDropArrow,\n    toggleInputVisibility,\n  };\n};\n\n","import { StyledOfficeLeads } from \"./OfficeLeads.styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { resetOfficeLeadState } from \"../../redux/Lead/lead-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useLead } from \"../../hooks/useLead\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { Pagination } from \"../Pagination/Pagination\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\nimport { useModal } from \"../../hooks/useModal\";\n\n\n\n\nexport const OfficeLeads = () => {\n    const { isAdmin } = useAuth();\n    const { isLeadLoading, leadOffice } = useLead();\n    const { isLeadDetails } = useModal();\n    const { availableUsersForAssign, userLeadsComponent } = useUser()\n    const dispatch = useDispatch();\n    console.log(\"Users for Assign:\", availableUsersForAssign);\n    \n\n    const resetStateForLeads = () => {\n        if (leadOffice) {\n            dispatch(resetOfficeLeadState());\n        }\n        if (userLeadsComponent) {\n            dispatch(resetUserLeadsComponent());\n        }\n    };\n\n\n    return(\n        <StyledOfficeLeads>\n            <div className=\"wraper\">\n                {isAdmin && (\n                    <NavLink to='/' onClick={resetStateForLeads}>\n                        <h1>Back</h1>\n                    </NavLink>\n                )}\n                <div className=\"content-container\">\n                    {(isLeadLoading && !isLeadDetails) ? (\n                        <RotatingLoader/>\n                    ):(\n                        <TableLeads/>\n                    )}\n                    <Pagination/>\n                </div>\n            </div>\n        </StyledOfficeLeads>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const UserLeadsStyled = styled.div`\n    margin-top: 0.5rem;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    border-radius: 0.75rem;\n    background-color: ${p => p.theme.color.background};\n    box-shadow: 4px 0px 14px 5px rgba(227, 255, 168, 0.2);\n    padding: 0.75rem;\n\n\n    .wraper{\n        width: 100%;\n        border: 1px solid ${p => p.theme.color.primary_green_lite};\n        border-radius: 0.75rem;\n        padding: 0.75rem;\n        height: 90.5dvh;\n\n        @media screen and (min-width: 834px) {\n            height: 87.5dvh;\n        }\n    }\n\n    .nav-block{\n        display: flex;\n        align-items: center;\n        margin-bottom: 1rem;\n        justify-content: space-between;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .modal-button{\n        display: flex;\n        align-items: center;\n        background-color: transparent;\n        gap: 0.25rem;\n        font-weight: 600;\n        font-size: 1.25rem;\n        color: ${p => p.theme.color.primary_white};\n        transition: all ${p => p.theme.transition.main_transition};\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n\n    .link{\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n        transition: all ${p => p.theme.transition.main_transition};\n        max-width: 30%;\n\n        .svg{\n            width: 1.5rem;\n            height: 1.5rem;\n            transform: rotate(180deg);\n            stroke: ${p => p.theme.color.primary_white};\n        }\n\n        &:hover{\n            color: ${p => p.theme.color.primary_green_lite};\n        }\n        &:hover .svg{\n            stroke: ${p => p.theme.color.primary_green_lite};\n        }\n    }\n\n    .titles{\n        font-weight: 700;\n        font-size: 1.5rem;\n        text-align: center;\n    }\n`","import { UserLeadsStyled } from \"./UserLeads.styled\";\nimport {ReactComponent as ArrowSVG} from \"../../images/svg-icons/arrow-left.svg\";\nimport { openModalUserDetail } from \"../../redux/Modal/modal-slice\";\nimport { resetUserLeadsComponent } from \"../../redux/User/user-slice\"\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { TableLeads } from \"../table/tableLeads/tableLeads\";\nimport { RotatingLoader } from \"../CustomLoaders/CustomLoaders\";\n\n\n\nexport const UserLeads = () => {\n    const { userName, userLeadsComponentData, isUserLeadsLoading } = useUser();\n    const dispatch = useDispatch();  \n\n\n    const openUserModal = () => {\n        dispatch(openModalUserDetail())\n    };\n\n    const backToUsers = () => {\n        dispatch(resetUserLeadsComponent());\n    };\n    \n    \n    \n    return(\n        <UserLeadsStyled>\n            <div className=\"wraper\">\n                <div className=\"nav-block\">\n                    <button type='button' \n                        className=\"modal-button\" \n                        onClick={openUserModal}\n                    >\n                        <ArrowSVG className=\"svg\"/>\n                        Back to User Information\n                    </button>\n                    <NavLink className=\"link\" to='/users' onClick={backToUsers}>\n                        Back to Users\n                        <ArrowSVG className=\"svg\"/>\n                    </NavLink>\n                </div>\n                <h1 className=\"titles\">{userName} all {userLeadsComponentData} Leads details</h1>\n                {isUserLeadsLoading ? (\n                    <RotatingLoader/>\n                ) : (\n                    <TableLeads/>\n                )}\n            </div>\n        </UserLeadsStyled>\n    );\n};","import { OfficeLeads } from \"../components/OfficeLeads/OfficeLeads\";\nimport { UserLeads } from \"../components/OfficeLeads/UserLeads\";\nimport { useUser } from \"../hooks/useUser\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAvailableUsers } from \"../redux/User/user-operation\";\n\n\n\nconst OfficeLeadsPage = () => {\n    const dispatch = useDispatch();\n    const { userLeadsComponent } = useUser();\n    const { isAdmin, forNoneAdminLogin} = useAuth();\n\n\n    useEffect(() => {\n        if (!forNoneAdminLogin && !userLeadsComponent && !isAdmin) {\n            dispatch(getAvailableUsers());\n        }\n    },[dispatch, forNoneAdminLogin, isAdmin, userLeadsComponent]);\n    \n\n\n    return(\n        <>\n            {userLeadsComponent ? (\n                <UserLeads/>\n            ) : (\n                <OfficeLeads/>\n            )}\n        </>\n    );\n};\n\n\nexport default OfficeLeadsPage;"],"names":["_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","StyledOfficeLeads","styled","div","_templateObject","_taggedTemplateLiteral","p","theme","color","background","primary_green_lite","TableListStyled","primary_white","background2","background3","primary_black","transition","main_transition","primary_grey","_templateObject2","InputWindow","leads","inputVisible","inputRef","setLeads","handleTextareaChange","setInputVisible","dropdownRef","handleDropdownItemClick","dispatch","useDispatch","newText","setNewText","useState","status","tstatusData","timeZone","timeZoneData","isStatusLoading","isTimeZoneLoading","isStatusError","useLead","loading","_jsx","children","_jsxs","_Fragment","row","cell","className","value","onChange","event","onInput","type","onClick","e","handleSubmit","leadIndex","fieldName","leadId","preventDefault","patchCityLead","leadCity","then","response","payload","name","updatedLeads","city","patchRegionLead","leadRegion","region","patchCountryLead","leadCountry","country","split","map","load","item","zona","NextCall","lead","newDate","setNewDate","useEffect","nextCall","toString","slice","updatedDate","patchNextCall","_id","leadNextcall","TimeZone","ArrowDown","toggleInputVisibility","index","toggleUserMenuDropArrow","concat","City","Region","Country","Status","ClientTime","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","style","maxWidth","textWrap","timeZoneOffset","getTime","toLocaleString","year","month","day","hour","minute","second","undefined","CustomAssignLeadCheckbox","selectedAssignLeadsCheckedCheckbox","CustomCheckboxStyled","checked","includes","handleCheckboxChange","toggleAssignLeadsCheckboxState","CheckBoxIcon","CheckedIcon","TableLeads","isLeads","leadOffice","userBranch","userRole","isAdmin","isConversion","isManager","isLoggedIn","useAuth","userLeads","userLeadsComponent","useUser","useTableHook","isMenuBox","setMenuBox","setIndex","useRef","inputElement","document","getElementById","inputContainer","current","dropdownContainer","rect","getBoundingClientRect","top","window","scrollY","left","scrollX","display","clientHeight","right","handleKeyPress","useCallback","handleBackgroundClick","classList","contains","addEventListener","removeEventListener","textarea","scrollHeight","getStatus","getTimeZone","clientId","lastName","email","phone","resource","selfCreated","updatedAt","replace","createdAt","agentId","username","managerId","openExternalLeadDetail","branch","openModalLeadDetail","setLeadDetailsModalTrue","getLeadById","patchTimeZone","leadTimeZone","patchStatus","leadStatus","OfficeLeads","isLeadLoading","isLeadDetails","useModal","availableUsersForAssign","console","log","NavLink","to","resetStateForLeads","resetOfficeLeadState","resetUserLeadsComponent","RotatingLoader","Pagination","UserLeadsStyled","UserLeads","userName","userLeadsComponentData","isUserLeadsLoading","openUserModal","openModalUserDetail","ArrowSVG","backToUsers","OfficeLeadsPage","forNoneAdminLogin","getAvailableUsers"],"sourceRoot":""}