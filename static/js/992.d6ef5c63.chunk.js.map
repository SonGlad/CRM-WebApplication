{"version":3,"file":"static/js/992.d6ef5c63.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/RegisterPage/Register.styled.js","components/RegisterPage/Register.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\nimport BackGroundWelcome from \"../../images/images/welcome.jpg\"\nimport BackGroundLogin from \"../../images/images/login.jpg\";\nimport BackGroundRegister from \"../../images/images/register.jpg\"\n\n\nexport const SectionStyle = styled.section`\n\n`\n\nexport const WelcomeSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.5), \n        rgba(46, 47, 66, 0.5)), \n        url(${BackGroundWelcome});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const RegisterSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundRegister});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`\n\nexport const LoginSectionStyled = styled.section`\n    background-image: linear-gradient(rgba(46, 47, 66, 0.7), \n        rgba(46, 47, 66, 0.7)), \n        url(${BackGroundLogin});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100dvh;\n    width: 100%;\n    margin-top: -3.5rem;\n\n    @media screen and (min-width: 834px){\n        margin-top: -4.85rem;\n    }\n    @media screen and (min-width: 1440px){\n        margin-top: -5.1rem;\n    }\n`","import {\n    SectionStyle,\n    WelcomeSectionStyled,\n    RegisterSectionStyled,\n    LoginSectionStyled\n} from './Section.styled';\n\n\nexport const Section = ({children}) => {\n    return (\n        <SectionStyle>\n            {children}\n        </SectionStyle>\n    );\n};\n\nexport const WelcomeSection = ({children}) => {\n    return (\n        <WelcomeSectionStyled>\n            {children}\n        </WelcomeSectionStyled>\n    );\n};\n\nexport const RegisterSection = ({children}) => {\n    return (\n        <RegisterSectionStyled>\n            {children}\n        </RegisterSectionStyled>\n    );\n};\n\n\nexport const LoginSection = ({children}) => {\n    return (\n        <LoginSectionStyled>\n            {children}\n        </LoginSectionStyled>\n    );\n};","import styled from \"styled-components\";\nimport error from '../../images/svg-icons/error.svg';\nimport correct from '../../images/svg-icons/correct.svg';\nimport eye from '../../images/svg-icons/eye.svg';\nimport eye_off from '../../images/svg-icons/eye-off.svg';\n\n\nexport const StyledRegister = styled.div`\n    width: 100%;\n    height: 100dvh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    @media only screen and (min-width: 1440px) {\n        align-content: flex-end;\n        flex-wrap: wrap;\n        padding-right: 9.375rem;\n    }\n\n    .TitleContainer{\n        @media only screen and (min-width: 1440px) {\n           max-width: 37.5rem;\n        } \n    }\n\n    .singup-title{\n        font-size: 2.125rem;\n        font-weight: 600;\n        line-height: 2.5rem;\n        text-align: center;\n\n        @media only screen and (min-width: 834px) {\n            font-size: 2.25rem;\n            line-height: 2.875rem;\n        }\n\n        @media only screen and (min-width: 1440px) {\n            font-size: 2.5rem;\n            line-height: 3.125rem;\n        }\n    }\n\n    .title-text{\n        color: ${props => props.theme.color.primary_white};\n        font-size: 1.125rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 1.5rem;\n        margin-top: 1.25rem;\n        text-align: center;\n        margin-bottom: 1.25rem;\n\n        @media only screen and (min-width: 834px) {\n            font-size: 1.375rem;\n            line-height: 2rem;\n        }\n        @media only screen and (min-width: 1440px) {\n            font-size: 1.75rem;\n            line-height: 2.5rem;\n        }\n    }\n\n    .register-form{\n        width: 100%;\n        max-width: 31.25rem;\n        border-radius: 1.25rem;\n        background-color: rgba(255, 255, 255, 0);\n        backdrop-filter: blur(5px); \n        box-shadow: 0px 0px 5px 5px rgba(255,255,255,0.5);\n        margin-bottom: 3.75rem;\n        display: flex;\n        flex-direction: column;\n        gap: 2rem;\n        padding: 1.25rem;\n\n        @media screen and (min-width: 834px){\n            max-width: 37.5rem;\n            padding: 1.875rem;\n        }\n        @media screen and (min-width: 1440px){\n            max-width: 37.5rem;\n            padding: 2.5rem;\n        }\n    }\n\n\n    .DivInput {\n        position: relative;\n    }\n\n    input {\n        position: relative;\n        width: 100%;\n        padding: 0.5rem 0.625rem;\n        border-radius: 0.75rem;\n        border: 1px solid ${props => props.theme.color.primary_green_lite};\n        background: ${props => props.theme.color.primary_black_2};\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.25rem;\n        color: ${props => props.theme.color.primary_white};\n\n        &:focus {\n            outline: none;\n            box-shadow: none;\n        }\n    }\n\n    .ErrorInput {\n        border: 1px solid ${p => p.theme.color.error_color};\n    }\n\n    .SuccessInput {\n        border: 1px solid ${p => p.theme.color.success_color};\n    }\n\n    .ImgError {\n        position: absolute;\n        right: 0.625rem;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 1rem;\n        height: 1rem;\n        background-image: url(${error});\n    }\n\n    .ImgCorrect {\n        position: absolute;\n        right: 0.625rem;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 1rem;\n        height: 1rem;\n        background-image: url(${correct});\n    }\n\n    .ErrorText {\n        position: absolute;\n        margin-top: 0.25rem;\n        margin-left: 0.625rem;\n        color: ${p => p.theme.color.error_color};\n        font-size: 0.75rem;\n        font-weight: 400;\n        line-height: 0.875rem;\n\n        @media only screen and (min-width: 1440px) {\n            max-width: 12.5rem;\n        }\n    }\n\n    .SuccessText {\n        position: absolute;\n        margin-top: 0.25rem;\n        margin-left: 0.625rem;\n        color: ${p => p.theme.color.success_color};\n        font-size: 0.75rem;\n        font-weight: 400;\n        line-height: 0.875rem;\n\n        @media only screen and (min-width: 1440px) {\n            max-width: 12.5rem;\n        }\n    }\n\n    .DivInput:hover .ShowPassword,\n    .DivInput:hover .HidePassword {\n        display: block;\n    }\n\n    .DivInput:hover input[name='password'] {\n        border: 1px solid ${props => props.theme.color.primary_green_lite};\n    }\n\n    .DivInput[id='password']:hover .ImgError,\n    .DivInput[id='password']:hover .ImgCorrect,\n    .DivInput[id='password']:hover .ErrorText,\n    .DivInput[id='password']:hover .SuccessText {\n        display: none;\n    }\n\n    .ShowPassword {\n        display: none;\n        position: absolute;\n        right: 0.625rem;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 1rem;\n        height: 1rem;\n        background-image: url(${eye_off});\n    }\n\n    .HidePassword {\n        display: none;\n        position: absolute;\n        right: 0.625rem;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 1rem;\n        height: 1rem;\n        background-image: url(${eye});\n    }\n\n    input::placeholder {\n        color: ${props => props.theme.color.primary_grey};\n    }\n\n    .ButtonNext {\n        margin-top: 0.5rem;\n        border-radius: 075rem;\n        color: ${props => props.theme.color.primary_black_2};\n        background: ${props => props.theme.color.primary_green_lite};\n        padding: 0.5rem 0.625rem;\n        font-weight: 500;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        cursor: pointer;\n        transition: color ${p => p.theme.transition.main_transition};\n\n        &:active,\n        &:hover {\n            color: ${props => props.theme.color.primary_grey};\n        }\n\n        &:disabled {\n            color: ${(props) => props.theme.color.primary_grey};\n            pointer-events: none;\n        }\n    }\n\n    .DivContainerSingIn {\n        margin-top: 3rem;\n\n        @media only screen and (min-width: 834px) {\n            display: flex;\n            align-items: baseline;\n            gap: 1rem;\n        }\n    }\n\n    .SingInText {\n        color: ${props => props.theme.color.primary_grey};\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 1.25rem;\n\n        @media only screen and (min-width: 834px) {\n            font-size: 1.375rem;\n            line-height: 2rem;\n        }\n        @media only screen and (min-width: 1440px) {\n            font-size: 1.75rem;\n            line-height: 2.5rem;\n        }\n    }\n\n    .LinkToSingIn {\n        font-weight: 500;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        margin-top: 1rem;\n        transition: color ${p => p.theme.transition.main_transition};\n\n        &:active,\n        &:hover {\n            color: ${props => props.theme.color.primary_green_lite};\n        }\n\n        @media only screen and (min-width: 834px) {\n            font-size: 1.375rem;\n            line-height: 2rem;\n        }\n        @media only screen and (min-width: 1440px) {\n            font-size: 1.75rem;\n            line-height: 2.5rem;\n        }\n    }\n`","import { StyledRegister } from \"./Register.styled\";\nimport { useFormik } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport { SignupSchema } from \"../../utils/validationSchemas\";\nimport { ShowRules } from \"../../utils/showRules\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/Auth/auth-operation\";\n\n\nexport const Register = () => {\n    const [formChanged, setFormChanged] = useState(false);\n    const dispatch = useDispatch();\n    const {\n    values,\n    errors,\n    touched,\n    isValid,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    resetForm,\n    } = useFormik({\n        initialValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n        },\n\n        validationSchema: SignupSchema,\n\n        onSubmit: (values) => {\n            dispatch(register({\n                username: values.name,\n                email: values.email,\n                password: values.password\n            }))\n            resetForm();\n        },\n    });\n\n    const {\n        showPassword,\n        getInputClass,\n        getInputAlert,\n        getHidePassword,\n    } = ShowRules(values, touched, errors);\n\n\n    useEffect(() => {\n        if (\n          values.email !== '' ||\n          values.password !== '' ||\n          values.name !== ''\n        ) {\n            setFormChanged(true);\n        } \n    },[values.email, values.name, values.password]);\n\n\n    return(\n        <StyledRegister>\n            <div className=\"TitleContainer\">\n                <h1 className=\"singup-title\">Sign up</h1>\n                <p className=\"title-text\">You need to register to use the service</p>\n            </div>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                <div className=\"DivInput\">\n                    <input\n                        className={getInputClass(\"name\")}\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        onChange={handleChange}\n                        value={values.name.trim()}\n                        onBlur={handleBlur}\n                    />\n                    {getInputAlert(\"name\")}\n                </div>\n                <div className=\"DivInput\">\n                    <input\n                        className={getInputClass(\"email\")}\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"E-mail\"\n                        type=\"email\"\n                        onChange={handleChange}\n                        value={values.email.trim()}\n                        onBlur={handleBlur}\n                    />\n                    {getInputAlert(\"email\")}\n                </div>\n                <div className=\"DivInput\" id=\"password\">\n                    <input\n                        className={getInputClass(\"password\")}\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        onChange={handleChange}\n                        value={values.password.trim()}\n                        onBlur={handleBlur}\n                        onKeyDown={handleChange}\n                    />\n                    {getInputAlert(\"password\")}\n                    {values.password && getHidePassword()}\n                </div>\n                <button className=\"ButtonNext\" \n                    type=\"submit\" \n                    disabled={!isValid || !formChanged}\n                    >\n                    Sign Up\n                </button>\n            </form>\n\n            <div className=\"DivContainerSingIn\">\n                <p className=\"SingInText\">Do you already have an account?</p>\n                <div className=\"LinkToSingIn\">\n                    <NavLink to=\"/signin\">Sign in</NavLink>\n                </div>\n            </div>\n        </StyledRegister>\n    );\n};","import { Register } from \"../components/RegisterPage/Register\";\nimport { RegisterSection } from \"../components/Section/Section\";\nimport { Container } from \"../components/Container/Container\";\n\n\nconst RegisterPage = () => {\n\n    return (\n        <RegisterSection>\n            <Container>\n              <Register/>\n            </Container>\n        </RegisterSection>\n    );\n};\n\n\nexport default RegisterPage;"],"names":["styled","section","_templateObject","_taggedTemplateLiteral","WelcomeSectionStyled","_templateObject2","BackGroundWelcome","RegisterSectionStyled","_templateObject3","BackGroundRegister","LoginSectionStyled","_templateObject4","BackGroundLogin","WelcomeSection","_ref2","children","_jsx","RegisterSection","_ref3","LoginSection","_ref4","StyledRegister","div","props","theme","color","primary_white","primary_green_lite","primary_black_2","p","error_color","success_color","error","correct","eye_off","eye","primary_grey","transition","main_transition","Register","formChanged","setFormChanged","useState","dispatch","useDispatch","values","errors","touched","isValid","handleBlur","handleChange","handleSubmit","resetForm","useFormik","initialValues","name","email","password","validationSchema","SignupSchema","onSubmit","register","username","showPassword","getInputClass","getInputAlert","getHidePassword","ShowRules","useEffect","_jsxs","className","id","placeholder","type","onChange","value","trim","onBlur","onKeyDown","disabled","NavLink","to","RegisterPage","Container"],"sourceRoot":""}